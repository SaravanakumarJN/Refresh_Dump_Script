{
  "questions": [
    {
      "type": "MCQ",
      "statement": "State whether the given statement is true or false. !DOCTYPE is case sensitive”.",
      "explanation": "XML is a case sensitive while HTML is case insensitive. So the declaration “!DOCOTYPE” is case sensitive in XML and it is not case sensitive in HTML, we can write the “!DOCTYPE” declaration in both lowercase and uppercase, thus both are valid.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Choose the correct statement.",
      "explanation": "In XHTML all elements must always be closed and empty elements also be closed. XHTML close tags are not optional neither they are encouraged. HTML is case insensitive and thus closing tags for some elements including empty elements is optional and is ignored by browsers.",
      "options": [
        {
          "text": "In traditional XHTML close tag for some elements is optional but not encouraged",
          "correct": false
        },
        {
          "text": "In traditional HTML close tag for some elements is optional but not encouraged",
          "correct": true
        },
        {
          "text": "In both traditional XHTML and HTML close tag for some elements is not optional",
          "correct": false
        },
        {
          "text": "In both traditional XHTML and HTML close tag for some elements is optional",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following XHTML doctype declaration contains all HTML elements and attributes, including presentational and deprecated elements (like font) but not framesets?",
      "explanation": "The !DOCTYPE declaration is not an HTML tag; it is an instruction to the web browser about what version of HTML the page is written in. The XHTML doctype declaration “!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Strict//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd”” is of XHTML 1.0 strict, “!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Transitional//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd”” is of XHTML 1.0 transitional, “!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Frameset//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd”” is of XHTML 1.0 frameset and “<!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.1//EN” “http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd”>” is of XHTML 1.1.",
      "options": [
        {
          "text": "!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Strict//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd”",
          "correct": false
        },
        {
          "text": "!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Transitional//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd”",
          "correct": true
        },
        {
          "text": "!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Frameset//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd”",
          "correct": false
        },
        {
          "text": "<!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.1//EN” “http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd”>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a difference between HTML and XHTML?",
      "explanation": "HTML is case insensitive while XHTML is case sensitive. In XHTML, special characters can be escaped using character entites but not in HTML. Charset in HTML is “text/html” where as it is “application/xml+xhtml” for XHTML.",
      "options": [
        {
          "text": "Charset in html is “text/html” where as in xhtml it is “application/xml+xhtml”",
          "correct": false
        },
        {
          "text": "Charset in both html and xhtml is “text/html”",
          "correct": true
        },
        {
          "text": "Tags and attributes are case-insensitive in HTML but not in XHTML",
          "correct": false
        },
        {
          "text": "Special characters must be escaped using character entities in XHTML unlike HTML",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What indicates the content in file is HTML when delivered on the network.",
      "explanation": "Content-type: header indicates the content in the file is HTML and we can see file content through it when delivered on the network. “.html” is the file extension for HTML.",
      "options": [
        {
          "text": "The extension of the file “.html”",
          "correct": false
        },
        {
          "text": "The “content-type” header",
          "correct": true
        },
        {
          "text": "Both “.html” extension and “content-type” header",
          "correct": false
        },
        {
          "text": "The “content_type” header",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "State whether the given statement is true or false. “We can intermix XHTML and HTML 4.01 documents”",
      "explanation": "HTML is not in XML format. You have to make the changes necessary to make the document proper XML before you can get it accepted as XML.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "HTML and XHTML stands for ______",
      "explanation": "HTML stands for “Hyper Text Markup Language” and XHTML stand for “Extensible HyperText Markup Language”.",
      "options": [
        {
          "text": "Hyper Text Markup Language and Extensible HyperText Markup Language",
          "correct": true
        },
        {
          "text": "Hyper Text Markup Language and Extensible HyperText Marking Language",
          "correct": false
        },
        {
          "text": "Hyper Text Marking Language and EXtensible HyperText Marking Language",
          "correct": false
        },
        {
          "text": "Hyper Text Marking Language and Extensible HyperText Markup Language",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Choose the correct tag for the largest heading in HTML.",
      "explanation": "Headings in HTML starts from <h1> to <h6> in which <h1> heading is the largest one and <h6> is smallest one among those. The heading tags are <h1> <h2> <h3> <h4> <h5> and <h6> that are used for the creations of headings.",
      "options": [
        {
          "text": "h6",
          "correct": false
        },
        {
          "text": "heading",
          "correct": false
        },
        {
          "text": "h1",
          "correct": true
        },
        {
          "text": "head",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following are table tags?",
      "explanation": "Table has different tags such as table, thead, tr, td, etc whereas colospan is an attribute of table.",
      "options": [
        {
          "text": "table, thead, tr, td",
          "correct": true
        },
        {
          "text": "colspan, table, tr",
          "correct": false
        },
        {
          "text": "table, tt, tr, td",
          "correct": false
        },
        {
          "text": "thead, colspan, td, tr",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Choose the correct HTML for width attribute and its value.",
      "explanation": "Always mention the attribute value in quotes in HTML. It is one of the rule of HTML attributes.",
      "options": [
        {
          "text": "width=80",
          "correct": false
        },
        {
          "text": "width=”80″",
          "correct": true
        },
        {
          "text": "WIDTH=”80″",
          "correct": false
        },
        {
          "text": "WIDTH=80",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following prints bold letters in traditional HTML?\n\ni. <B>Go boldly</B>\nii. <B>Go boldly</b>\niii. <b>Go boldly</B>\niv. <b>Go boldly</b>\n",
      "explanation": "Traditional HTML is case insensitive and thus we can write tag/element name either in lowercase or uppercase or both which will be ignored by browser by default.",
      "options": [
        {
          "text": "iv",
          "correct": false
        },
        {
          "text": "i",
          "correct": false
        },
        {
          "text": "i, ii, iii, and iv",
          "correct": true
        },
        {
          "text": "both iv and i",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "XHTML is case insensitive and HTML is case sensitive.",
      "explanation": "Traditionally XHTML is case sensitive while HTML is case insensitive. In HTML these are ignored by default by browsers.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What output do you expect if the following markup is rendered?\n\n<strong>T   e    s   t   o  f  s  p  a  c  e  s</strong><br>\n<strong>T e s t &nbsp;o f&nbsp; s p a c e s </strong><br>\n",
      "explanation": "The strong tag is used to highlight the importance of text/paragraph. <br> tag is used for a line break in HTML. Ant white space between characters displays as a single space.",
      "options": [
        {
          "text": "T e s t o f s p a c e s\nT e s t o f s p a c e s",
          "correct": false
        },
        {
          "text": "Testofspaces\nTestofspaces",
          "correct": false
        },
        {
          "text": "T e s t o f s p a c e s\nT e s t  o f  s p a c e s",
          "correct": true
        },
        {
          "text": "T e s t o f s p a c e s  T e s t  o f  s p a c e s",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following options follows content model in HTML?\n\ni.<ul>\n     <p>Option one </p>\n  </ul>\nii.<ul>\n     <li>Option two </li>\n  </ul>",
      "explanation": "Content model specifies that certain elements are supposed to occur only within other elements. The <ul> tag which is for unordered list should contain <li> tags which are for list specification. The <p> tag is used for paragraph in HTML.",
      "options": [
        {
          "text": "i",
          "correct": false
        },
        {
          "text": "ii",
          "correct": true
        },
        {
          "text": "i and ii",
          "correct": false
        },
        {
          "text": "Neither i nor ii",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not an empty element?",
      "explanation": "An element is said to be empty if it doesn’t contain any content in it. The <hr/> and <br/> tag which is used for a horizontal line and line break respectively, doen’t contains any content in it and thus are called empty elements in HTML. <p> tag contains text/paragraph in it so it’s not an empty element.",
      "options": [
        {
          "text": "<hr/>",
          "correct": false
        },
        {
          "text": "<br/>",
          "correct": false
        },
        {
          "text": "<p/>",
          "correct": true
        },
        {
          "text": "Both <hr/> and <br/>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "State true or false.\n\n<p></p><p></p><p></p>produces numerous blank lines.",
      "explanation": "As a block tag, <p> induces a return by default, but when used repeatedly, like <p></p><p></p>, it does not have any effect on document.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following markup is correct?\n\ni. <b><i>is in error as tags cross</b></i>\nii. <b><i>is not since tags nest</i></b>",
      "explanation": "In markup, tags can be nested. The first tag who is going to nest other tag must end after that nested tag which means if <i> tag is nested in <b> tag then <b> must be closed after closing of the <i> tag.",
      "options": [
        {
          "text": "i",
          "correct": false
        },
        {
          "text": "ii",
          "correct": true
        },
        {
          "text": "i and ii",
          "correct": false
        },
        {
          "text": "Neither i nor ii",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a correct (X)HTML rule?",
      "explanation": "Rules of XHTML are as- 1) XHTML elements must be properly nested\n2) XHTML elements must always be closed\n3) XHTML elements must be in lowercase\n4) XHTML documents must have one root element\n5) Attribute names must be in lower case\n6) Attribute values must be quoted\n7) Attribute minimization is forbidden\n",
      "options": [
        {
          "text": "Attributes should be quoted",
          "correct": false
        },
        {
          "text": "Tags should not nest tag",
          "correct": false
        },
        {
          "text": "Attribute minimization is forbidden",
          "correct": false
        },
        {
          "text": "Unknown attributes are not ignored by the browser",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Choose the incorrect escape character entity.",
      "explanation": "Character escapes in markup is to represent any Unicode character in HTML, XHTML or XML using only ASCII characters. There are different types of escape character entity in HTML. Some of them are > which is used for greater than(>) , > is basically a entity number which is used for greater than(>), < stands for less than(<), etc. There doesn’t exist any &st escape character entity in markup.",
      "options": [
        {
          "text": "&gt;",
          "correct": false
        },
        {
          "text": "&#62;",
          "correct": false
        },
        {
          "text": "&lt;",
          "correct": false
        },
        {
          "text": "&st;",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Identify the count of mistakes in the following markup.\n\n<html>\n<head>\n</head>\n<body>\n<li>\n   <ul><p>Hello</p></ul>\n</li>\n<br>\n<hr>\n</body>\n</html>",
      "explanation": "We can write <p></p> tag in <ul></ul> tag as there is no such rule or else limitation. The tags <br> and <hr> are closed by default in browser.",
      "options": [
        {
          "text": "2",
          "correct": false
        },
        {
          "text": "3",
          "correct": true
        },
        {
          "text": "1",
          "correct": false
        },
        {
          "text": "0",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "A Rendering engine is not responsible for ________",
      "explanation": "A rendering engine is a software that draws text and images on the screen. The engine draws structured text from a document (HTML, XML) and formats it properly based on the given style declarations (CSS, XSL, etc). The primary job of a browser engine is to transform HTML documents and other resources of a web page into an interactive visual representation on a user’s device.",
      "options": [
        {
          "text": "parsing the markup content (HTML)",
          "correct": false
        },
        {
          "text": "parsing style information (CSS, XSL, and so on)",
          "correct": false
        },
        {
          "text": "generating a visual presentation of the formatted content including media files referenced",
          "correct": false
        },
        {
          "text": "parsing style information (CSS only)",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Firefox uses _________ rendering engine.",
      "explanation": "Gecko is a web browser engine used in many applications developed by Mozilla Foundation and the Mozilla Corporation as well as in many other open source software projects. Gecko is free and open-source software subject to the terms of the Mozilla Public License version 2.",
      "options": [
        {
          "text": "WebKit",
          "correct": false
        },
        {
          "text": "Gecko",
          "correct": true
        },
        {
          "text": "Trident",
          "correct": false
        },
        {
          "text": "Presto",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "State true or false. It is faster to render HTML and CSS than to interpret and execute JavaScript.",
      "explanation": "When it comes to ordering your CSS and JavaScript, you want your CSS to come first. The reason is that the rendering thread has all the style information it needs to render the page. If the JavaScript includes come first, the JavaScript engine has to parse it all before continuing on to the next set of resources.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the use of “defer” attribute?",
      "explanation": "The defer attribute is a boolean attribute. The script is executed after the page has finished parsing. The defer attribute is used if and only if there is src attribute. Defer is for external not internal scripts.",
      "options": [
        {
          "text": "It defers rendering of html page",
          "correct": false
        },
        {
          "text": "It defers script execution until the page has been rendered",
          "correct": true
        },
        {
          "text": "It defers rendering of css attributes",
          "correct": false
        },
        {
          "text": "It is only for internal scripts",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following statements is false?",
      "explanation": "In async attribute, the script is executed asynchronously with the rest of the page (the script will be executed while the page continues the parsing). Defer, the Boolean attribute is set to indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing DOMContentLoaded event. Older browsers doesn’t support async attribute.",
      "options": [
        {
          "text": "async and defer attributes of script tag execute before the DOMContentLoaded event",
          "correct": false
        },
        {
          "text": "defer executes each script sequentially",
          "correct": false
        },
        {
          "text": "async executes each script when it is ready",
          "correct": false
        },
        {
          "text": "all older browsers supports async attribute",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is used to read a HTML page and render it?",
      "explanation": "A web browser (commonly referred to as a browser) is a software application for retrieving, presenting and traversing information resources on the World Wide Web. A web server process, store and display output to client as per their request. Web matrix is a discontinued cloud-connected website builder and HTML editor for Windows.",
      "options": [
        {
          "text": "Web browser",
          "correct": true
        },
        {
          "text": "Web server",
          "correct": false
        },
        {
          "text": "Web matrix",
          "correct": false
        },
        {
          "text": "Web network",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the first web browser?",
      "explanation": "The first web browser was invented in 1990 called World Wide Web which was later renamed to Nexus. In 1995, a graphical web browser named Internet Explorer was developed. The Netscape is a web browser  produced by Netscape Communications. NCSA Mosaic, or Mosaic, is the web browser which in turn popularized World Wide Web.",
      "options": [
        {
          "text": "Nexus",
          "correct": true
        },
        {
          "text": "Netscape Navigator",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": false
        },
        {
          "text": "Mosaic",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Who created the first web browser",
      "explanation": "Sir Timothy John “Tim” Berners-Lee, also known as TimBL, is an English computer scientist, best known as the inventor of the World Wide Web. He made a proposal for an information management system in March 1989, and he implemented the first successful communication between a Hypertext Transfer Protocol (HTTP) client and server via the Internet sometime around mid-November of that same year.",
      "options": [
        {
          "text": "Tim Berners Lee",
          "correct": true
        },
        {
          "text": "Jacobs, Lan",
          "correct": false
        },
        {
          "text": "Marc Andeersen",
          "correct": false
        },
        {
          "text": "Mozilla foundation",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Nexus is first graphical web browser.",
      "explanation": "Mosaic was the first browser to display images inline with text instead of displaying images in a separate window, while often described as the first graphical web browser.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " The open source software version of netscape is _________",
      "explanation": "On February 23, 1998, Netscape Communications Corporation created a project called Mozilla to co-ordinate the development of the Mozilla Application Suite, the open source version of Netscape’s internet software, Netscape Communicator.",
      "options": [
        {
          "text": "Chrome",
          "correct": false
        },
        {
          "text": "Mozilla",
          "correct": true
        },
        {
          "text": "Internet Explorer",
          "correct": false
        },
        {
          "text": "Erwise",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not an IDE?",
      "explanation": "Dreamweaver is an Integrated Development Environment (IDE) tool. Aptana Studio 3 is an open-source integrated development environment (IDE) used for web applications. BlueGriffon 1.5.2 is an integrated development environment powered by Gecko. TextEdit is a simple, open-source word processor.",
      "options": [
        {
          "text": "BlueGriffon 1.5.2",
          "correct": false
        },
        {
          "text": "Aptana studio 3",
          "correct": false
        },
        {
          "text": "TextEdit(Mac)",
          "correct": true
        },
        {
          "text": "Dreamweaver",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "IDE stands for _________",
      "explanation": "An integrated development environment (IDE) or interactive development environment is a software application that provides comprehensive facilities to computer programmers for software development. An IDE normally consists of a source code editor, build automation tools and a debugger.",
      "options": [
        {
          "text": "Internet Development Environment",
          "correct": false
        },
        {
          "text": "Integrated Development Environment",
          "correct": true
        },
        {
          "text": "Intelligent Development Environment",
          "correct": false
        },
        {
          "text": "Integrated Developed Environment",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "We can define ________ number of sites with one copy of dreamweaver installed on our computer.",
      "explanation": "Dreamweaver is an IDE to build custom web apps and applications. There is no definite liit to it.",
      "options": [
        {
          "text": "990",
          "correct": false
        },
        {
          "text": "10",
          "correct": false
        },
        {
          "text": "only 1",
          "correct": false
        },
        {
          "text": "unlimited",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What should we add to a template in Dreamweaver in order to control where page content goes?",
      "explanation": "A template is a special type of document that you use to design a “fixed” page layout; you can then create documents based on the template that inherit its page layout. Editable template regions control which areas of a template-based page a user can edit. Frames appear inside a web page.",
      "options": [
        {
          "text": "Editable Regions",
          "correct": true
        },
        {
          "text": "HTML controllers",
          "correct": false
        },
        {
          "text": "Frames",
          "correct": false
        },
        {
          "text": "Content Controllers",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Blue Griffon is based on ________ rendering engine.",
      "explanation": "BlueGriffon is a new WYSIWYG content editor for the World Wide Web. Powered by Gecko, the rendering engine of Firefox, it’s a modern and robust solution to edit Web pages in conformance to the latest Web Standards. WebKit is a browser engine used in safari. Presto is a dynamic engine.",
      "options": [
        {
          "text": "WebKit",
          "correct": false
        },
        {
          "text": "Gecko",
          "correct": true
        },
        {
          "text": "Presto",
          "correct": false
        },
        {
          "text": "Mecko",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Swapping images in dreamweaver is best if __________",
      "explanation": "Before you start creating a more complex page design with Dreamweaver’s Swap Image behavior, look at a finished page. Swapping means replacing any or all images on the page. While swapping images, it is important to make all images of same size (height and width). MIME stands for “Multipurpose Internet Mail Extensions.",
      "options": [
        {
          "text": "The images are the same “Mime” type",
          "correct": false
        },
        {
          "text": "The images are the same color",
          "correct": false
        },
        {
          "text": "The images are the same size",
          "correct": true
        },
        {
          "text": "You use the “Constrain” tool",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Choose the inappropriate option with respect to Blue Griffon 1.5.2. Blue Griffon _________",
      "explanation": "Blue Griffon 1.5.2 is a new WYSIWYG content editor for the World Wide Web. Blue Griffon 1.5.2 includes tools for developing HTML5 pages. It can abstracts out many CSS3 effects, supports direct embedding of audio and video files. Blue Griffon 1.5.2 does not support swapping of videos of any length.",
      "options": [
        {
          "text": "includes tools for developing HTML5 pages",
          "correct": false
        },
        {
          "text": "abstracts out many css3 effects",
          "correct": false
        },
        {
          "text": "supports direct embedding of audio and video files",
          "correct": false
        },
        {
          "text": "supports swapping of videos of any length",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Maqetta is an open source initiative of the Dojo Foundation to geared towards visual designers through a WYSIWYG user interface.",
      "explanation": "Maqetta is an open source initiative of the Dojo Foundation to build an HTML5-based editor geared towards visual designers through a WYSIWYG user interface. Maqetta was developed by IBM and then donated to the Dojo.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Choose the correct statement.",
      "explanation": "Exo provides a free, cloud-based IDE that offers collaboration and deployment features. In addition to HTML5 and JavaScript, it supports the development of Java, Ruby, and Python applications.",
      "options": [
        {
          "text": "Exo is a cloud-based ide that offers collaboration and developed features",
          "correct": false
        },
        {
          "text": "Exo does not support java and python",
          "correct": false
        },
        {
          "text": "Exo does not support javascript and html5",
          "correct": false
        },
        {
          "text": "Exo is a cloud-based ide that offers collaboration and deployment features & its supports javascript and html5",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of following statement is true?",
      "explanation": "Cloud9 IDE is an online integrated development environment, published as open source from version 2.0, until version 3.0. It Supports for the following code repositories: 1) GitHub, 2) BitBucket, 3) Mercurial repositories, 4) Git repositories, 5) FTP servers. Cloud9 support deployment to 1) Heroku 2) Joyent 3)SFTP/FTP.",
      "options": [
        {
          "text": "Cloud9 has gained particular interest for its integration with GitHub and Bit Bucket authentication integration and real-time collaboration.",
          "correct": false
        },
        {
          "text": " Cloud9 does not account for SSH and FTP access.",
          "correct": true
        },
        {
          "text": "ii",
          "correct": false
        },
        {
          "text": "i",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a web server?",
      "explanation": "Tornado is a web server written in python language. Eclipse is a web server (Java HTTP server). Apache Tomcat, is a web server which is also known as Tomcat server. BlueGriffon is an IDE.",
      "options": [
        {
          "text": "Apache tomcat",
          "correct": false
        },
        {
          "text": "BlueGriffon",
          "correct": true
        },
        {
          "text": "Jetty",
          "correct": false
        },
        {
          "text": "Tornado",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Tomcat is an open source web server that provides a servlet container allowing you to run Java code.",
      "explanation": "Apache Tomcat, a web server developed by the Apache Software Foundation and which is also known as Tomcat Server. Apache Tomcat provides several Java EE specifications such as Java Servlet, JavaServer Pages (JSP), Java EL, and WebSocket. It also provides “Java” HTTP web server which is used to run java code.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following interface is not supported by LightTPD?",
      "explanation": "Interfaces like FastCGI, SCGI and CGI are supported by LightTPD to external programs to be used with the server.",
      "options": [
        {
          "text": "FastCGI",
          "correct": false
        },
        {
          "text": "SCGI",
          "correct": false
        },
        {
          "text": "GCGI",
          "correct": true
        },
        {
          "text": "CGI",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a prepackaged server stack?",
      "explanation": "Collection of software that forms operational infrastructure is a server stack. WampServer refers to a software stack.XAMPP is prepackaged stack developed by Apache Friends. To run dynamic web sites on computers, a solution stack known as MAMP is used. There is nothing like NAMP.",
      "options": [
        {
          "text": "WAMP",
          "correct": false
        },
        {
          "text": "XAAMP",
          "correct": true
        },
        {
          "text": "MAMP",
          "correct": false
        },
        {
          "text": "NAMP",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a channel of mozilla?",
      "explanation": "Mozilla Foundation & Corporation developed a open source web browser named Mozilla Firefox. Later on, new version of mozilla arrived in market, which are named as Firefox Beta & Firefox Aurora respectively. Firefox alpha is not a channel of mozilla.",
      "options": [
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Firefox alpha",
          "correct": true
        },
        {
          "text": "Firefox Beta",
          "correct": false
        },
        {
          "text": "Firefox Aurora",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Google Chrome has its own task manager, which allows you to view and manage your memory and CPU usage.",
      "explanation": "A task manager provides many functions to us including, managing applications, handling running pc, providing informative statistics, enabling computer on or off, etc. Google Chrome also has a task manager, which allows you to view and manage your memory and CPU usage.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following are automatically loaded and operates as a part of browser?",
      "explanation": "Functionality of firefox can be extended as well as modified by using Add-ons. Plugin programs operates as a part of browser. A utility provides an addition to the capabilities provided by the operating system. A widget is a simple application extension that is already installed on the device.",
      "options": [
        {
          "text": "Add-ons",
          "correct": false
        },
        {
          "text": "Plug-ins",
          "correct": true
        },
        {
          "text": "Utilities",
          "correct": false
        },
        {
          "text": "Widgets",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following allows user to view a webpage?",
      "explanation": "An interpreter is a computer program that directly executes, instructions written in a programming or scripting language. A website is a collection of related web pages, which contains multimedia content.  An operating system is a balancing bridge between hardware and software. A web/internet browser allows user to view a webpage",
      "options": [
        {
          "text": "Operating System",
          "correct": false
        },
        {
          "text": "Website",
          "correct": false
        },
        {
          "text": "Interpreter",
          "correct": false
        },
        {
          "text": "Internet Browser",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is DOM?",
      "explanation": "The Document Object Model is a cross-platform and language-independent application programming interface that treats an HTML, XHTML, or XML document as a tree structure. A document can be viewed as a logical tree with help of DOM Model.",
      "options": [
        {
          "text": "Hierarchy of objects in ASP.NET",
          "correct": false
        },
        {
          "text": "Application programming interface",
          "correct": false
        },
        {
          "text": "Convention for representing and interacting with objects in html documents",
          "correct": true
        },
        {
          "text": "Language dependent application programming",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " \n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\"> is used to _________\n",
      "explanation": "X-UA-Compatible is a document mode meta tag that allows web authors to choose what version of Internet Explorer the page should be rendered as. The <meta http-equiv=”X-UA-Compatible” content=”IE=8″> display as IE 8 with or without a DOCTYPE. It provides fallback for IE8.",
      "options": [
        {
          "text": "make web page compatible only with IE8",
          "correct": false
        },
        {
          "text": "mimic behaviour of IE8",
          "correct": true
        },
        {
          "text": "make web page incompatible only with IE8",
          "correct": false
        },
        {
          "text": "make web page compatible with IE7 and IE8",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Metadata store information about the web page that is not necessarily visible to end users.",
      "explanation": "Metadata is “data [information] that provides information about other data. Meta tags store information about the web page—known as metadata that is not necessarily visible to end users (unless you reveal the page source code).",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In which part of the HTML metadata is contained?",
      "explanation": "Metadata is information about data. The meta tag provides metadata/meta information about the HTML document. Metadata will not be displayed on the page. Metadata is present in head. The body tag defines document’s body. A title tag is an HTML element which specifies the title of a web page.",
      "options": [
        {
          "text": "body tag",
          "correct": false
        },
        {
          "text": "html tag",
          "correct": false
        },
        {
          "text": "head tag",
          "correct": true
        },
        {
          "text": "title tag",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a function of robots meta tag?",
      "explanation": "Valid values for the “CONTENT” attribute are: “INDEX”, “NOINDEX”, “FOLLOW”, “NOFOLLOW”, “NOARCHIVE”. “NOREPEAT” is not any of robots meta tag.",
      "options": [
        {
          "text": "noindex",
          "correct": false
        },
        {
          "text": "nofollow",
          "correct": false
        },
        {
          "text": "norepeat",
          "correct": true
        },
        {
          "text": "noarchive",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the role of charset attribute? It specifies",
      "explanation": "A charset attribute is new in HTML5. The charset is used to provide the character support. The charset attribute specifies the character encoding which is in an external script file.",
      "options": [
        {
          "text": "a scheme to be used to interpret the value of the content attribute",
          "correct": false
        },
        {
          "text": "a name for the metadata",
          "correct": false
        },
        {
          "text": "the character encoding for the HTML document",
          "correct": true
        },
        {
          "text": "the character decoding for the HTML document",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ prevents the page from being indexed altogether.",
      "explanation": "NOFOLLOW attribute instruct search engines that a hyperlink should not influence the link target’s ranking in search engine. NOINDEX prevents page from being indexed. To prevent a page from being cracked, NOARCHIEVE tag can be used. The noindex value of an HTML robots meta tag requests that automated Internet bots avoid indexing a web page.",
      "options": [
        {
          "text": "noarchive",
          "correct": false
        },
        {
          "text": "nofollow",
          "correct": false
        },
        {
          "text": "noindex",
          "correct": true
        },
        {
          "text": "novalue",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not supported in HTML5?",
      "explanation": "The scheme attribute is supported in HTML but not in HTML5. Rest of attributes like “content”, “http-equiv” and  “name” are supported in both HTML as well as HTML5. The scheme element is deprecated from HTML5.",
      "options": [
        {
          "text": "scheme",
          "correct": true
        },
        {
          "text": "content",
          "correct": false
        },
        {
          "text": "http-equiv",
          "correct": false
        },
        {
          "text": "name",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "___________ prevents search engines from following links inside the page.",
      "explanation": "NOFOLLOW attribute instruct search engines that a hyperlink should not influence the link target’s ranking in search engine. NOINDEX prevents page from being indexed. To prevent a page from being cracked, NOARCHIEVE tag can be used.",
      "options": [
        {
          "text": "noarchive",
          "correct": false
        },
        {
          "text": "nofollow",
          "correct": true
        },
        {
          "text": "noindex",
          "correct": false
        },
        {
          "text": "novalue",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Different meta tags are defined by changing the __________ attribute to a valid value.",
      "explanation": "The information/value of the content is provided by http-equiv through http header. Some values associated with http-equiv and name attribute are given by the content attribute. A scheme that to be used to interpret the value of the content is specified by the scheme tag. The name attribute specifies the name of input element and thus provides information/value of it.",
      "options": [
        {
          "text": "scheme",
          "correct": false
        },
        {
          "text": "content",
          "correct": false
        },
        {
          "text": "http-equiv",
          "correct": false
        },
        {
          "text": "name",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ prevents search engines from showing a cached link for the page.",
      "explanation": "The “noarchive” meta tag is used to tell browsers not to store cached link for the page. A “nofollow” attribute instruct search engines that a hyperlink should not influence the link target’s ranking in search engine. The “noindex” prevents page from being indexed.",
      "options": [
        {
          "text": "nobot",
          "correct": false
        },
        {
          "text": "nofollow",
          "correct": false
        },
        {
          "text": "noarchive",
          "correct": true
        },
        {
          "text": "nosearch",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " The value of the ___________ attribute refers to the time interval in seconds before the refresh is performed.",
      "explanation": "The information/value of the content is provided by http-equiv through http header. Some values associated with http-equiv and name attribute are given by the content attribute. A scheme that to be used to interpret the value of the content is specified by the scheme tag. The name attribute specifies the name of input element and thus provides information/value of it.",
      "options": [
        {
          "text": "scheme",
          "correct": false
        },
        {
          "text": "content",
          "correct": true
        },
        {
          "text": "http-equiv",
          "correct": false
        },
        {
          "text": "name",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ is an HTML specification used to add more information to HTML tags.",
      "explanation": "The Microdata spec provides a standardized syntax for additional semantic markup to your web pages to enhance the machine readability of your web pages. The planning for distribution center operation is offered by minidata. Macrodata and Modifydata are not any terms related to HTML5.",
      "options": [
        {
          "text": "Macrodata",
          "correct": false
        },
        {
          "text": "Microdata",
          "correct": true
        },
        {
          "text": "Minidata",
          "correct": false
        },
        {
          "text": "Modifydata",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The microdata model consists of groups of name-value pairs known as ________",
      "explanation": "The microdata model consists of groups of name-value pairs known as items. Each group is known as an item. Each item can have item types, a global identifier (if the vocabulary specified by the item types support global identifiers for items), and a list of name-value pairs. A Uniform Resource Locator, called URL, termed as web address and is used for a reference to a web resource for finding its location. Property is information about a particular id or else attribute.",
      "options": [
        {
          "text": "Item",
          "correct": true
        },
        {
          "text": "Property",
          "correct": false
        },
        {
          "text": "Value",
          "correct": false
        },
        {
          "text": "URL",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Every HTML element may have an ____________ attribute specified.",
      "explanation": "“itemtype” attribute specifies URL that is used to provide item’s data in data structure. An element with the itemscope attribute specified creates a new item, a group of name-value pairs.",
      "options": [
        {
          "text": "itemtype",
          "correct": false
        },
        {
          "text": "relevant types",
          "correct": false
        },
        {
          "text": "itemscope",
          "correct": true
        },
        {
          "text": "itemref",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is true if the property value of a name-value pair added by an element with an itemprop attribute is a meta element?",
      "explanation": "When the property value of a name-value pair added by an element with an itemprop attribute which is a meta element then the value is the value of the element’s value attribute, if it has one, or the empty string otherwise. The “itemprop” attribute is a global attribute which adds properties to item.",
      "options": [
        {
          "text": "The value is the item created by the element",
          "correct": false
        },
        {
          "text": "The value is the value of the element’s value attribute, if it has one, or the empty string otherwise",
          "correct": true
        },
        {
          "text": "On getting, if the element has a datetime content attribute, the IDL attribute must return that content attribute’s value",
          "correct": false
        },
        {
          "text": "The value is the element’s textContent",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is true if the property value of a name-value pair added by an element with an itemprop attribute is a time element?",
      "explanation": "The “itemprop” attribute is a global attribute which adds properties to item. When the property value of a name-value pair added by an element with an itemprop attribute which is a time element then the value is the element’s datetime value.",
      "options": [
        {
          "text": "The value is the element’s datetime value",
          "correct": true
        },
        {
          "text": "The value is the value of the element’s content attribute, if any, or the empty string if there is no such attribute",
          "correct": false
        },
        {
          "text": "The value is the value of the element’s value attribute, if it has one, or the empty string otherwise",
          "correct": false
        },
        {
          "text": "The value is the element’s textContent",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ___________ of an item is the value of its element’s itemid attribute.",
      "explanation": "The global identifier of an item is the value of its element’s itemid attribute, if it has one, resolved relative to the element on which the attribute is specified. If the itemid attribute is missing or if resolving it fails, it is said to have no global identifier. The “typed item” creates new item.",
      "options": [
        {
          "text": "token",
          "correct": false
        },
        {
          "text": "typed item",
          "correct": false
        },
        {
          "text": "global identifier",
          "correct": true
        },
        {
          "text": "scope",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "If the element has an itemscope attribute, it returns an __________ object with all the element’s properties.",
      "explanation": "When an HTML document is loaded into a web browser, it becomes a document object. In web browser, document model represents document as a logical tree. The “itemscope” attribute which is of boolean type is used to state the scope of metadata.",
      "options": [
        {
          "text": "itemscope",
          "correct": false
        },
        {
          "text": "dom object",
          "correct": true
        },
        {
          "text": "collection.namedItem",
          "correct": false
        },
        {
          "text": "itemtype",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is true if the property value of a name-value pair added by an element with an itemprop attribute is a data element?",
      "explanation": "The “itemprop” attribute is a global attribute which adds properties to item. When the property value of a name-value pair added by an element with an itemprop attribute which is a data element then the value is the value of the element’s value attribute if it has one, or the empty string otherwise.",
      "options": [
        {
          "text": "The value is the value of the element’s value attribute if it has one, or the empty string otherwise",
          "correct": true
        },
        {
          "text": "The value is the item created by the element",
          "correct": false
        },
        {
          "text": "The value is the element’s datetime value",
          "correct": false
        },
        {
          "text": "The value is item’s scope",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which method takes a string that contains an unordered set of unique space-separated tokens that are case-sensitive, representing types?",
      "explanation": "When called, the method must return a live NodeList object containing all the elements in the document, in tree order, that are each top-level microdata items whose types include all the types specified in the method’s argument, having obtained the types by splitting the string on spaces.",
      "options": [
        {
          "text": "document.getItems",
          "correct": true
        },
        {
          "text": "element.itemProp",
          "correct": false
        },
        {
          "text": "collection.namedItem",
          "correct": false
        },
        {
          "text": "object.itemref",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " The goal of microdata is to create a unified way to define the data in a way any web crawler or reader implementation can read it.",
      "explanation": "Microdata allows the user to create “custom” elements (sort of), to give a specific meaning to them. Microdata is an HTML specification is used to add more information to HTML. The Microdata spec provides a standardized syntax for additional semantic markup to your web pages to enhance the machine readability of your web pages.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following applications/software can be used to create a favicon?",
      "explanation": "Favicon means favorite icon. To create a favicon, we can use any graphics editor program in the market such as Adobe Photoshop or Fireworks.",
      "options": [
        {
          "text": "Unity",
          "correct": false
        },
        {
          "text": "Adobe Photoshop",
          "correct": true
        },
        {
          "text": "Dreamweaver",
          "correct": false
        },
        {
          "text": "VLC",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "By default, iOS adds ____________ effects to icons.",
      "explanation": "Most of these icons are beautifully designed, and after Apple introduced a new meta tag named apple-touch-icon you can now display website icons on the iOS home screen when you bookmark a site. By default, IOS adds rounded corners with reflective shine.",
      "options": [
        {
          "text": "reflective shine",
          "correct": false
        },
        {
          "text": "square corners and reflective shine",
          "correct": false
        },
        {
          "text": "rounded corners and reflective shine",
          "correct": true
        },
        {
          "text": "apple trademark",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Favicon stands for ______",
      "explanation": "A favicon which is also known as a shortcut icon, Web site icon, tab icon, Fave icon and also a Favorite icon. It is associated with a particular website or a web page. Favicon is a graphical representation for a site.",
      "options": [
        {
          "text": "Fave icon",
          "correct": false
        },
        {
          "text": "Favorite icon",
          "correct": false
        },
        {
          "text": "Both Fave icon and Favorite icon",
          "correct": true
        },
        {
          "text": "Fav icon",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute is used for favicon?",
      "explanation": " Favicon is associated with a particular website or a web page. Favicon is a graphical representation for a site. The “rel” attribute is used for favicon generation. The syntax is\n <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"favicon.ico\" />\n",
      "options": [
        {
          "text": "icon",
          "correct": false
        },
        {
          "text": "title",
          "correct": false
        },
        {
          "text": "rel",
          "correct": true
        },
        {
          "text": "head",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which image file format is not supported in Firefox?",
      "explanation": "There are different file formats such as MNG stands for “Multipe-image Network Graphics”, PNG stands for “Portable Network Graphics”, SVG stands for “Scalable Vector Graphics”, APNG stands for “Animated Portable Network Graphics” etc. Many browsers have theri own criteria to support those types of files. Among those, Firefox browser suuport PNG, APNG files, it also supports SVG partially. The MNG file format is not supported in Firefox.",
      "options": [
        {
          "text": "MNG",
          "correct": true
        },
        {
          "text": "PNG",
          "correct": false
        },
        {
          "text": "SVG",
          "correct": false
        },
        {
          "text": "APNG",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The favicon was standardized by the _______",
      "explanation": "In december 1999, the favicon was standardized by W3C i.e World Wide Web Consortium. IANA is Internet Assigned Numbers Authority. WIPO stands for World Intellectual Property Organization and EPO for European Patent Office.",
      "options": [
        {
          "text": "IANA",
          "correct": false
        },
        {
          "text": "W3C",
          "correct": true
        },
        {
          "text": "WIPO",
          "correct": false
        },
        {
          "text": "EPO",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In 2003, the .ico format was registered with the ____________",
      "explanation": "In 2003, the .ico format was registered with the Internet Assigned Numbers Authority (IANA) under the MIME type image/vnd.microsoft.icon. W3C is World Wide Consortium which standardized facicon for HTML 4.01 recommendation. WIPO stands for World Intellectual Property Organization and EPO for European Patent Office.",
      "options": [
        {
          "text": "IANA",
          "correct": true
        },
        {
          "text": "W3C",
          "correct": false
        },
        {
          "text": "WIPO",
          "correct": false
        },
        {
          "text": "EPO",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The recommended basic size for a favicon is ___________ pixels.",
      "explanation": "Facicon is a graphical representation of a site which stands for favorite icon. The basic size for a favicon varies from  16×16 pixels, 32×32 pixels, 48×48 pixels etc in ICO image file format.",
      "options": [
        {
          "text": "16×16",
          "correct": false
        },
        {
          "text": "26×26",
          "correct": false
        },
        {
          "text": "48×48",
          "correct": false
        },
        {
          "text": "both 16×16 and 48×48",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In March 1999, Microsoft released Internet Explorer 5, which supported favicons for the first time.",
      "explanation": "Favicons are graphical interface given to a site. Firstly, in 1999, favicon was supported by Internet Explorer 5 which was owned by Microsoft. Later on, in 1999 favicon was standardized by the W3C.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " A favicon is an image used by the browser to identify a website or web application.",
      "explanation": "Favicons are a graphical interface to a site. Browsers that provide favicon support typically display a page’s favicon in the browser’s address bar (sometimes in the history as well) and next to the page’s name in a list of bookmarks.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used if you want to highlight something that is important to the reader?",
      "explanation": ": The <b> tag is used to make the text bold. The <strong> tag is used to highlight the importance of text. The <em> tag is emphasis tag and is displayed in italic by browser. <i> tag is used to write text in italic font.",
      "options": [
        {
          "text": "<b>",
          "correct": true
        },
        {
          "text": "<strong>",
          "correct": false
        },
        {
          "text": "<em>",
          "correct": false
        },
        {
          "text": "<i>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is not used if you want to indicate the importance of the phrase?",
      "explanation": "Tags like <h1> (including all headings from h1 to h6), <em> and <strong> can be used to indicate the importance of the phrase. The <i> is none other than a type of font displaced in italic bond by the browsers.",
      "options": [
        {
          "text": "<i>",
          "correct": true
        },
        {
          "text": "<h1>",
          "correct": false
        },
        {
          "text": "<em>",
          "correct": false
        },
        {
          "text": "<strong>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following statement is not true?",
      "explanation": "XHTML is a markup language. There are certain terms and conditions (rules and regulations) for it. There are as: 1) In XHTML, the DOCTYPE is compulsory, 2) Xmlns attribute in <html> in manndatory, 3) The basic building blocks of markup i.e. <html>, <head>, <title>, and <body> are must in one. 4) Last but not least, XHTML is case sensitive where as HTML is case in-sensitive.",
      "options": [
        {
          "text": "XHTML DOCTYPE is mandatory",
          "correct": false
        },
        {
          "text": "The xmlns attribute in <html> is mandatory",
          "correct": false
        },
        {
          "text": "<html>, <head>, <title>, and <body> are mandatory",
          "correct": false
        },
        {
          "text": "None of the mentioned",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "According to the rules of XML and XHTML, all elements must be closed either with an end tag or by self-closing with space, slash, and a right-pointing angle bracket.",
      "explanation": "XML and XHTML are markup languages used for creating web pages. XHTML is case sensitive, and thus they must be closed either an end tag or by self-closing with a space, slash, and a right pointing angle bracket. Ex) <p></p> is paragraph tag closed with ending tag. <br/> is break tag whose closing is done either by a slash or right pointing angle bracket.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ is the XML equivalent to strict HTML 4.01.",
      "explanation": "XML is a markup language while XHTML is a extensible hypertext markup language. XHTML 1.0 Strict is the XML equivalent to strict HTML 4.01, and includes elements and attributes that have not been marked deprecated in the HTML 4.01 specification.",
      "options": [
        {
          "text": "XHTML 1.0 Strict",
          "correct": true
        },
        {
          "text": "XHTML 1.0 Frameset",
          "correct": false
        },
        {
          "text": "XHTML 1.0 Transitional",
          "correct": false
        },
        {
          "text": "XHTML 1.1 Strict",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following statement is true?",
      "explanation": "HTML is hypertext markup language. There are many rules and regulations in HTML for attribute specification. HTML is case in-sensitive and thus we can write attribute name in either uppercase or lowercase, none of it is going to make difference. There is nothing like that atrribute name should be minimized, we can write attribute name as long as and as short as we want. The only rule for attribute name is that it should be in quoted form.",
      "options": [
        {
          "text": "Attribute names must be in uppercase",
          "correct": false
        },
        {
          "text": "Attribute values must be quoted",
          "correct": true
        },
        {
          "text": "Attribute minimization is mandatory",
          "correct": false
        },
        {
          "text": "Attribute values should not be quoted",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The root element of an XHTML document must be html, and must contain an __________ attribute to associate it with the XHTML namespace.",
      "explanation": "The xmlns attribute specifies the xml namespace for a document. It is manadatory in XHTML while in HTML5 it is optional. The root element of an XHTML document must be html, and must contain an xmlns atrribute to associate it with the XHTML namespace.",
      "options": [
        {
          "text": "source",
          "correct": false
        },
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "xmlns",
          "correct": true
        },
        {
          "text": "link",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following encoding an XML parser assumes?",
      "explanation": "Basically parsers are used in softwares and they convert user data into machine data in short in memory form to use. In XML, parser is used to read XML. If an XML document lacks encoding specification, an XML parser assumes that the encoding is UTF-8 or UTF-16.",
      "options": [
        {
          "text": "UTF-8",
          "correct": false
        },
        {
          "text": "UTF-16",
          "correct": false
        },
        {
          "text": "UTF-32",
          "correct": false
        },
        {
          "text": "Both UTF-8 and UTF-32",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ is an extended version of the XHTML markup language for supporting RDF through a collection of attributes and processing rules in the form of well-formed XML documents.",
      "explanation": "XHTML+RDFa (Extensible Hypertext Markup Language + Resource Description Framework in attributes) is an extended version of the XHTML markup language for supporting RDF through a collection of attributes and processing rules in the form of well-formed XML documents.",
      "options": [
        {
          "text": "XHTML + RDFa",
          "correct": true
        },
        {
          "text": "XHTML+XHTML5",
          "correct": false
        },
        {
          "text": "XHTML1.0+XHTML2.0",
          "correct": false
        },
        {
          "text": "XHTML + RDF",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " XML is a markup language where documents must be marked up correctly.",
      "explanation": "XML is markup language while XHTML is extensible hypertext version of markup language. XHTML is HTML defined as an XML application. XHTML is stricter than HTML.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which feature was already introduced before HTML5?",
      "explanation": "Until recently you could not draw on the web and graphics were not very interactive but canvas/SVG which were introduced by HTML5 solved all the problems. Video, Geolocation were also new features introduced by HTML5. Frames were already there before the launch of HTML5.",
      "options": [
        {
          "text": "Canvas/SVG",
          "correct": false
        },
        {
          "text": "Video",
          "correct": false
        },
        {
          "text": "Geolocation",
          "correct": false
        },
        {
          "text": "Frames",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used with JavaScript?",
      "explanation": "<canvas> tag is basically used for graphics via scripting i.e. usually with Java Script (scripting language, basically used to create animations).  Other tags like <table>, <article>, <footer> can be used simply with HTML.",
      "options": [
        {
          "text": "<canvas>",
          "correct": true
        },
        {
          "text": "<table>",
          "correct": false
        },
        {
          "text": "<article>",
          "correct": false
        },
        {
          "text": "<footer>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What application can one create even before the introduction of HTML5?",
      "explanation": "With the help of HTML5 and JavaScript it became possible to create excellent mobile applications, browser based games, web applications and many more other applications. Forms were already introduced before HTML5.",
      "options": [
        {
          "text": "Web applications",
          "correct": false
        },
        {
          "text": "Mobile applications",
          "correct": false
        },
        {
          "text": "Forms",
          "correct": true
        },
        {
          "text": "Browser based games",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the correct syntax of doctype in HTML5?",
      "explanation": "The correct syntax of HTML5 doctype is <!doctype html>, doctype is the very first thing to write in HTML5. <!doctype html> or <!DOCTYPE HTML> both are same because ‘doctype’ keyword is not case sensitive.",
      "options": [
        {
          "text": "<!doctype html>",
          "correct": true
        },
        {
          "text": "<doctype html!>",
          "correct": false
        },
        {
          "text": "<doctype html>",
          "correct": false
        },
        {
          "text": "</doctype html>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What if one does not use the doctype in the starting of HTML document?",
      "explanation": "If the browser finds <!doctype html> in the starting of an HTML document it sets the document in standard mode but if one does not use a doctype, the browser goes to quirky mode. In this mode, certain content will not be displayed as per one wrote that. So it is always recommended to write a doctype at the very start of the HTML document.",
      "options": [
        {
          "text": "Browser finds the document in quirky mode",
          "correct": true
        },
        {
          "text": "Browser finds a document in standard mode",
          "correct": false
        },
        {
          "text": "Browser stops working",
          "correct": false
        },
        {
          "text": "Browser crashes after showing the page",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not semantic element for text in HTML5?",
      "explanation": "Semantic elements used for text are <mark>, <time>, <wbr> whereas <article>, <aside>, <figure>, <footer>, <header> etc. are the semantic elements for structuring a page in HTML5.",
      "options": [
        {
          "text": "<mark>",
          "correct": false
        },
        {
          "text": "<time>",
          "correct": false
        },
        {
          "text": "<wbr>",
          "correct": false
        },
        {
          "text": "<article>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag supports Non-English language?",
      "explanation": "<bdo>, <rp>, <rt>, <ruby> are some tags which support Non-English language. <input> is for web forms and <audio>, <embed> are the tags for audio and plug-ins.",
      "options": [
        {
          "text": "<input>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": false
        },
        {
          "text": "<embed>",
          "correct": false
        },
        {
          "text": "<bdo>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element was not removed by HTML5?",
      "explanation": "Although HTML5 adds new elements, it also kicked out some old elements like <big>, <center>, <font>, <tt>, <strike>. HTML5 adapted many elements also <small> is one among these. The <small> element represents “small print”.",
      "options": [
        {
          "text": "<strike>",
          "correct": false
        },
        {
          "text": "<center>",
          "correct": false
        },
        {
          "text": "<small>",
          "correct": true
        },
        {
          "text": "<big>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines the title of a work?",
      "explanation": "The <cite> tag defines the title of a work. The <hr> tag is used to give a horizontal break. When we want to link one page to another, then <a> tag is used. The <address> tag is used to define the contact information about owner of document.",
      "options": [
        {
          "text": "<cite>",
          "correct": true
        },
        {
          "text": "<hr>",
          "correct": false
        },
        {
          "text": "<a>",
          "correct": false
        },
        {
          "text": "<address>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is design to wrap a single piece of information?",
      "explanation": "<time> tag wrap single piece of information i.e. it defines date, month and year. The <nav> element identifies a set of navigation links, <footer> is introduced in HTML5 which is present at the end of page and do conatins footer information i.e copyright information.",
      "options": [
        {
          "text": "<time>",
          "correct": true
        },
        {
          "text": "<nav>",
          "correct": false
        },
        {
          "text": "<footer>",
          "correct": false
        },
        {
          "text": "<header>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What an article element should not contain?",
      "explanation": "The <main> element must NOT be a descendant of an <article>, <aside>, <footer>, <header>, or <nav> element. The article element may contain audio/video clips, images and also text or embedded content.",
      "options": [
        {
          "text": "Main element",
          "correct": true
        },
        {
          "text": "Text or embedded content",
          "correct": false
        },
        {
          "text": "Image",
          "correct": false
        },
        {
          "text": "Video & Audio",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following statement is true?",
      "explanation": "In SVG drawing is done with vectors and it support event handlers. Canvas doesn’t contains any built-in-animations and drawing is done with pixels.",
      "options": [
        {
          "text": "Canvas Contains built-in animations",
          "correct": false
        },
        {
          "text": "SVG needs scripts to draw elements",
          "correct": false
        },
        {
          "text": "In canvas, drawing is done with pixels",
          "correct": true
        },
        {
          "text": "SVG don’t support to event handlers",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What does <main> include?",
      "explanation": "<header> element contains navigation links. Slidebar is for hoverable/sliding text. <footer> is introduced in HTML5 which is present at the end of page and do contains footer information i.e copyright information. Main content is the entire article which wraps the <article> element. It holds the page’s main content. It can be useful for screen readers. E.g. <main> <article>…………</article> </main>",
      "options": [
        {
          "text": "Header",
          "correct": false
        },
        {
          "text": "Sidebar",
          "correct": false
        },
        {
          "text": "Article",
          "correct": true
        },
        {
          "text": "Footer",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not sectioning elements?",
      "explanation": "The <section> element represents a section of a document or application. Tags like <article>, <aside>, <nav>, <section> are the ones that create a nested, new outline inside the page.",
      "options": [
        {
          "text": "<article>",
          "correct": false
        },
        {
          "text": "<aside>",
          "correct": false
        },
        {
          "text": "<nav>",
          "correct": false
        },
        {
          "text": "<header>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How many times can HTML5 events be fired?",
      "explanation": "We can call events like drag, ondragover, etc multiple times in HTML5.",
      "options": [
        {
          "text": "Multiple",
          "correct": true
        },
        {
          "text": "One",
          "correct": false
        },
        {
          "text": "Only two",
          "correct": false
        },
        {
          "text": "Zero",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used to get highlighted text in HTML5?",
      "explanation": "The <mark> element is used to highlight a section of text. It is useful for quoting a text or if one wants to bring attention to the text. The <b> tag is used to make text/paragraph bold. <u> tag is used to underline the text you wanted.\n<p>This is the example.<mark> I like this dog. </mark></p>\nOutput: This is the example. I like this dog.\n",
      "options": [
        {
          "text": "<highlight>",
          "correct": false
        },
        {
          "text": "<b>",
          "correct": false
        },
        {
          "text": "<mark>",
          "correct": true
        },
        {
          "text": "<u>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In OSI model USB lies under the layer ___________",
      "explanation": "There are seven layers namely Physical layer, data Link layer, network Layer, transport layer, session layer, presentation layer, and application layer. The physical layer is the first layer, it is used for transmitting electrical signal across the network. Examples are USB, Bluetooth or Ethernet.",
      "options": [
        {
          "text": "data Link layer",
          "correct": false
        },
        {
          "text": "physical layer",
          "correct": true
        },
        {
          "text": "network layer",
          "correct": false
        },
        {
          "text": "transport layer",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "IP is used in the level ___________",
      "explanation": "Network layer is the third layer, it deals with routing across complicated networks, Internet Protocol (IP) is very commonly used at this level. It is capable of traveling across multiple networks. It can also travel through intermediate devices like routers.",
      "options": [
        {
          "text": "presentation layer",
          "correct": false
        },
        {
          "text": "network layer",
          "correct": true
        },
        {
          "text": "application layer",
          "correct": false
        },
        {
          "text": "data Link layer",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one is not the feature of HTTP protocol?",
      "explanation": "There are basically three main features of HTTP protocol i.e HTTP is media independent, HTTP is connectionless and it is stateless also. Browser initiates HTTP request, and then client disconnects from the server.",
      "options": [
        {
          "text": "media independent",
          "correct": false
        },
        {
          "text": "connectionless",
          "correct": false
        },
        {
          "text": "responsive",
          "correct": true
        },
        {
          "text": "stateless",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following are not the valid character set in HTTP?",
      "explanation": "A character set must know to web browsers to display HTML pages correctly. For the preference of clients we use character sets for specifying characters. The default value is US-ASCII. The valid character sets are ISO-8859-1, US-ASCII or ISO-8859-7.",
      "options": [
        {
          "text": "ISO-8859-1",
          "correct": false
        },
        {
          "text": "US-ASCII",
          "correct": false
        },
        {
          "text": "ISO-8859-7",
          "correct": false
        },
        {
          "text": "ISO-8859-12",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one is the correct syntax for specifying media type?",
      "explanation": "Internet media types are used in Content-Type and Accept header fields. Media types are registered with IANA (Internet Assigned Number Authority). The syntax for a media type is m-type = type “/” subtype *(“;” parameter). The name of subtype, type and parameter attribute all are case sensitive.",
      "options": [
        {
          "text": "type ”/” subtype *( “;” parameter)",
          "correct": true
        },
        {
          "text": "subtype ”/” type *(“;” parameter)",
          "correct": false
        },
        {
          "text": "parameter “/” type *(“;” subtype)",
          "correct": false
        },
        {
          "text": "(“;” subtype) “/” type *(parameter)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which header field defines meta information?",
      "explanation": "A HTTP header which does not relate to the content of message is a response-header. A request-header is used to provide information about request or response. Entity-header field defines meta information about the body. If the body is not present resource is identified by request. The general syntax for all the header fields is msg-header=field-name “:” [field-value]. General-header field is for both response and request.",
      "options": [
        {
          "text": "Request-header",
          "correct": false
        },
        {
          "text": "Response-header",
          "correct": false
        },
        {
          "text": "General-header",
          "correct": false
        },
        {
          "text": "Entity-header",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the request method?",
      "explanation": "There are various request methods on the resource identified by Request-URI. Get, post, head, delete, trace, connect, put and options are some of the methods. For retrieving information from the server we use Get method.",
      "options": [
        {
          "text": "Head",
          "correct": false
        },
        {
          "text": "Get",
          "correct": false
        },
        {
          "text": "Remove",
          "correct": true
        },
        {
          "text": "Put",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which symbol is used when HTTP request does not apply to the particular source?",
      "explanation": "When HTTP request does not apply to particular resource ‘*’ is used. It is applied to the server itself. This is only allowed when the used method is not necessarily applied to the resource. E.g. OPTIONS * HTTP/1.1",
      "options": [
        {
          "text": "‘&’",
          "correct": false
        },
        {
          "text": "‘*’",
          "correct": true
        },
        {
          "text": "‘#’",
          "correct": false
        },
        {
          "text": "‘@’",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a request-header field?",
      "explanation": "For passing additional information about request we use request-header fields. These are also requested modifiers. There are several request-header fields like Accept-Encoding, Expect, Accept-Charset, Accept-Language, Form, Host, Authorization, If-Match, Proxy-Authorization, Range, User-Agent, TE, Referer, If-Unmodified-Since, If-Range.",
      "options": [
        {
          "text": "Expect",
          "correct": false
        },
        {
          "text": "Host",
          "correct": false
        },
        {
          "text": "Delete",
          "correct": true
        },
        {
          "text": "If-None-Match",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What does ‘3xx’ code denote?",
      "explanation": "‘3xx’ means Redirection, any further action have to be taken for completing the request. ‘1xx’ is for Informational, it signifies that the request was received and the process is going on. ‘2xx’ denotes Success, which signifies the action was successfully understood, received and accepted.",
      "options": [
        {
          "text": "Redirection",
          "correct": true
        },
        {
          "text": " Server Error",
          "correct": false
        },
        {
          "text": "Success",
          "correct": false
        },
        {
          "text": "Informational",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not a response-header field?",
      "explanation": "For passing additional information about the response that can’t be placed in Status-Line, we use response-header fields. Some of the fields are Age, Accept-Ranges, Location, ETag, WWW-Authenticate, Vary, Server, Retry-After.",
      "options": [
        {
          "text": "Location",
          "correct": false
        },
        {
          "text": "Server",
          "correct": false
        },
        {
          "text": "ETag",
          "correct": false
        },
        {
          "text": "Referer",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is an open source JavaScript library that enables styling for HTML5 elements in versions of Internet Explorer before IE 9 ?",
      "explanation": "HTML5 Shiv is a JavaScript workaround, invented by Sjoerd Visscher, to enable styling of HTML5 elements in versions of Internet Explorer prior to version 9, which do not allow unknown elements to be styled without JavaScript. HTML 5 defines the properties and behaviors of web page content. It is a web language.",
      "options": [
        {
          "text": "HTML5",
          "correct": false
        },
        {
          "text": "HTML5 Shiv",
          "correct": true
        },
        {
          "text": "HTML5 Shim",
          "correct": false
        },
        {
          "text": "HTML5 Sham",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is not a step to install a library you need to perform the compatibility in browsers?",
      "explanation": "All steps are required.",
      "options": [
        {
          "text": "Download the library from the github location",
          "correct": false
        },
        {
          "text": "Uncompress the file",
          "correct": false
        },
        {
          "text": "Insert the following code inside the head tag",
          "correct": false
        },
        {
          "text": "None of the mentioned",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which property is used to detect the browser’s user agent and code based on the pertinent cases?",
      "explanation": "An old strategy was to look at the property navigator.userAgent to detect the browser’s user agent and code based on the pertinent cases.",
      "options": [
        {
          "text": "navigator.userAgent",
          "correct": true
        },
        {
          "text": "navigator.user",
          "correct": false
        },
        {
          "text": "navigator",
          "correct": false
        },
        {
          "text": "return",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Some users have requested tests for IE’s float double margin bug, and support for position:fixed. Which API is suitable for them?",
      "explanation": "The navigator object contains information about the browser. UseAgent property gives user-agent header sent by browser to the server. A navigator.userAgent is used to detect the browser’s user agent and code based on the pertinent cases.",
      "options": [
        {
          "text": "mq() media Plugin API",
          "correct": false
        },
        {
          "text": "addTest() Plugin API",
          "correct": true
        },
        {
          "text": "testAllProps() Plugin API",
          "correct": false
        },
        {
          "text": "none of the mentioned",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "___________ is an open source JavaScript library that allows support for different levels of experiences based on the capabilities of each browser.",
      "explanation": "Modernizr is an open source JavaScript library that allows support for different levels of experiences based on the capabilities of each browser using a simple feature detection model. Geolocation is the identification of geographic location of an object. The navigator object contains information about the browser. Google API, i.e set of application programming interface which allow communication with Google Services & integration to other services.",
      "options": [
        {
          "text": "Navigator",
          "correct": false
        },
        {
          "text": "Modernizr",
          "correct": true
        },
        {
          "text": "Geolocation",
          "correct": false
        },
        {
          "text": "Google API",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "____________ allows you to add custom styles to the document and test an element afterwards.",
      "explanation": "Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards. An element with the id of “modernizr” is injected into the page.",
      "options": [
        {
          "text": "hasEvent()",
          "correct": false
        },
        {
          "text": "testAllProps()",
          "correct": false
        },
        {
          "text": "testProp()",
          "correct": false
        },
        {
          "text": "modernizr.testStyles()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Modernizr does actually add missing functionalities to browsers save for the HTML5 tags styling support.",
      "explanation": "Modernizr is a JavaScript library which is designed to detect HTML5 and CSS3 features in various browsers, which lets JavaScript avoid using unimplemented features or use a workaround such as a shim to emulate them. Modernizr, in spite of its name, does not actually add missing functionalities to browsers save for the HTML5 tags styling support.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "___________ is used to test whether geolocation is supported in old browsers.",
      "explanation": "Since Modernizr is a JavaScript object with methods, we can use Modernizr.geolocation to test whether geolocation is supported. Geolocation API Detects support for the Geolocation API for users to provide their location to web applications.",
      "options": [
        {
          "text": "Modernizr",
          "correct": false
        },
        {
          "text": "Modernizr.geolocation",
          "correct": false
        },
        {
          "text": "Navigator.userAgent",
          "correct": true
        },
        {
          "text": "Modernizr.js",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "____________ is a resource loader (CSS and JavaScript) that was made to specifically to work side-by-side with Modernizr.",
      "explanation": "Modernizr.load is optional in your build, but if you are loading polyfills, there’s a good chance it can save you some bandwidth and boost performance a bit. Modernizr.load objects print out on your page in the exact spot they should be, coming after the Modernizr.",
      "options": [
        {
          "text": "HasEvent()",
          "correct": false
        },
        {
          "text": "Navigator.userAgent",
          "correct": false
        },
        {
          "text": "Modernizr.load",
          "correct": true
        },
        {
          "text": "Modernizer.geolocation",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " In case we want to implement a JavaScript fallback, we would need to create a conditional statement using Modernizr.",
      "explanation": "Modernizr is a JavaScript library that detects which HTML5 and CSS3 features your visitor’s browser supports. Modernizer determines whether browser has implemented a given feature. Developers take advantage of new features that browsers support, still create fallbacks for browsers that lack support.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "State whether the given statement is true or false. !DOCTYPE is case sensitive”.",
      "explanation": "XML is a case sensitive while HTML is case insensitive. So the declaration “!DOCOTYPE” is case sensitive in XML and it is not case sensitive in HTML, we can write the “!DOCTYPE” declaration in both lowercase and uppercase, thus both are valid.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Choose the correct statement.",
      "explanation": "In XHTML all elements must always be closed and empty elements also be closed. XHTML close tags are not optional neither they are encouraged. HTML is case insensitive and thus closing tags for some elements including empty elements is optional and is ignored by browsers.",
      "options": [
        {
          "text": "In traditional XHTML close tag for some elements is optional but not encouraged",
          "correct": false
        },
        {
          "text": "In traditional HTML close tag for some elements is optional but not encouraged",
          "correct": true
        },
        {
          "text": "In both traditional XHTML and HTML close tag for some elements is not optional",
          "correct": false
        },
        {
          "text": "In both traditional XHTML and HTML close tag for some elements is optional",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following XHTML doctype declaration contains all HTML elements and attributes, including presentational and deprecated elements (like font) but not framesets?",
      "explanation": "The !DOCTYPE declaration is not an HTML tag; it is an instruction to the web browser about what version of HTML the page is written in. The XHTML doctype declaration “!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Strict//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd”” is of XHTML 1.0 strict, “!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Transitional//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd”” is of XHTML 1.0 transitional, “!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Frameset//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd”” is of XHTML 1.0 frameset and “<!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.1//EN” “http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd”>” is of XHTML 1.1.",
      "options": [
        {
          "text": "!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Strict//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd”",
          "correct": false
        },
        {
          "text": "!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Transitional//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd”",
          "correct": true
        },
        {
          "text": "!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Frameset//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd”",
          "correct": false
        },
        {
          "text": "<!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.1//EN” “http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd”>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a difference between HTML and XHTML?",
      "explanation": "HTML is case insensitive while XHTML is case sensitive. In XHTML, special characters can be escaped using character entites but not in HTML. Charset in HTML is “text/html” where as it is “application/xml+xhtml” for XHTML.",
      "options": [
        {
          "text": "Charset in html is “text/html” where as in xhtml it is “application/xml+xhtml”",
          "correct": false
        },
        {
          "text": "Charset in both html and xhtml is “text/html”",
          "correct": true
        },
        {
          "text": "Tags and attributes are case-insensitive in HTML but not in XHTML",
          "correct": false
        },
        {
          "text": "Special characters must be escaped using character entities in XHTML unlike HTML",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What indicates the content in file is HTML when delivered on the network.",
      "explanation": "Content-type: header indicates the content in the file is HTML and we can see file content through it when delivered on the network. “.html” is the file extension for HTML.",
      "options": [
        {
          "text": "The extension of the file “.html”",
          "correct": false
        },
        {
          "text": "The “content-type” header",
          "correct": true
        },
        {
          "text": "Both “.html” extension and “content-type” header",
          "correct": false
        },
        {
          "text": "The “content_type” header",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "State whether the given statement is true or false. “We can intermix XHTML and HTML 4.01 documents”",
      "explanation": "HTML is not in XML format. You have to make the changes necessary to make the document proper XML before you can get it accepted as XML.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "HTML and XHTML stands for ______",
      "explanation": "HTML stands for “Hyper Text Markup Language” and XHTML stand for “Extensible HyperText Markup Language”.",
      "options": [
        {
          "text": "Hyper Text Markup Language and Extensible HyperText Markup Language",
          "correct": true
        },
        {
          "text": "Hyper Text Markup Language and Extensible HyperText Marking Language",
          "correct": false
        },
        {
          "text": "Hyper Text Marking Language and EXtensible HyperText Marking Language",
          "correct": false
        },
        {
          "text": "Hyper Text Marking Language and Extensible HyperText Markup Language",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Choose the correct tag for the largest heading in HTML.",
      "explanation": "Headings in HTML starts from <h1> to <h6> in which <h1> heading is the largest one and <h6> is smallest one among those. The heading tags are <h1> <h2> <h3> <h4> <h5> and <h6> that are used for the creations of headings.",
      "options": [
        {
          "text": "h6",
          "correct": false
        },
        {
          "text": "heading",
          "correct": false
        },
        {
          "text": "h1",
          "correct": true
        },
        {
          "text": "head",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following are table tags?",
      "explanation": "Table has different tags such as table, thead, tr, td, etc whereas colospan is an attribute of table.",
      "options": [
        {
          "text": "table, thead, tr, td",
          "correct": true
        },
        {
          "text": "colspan, table, tr",
          "correct": false
        },
        {
          "text": "table, tt, tr, td",
          "correct": false
        },
        {
          "text": "thead, colspan, td, tr",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Choose the correct HTML for width attribute and its value.",
      "explanation": "Always mention the attribute value in quotes in HTML. It is one of the rule of HTML attributes.",
      "options": [
        {
          "text": "width=80",
          "correct": false
        },
        {
          "text": "width=”80″",
          "correct": true
        },
        {
          "text": "WIDTH=”80″",
          "correct": false
        },
        {
          "text": "WIDTH=80",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which feature was already introduced before HTML5?",
      "explanation": "Until recently you could not draw on the web and graphics were not very interactive but canvas/SVG which were introduced by HTML5 solved all the problems. Video, Geolocation were also new features introduced by HTML5. Frames were already there before the launch of HTML5.",
      "options": [
        {
          "text": "Canvas/SVG",
          "correct": false
        },
        {
          "text": "Video",
          "correct": false
        },
        {
          "text": "Geolocation",
          "correct": false
        },
        {
          "text": "Frames",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used with JavaScript?",
      "explanation": "<canvas> tag is basically used for graphics via scripting i.e. usually with Java Script (scripting language, basically used to create animations).  Other tags like <table>, <article>, <footer> can be used simply with HTML.",
      "options": [
        {
          "text": "<canvas>",
          "correct": true
        },
        {
          "text": "<table>",
          "correct": false
        },
        {
          "text": "<article>",
          "correct": false
        },
        {
          "text": "<footer>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What application can one create even before the introduction of HTML5?",
      "explanation": "With the help of HTML5 and JavaScript it became possible to create excellent mobile applications, browser based games, web applications and many more other applications. Forms were already introduced before HTML5.",
      "options": [
        {
          "text": "Web applications",
          "correct": false
        },
        {
          "text": "Mobile applications",
          "correct": false
        },
        {
          "text": "Forms",
          "correct": true
        },
        {
          "text": "Browser based games",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the correct syntax of doctype in HTML5?",
      "explanation": "The correct syntax of HTML5 doctype is <!doctype html>, doctype is the very first thing to write in HTML5. <!doctype html> or <!DOCTYPE HTML> both are same because ‘doctype’ keyword is not case sensitive.",
      "options": [
        {
          "text": "<!doctype html>",
          "correct": true
        },
        {
          "text": "<doctype html!>",
          "correct": false
        },
        {
          "text": "<doctype html>",
          "correct": false
        },
        {
          "text": "</doctype html>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What if one does not use the doctype in the starting of HTML document?",
      "explanation": "If the browser finds <!doctype html> in the starting of an HTML document it sets the document in standard mode but if one does not use a doctype, the browser goes to quirky mode. In this mode, certain content will not be displayed as per one wrote that. So it is always recommended to write a doctype at the very start of the HTML document.",
      "options": [
        {
          "text": "Browser finds the document in quirky mode",
          "correct": true
        },
        {
          "text": "Browser finds a document in standard mode",
          "correct": false
        },
        {
          "text": "Browser stops working",
          "correct": false
        },
        {
          "text": "Browser crashes after showing the page",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not semantic element for text in HTML5?",
      "explanation": "Semantic elements used for text are <mark>, <time>, <wbr> whereas <article>, <aside>, <figure>, <footer>, <header> etc. are the semantic elements for structuring a page in HTML5.",
      "options": [
        {
          "text": "<mark>",
          "correct": false
        },
        {
          "text": "<time>",
          "correct": false
        },
        {
          "text": "<wbr>",
          "correct": false
        },
        {
          "text": "<article>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag supports Non-English language?",
      "explanation": "<bdo>, <rp>, <rt>, <ruby> are some tags which support Non-English language. <input> is for web forms and <audio>, <embed> are the tags for audio and plug-ins.",
      "options": [
        {
          "text": "<input>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": false
        },
        {
          "text": "<embed>",
          "correct": false
        },
        {
          "text": "<bdo>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element was not removed by HTML5?",
      "explanation": "Although HTML5 adds new elements, it also kicked out some old elements like <big>, <center>, <font>, <tt>, <strike>. HTML5 adapted many elements also <small> is one among these. The <small> element represents “small print”.",
      "options": [
        {
          "text": "<strike>",
          "correct": false
        },
        {
          "text": "<center>",
          "correct": false
        },
        {
          "text": "<small>",
          "correct": true
        },
        {
          "text": "<big>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines the title of a work?",
      "explanation": "The <cite> tag defines the title of a work. The <hr> tag is used to give a horizontal break. When we want to link one page to another, then <a> tag is used. The <address> tag is used to define the contact information about owner of document.",
      "options": [
        {
          "text": "<cite>",
          "correct": true
        },
        {
          "text": "<hr>",
          "correct": false
        },
        {
          "text": "<a>",
          "correct": false
        },
        {
          "text": "<address>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is design to wrap a single piece of information?",
      "explanation": "<time> tag wrap single piece of information i.e. it defines date, month and year. The <nav> element identifies a set of navigation links, <footer> is introduced in HTML5 which is present at the end of page and do conatins footer information i.e copyright information.",
      "options": [
        {
          "text": "<time>",
          "correct": true
        },
        {
          "text": "<nav>",
          "correct": false
        },
        {
          "text": "<footer>",
          "correct": false
        },
        {
          "text": "<header>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What an article element should not contain?",
      "explanation": "The <main> element must NOT be a descendant of an <article>, <aside>, <footer>, <header>, or <nav> element. The article element may contain audio/video clips, images and also text or embedded content.",
      "options": [
        {
          "text": "Main element",
          "correct": true
        },
        {
          "text": "Text or embedded content",
          "correct": false
        },
        {
          "text": "Image",
          "correct": false
        },
        {
          "text": "Video & Audio",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following statement is true?",
      "explanation": "In SVG drawing is done with vectors and it support event handlers. Canvas doesn’t contains any built-in-animations and drawing is done with pixels.",
      "options": [
        {
          "text": "Canvas Contains built-in animations",
          "correct": false
        },
        {
          "text": "SVG needs scripts to draw elements",
          "correct": false
        },
        {
          "text": "In canvas, drawing is done with pixels",
          "correct": true
        },
        {
          "text": "SVG don’t support to event handlers",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What does <main> include?",
      "explanation": "<header> element contains navigation links. Slidebar is for hoverable/sliding text. <footer> is introduced in HTML5 which is present at the end of page and do contains footer information i.e copyright information. Main content is the entire article which wraps the <article> element. It holds the page’s main content. It can be useful for screen readers. E.g. <main> <article>…………</article> </main>",
      "options": [
        {
          "text": "Header",
          "correct": false
        },
        {
          "text": "Sidebar",
          "correct": false
        },
        {
          "text": "Article",
          "correct": true
        },
        {
          "text": "Footer",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not sectioning elements?",
      "explanation": "The <section> element represents a section of a document or application. Tags like <article>, <aside>, <nav>, <section> are the ones that create a nested, new outline inside the page.",
      "options": [
        {
          "text": "<article>",
          "correct": false
        },
        {
          "text": "<aside>",
          "correct": false
        },
        {
          "text": "<nav>",
          "correct": false
        },
        {
          "text": "<header>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How many times can HTML5 events be fired?",
      "explanation": "We can call events like drag, ondragover, etc multiple times in HTML5.",
      "options": [
        {
          "text": "Multiple",
          "correct": true
        },
        {
          "text": "One",
          "correct": false
        },
        {
          "text": "Only two",
          "correct": false
        },
        {
          "text": "Zero",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used to get highlighted text in HTML5?",
      "explanation": "The <mark> element is used to highlight a section of text. It is useful for quoting a text or if one wants to bring attention to the text. The <b> tag is used to make text/paragraph bold. <u> tag is used to underline the text you wanted.\n<p>This is the example.<mark> I like this dog. </mark></p>\nOutput: This is the example. I like this dog.\n",
      "options": [
        {
          "text": "<highlight>",
          "correct": false
        },
        {
          "text": "<b>",
          "correct": false
        },
        {
          "text": "<mark>",
          "correct": true
        },
        {
          "text": "<u>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following prints bold letters in traditional HTML?\n\ni. <B>Go boldly</B>\nii. <B>Go boldly</b>\niii. <b>Go boldly</B>\niv. <b>Go boldly</b>\n",
      "explanation": "Traditional HTML is case insensitive and thus we can write tag/element name either in lowercase or uppercase or both which will be ignored by browser by default.",
      "options": [
        {
          "text": "iv",
          "correct": false
        },
        {
          "text": "i",
          "correct": false
        },
        {
          "text": "i, ii, iii, and iv",
          "correct": true
        },
        {
          "text": "both iv and i",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "XHTML is case insensitive and HTML is case sensitive.",
      "explanation": "Traditionally XHTML is case sensitive while HTML is case insensitive. In HTML these are ignored by default by browsers.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What output do you expect if the following markup is rendered?\n\n<strong>T   e    s   t   o  f  s  p  a  c  e  s</strong><br>\n<strong>T e s t &nbsp;o f&nbsp; s p a c e s </strong><br>\n",
      "explanation": "The strong tag is used to highlight the importance of text/paragraph. <br> tag is used for a line break in HTML. Ant white space between characters displays as a single space.",
      "options": [
        {
          "text": "T e s t o f s p a c e s\nT e s t o f s p a c e s",
          "correct": false
        },
        {
          "text": "Testofspaces\nTestofspaces",
          "correct": false
        },
        {
          "text": "T e s t o f s p a c e s\nT e s t  o f  s p a c e s",
          "correct": true
        },
        {
          "text": "T e s t o f s p a c e s  T e s t  o f  s p a c e s",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following options follows content model in HTML?\n\ni.<ul>\n     <p>Option one </p>\n  </ul>\nii.<ul>\n     <li>Option two </li>\n  </ul>",
      "explanation": "Content model specifies that certain elements are supposed to occur only within other elements. The <ul> tag which is for unordered list should contain <li> tags which are for list specification. The <p> tag is used for paragraph in HTML.",
      "options": [
        {
          "text": "i",
          "correct": false
        },
        {
          "text": "ii",
          "correct": true
        },
        {
          "text": "i and ii",
          "correct": false
        },
        {
          "text": "Neither i nor ii",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not an empty element?",
      "explanation": "An element is said to be empty if it doesn’t contain any content in it. The <hr/> and <br/> tag which is used for a horizontal line and line break respectively, doen’t contains any content in it and thus are called empty elements in HTML. <p> tag contains text/paragraph in it so it’s not an empty element.",
      "options": [
        {
          "text": "<hr/>",
          "correct": false
        },
        {
          "text": "<br/>",
          "correct": false
        },
        {
          "text": "<p/>",
          "correct": true
        },
        {
          "text": "Both <hr/> and <br/>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "State true or false.\n\n<p></p><p></p><p></p>produces numerous blank lines.",
      "explanation": "As a block tag, <p> induces a return by default, but when used repeatedly, like <p></p><p></p>, it does not have any effect on document.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following markup is correct?\n\ni. <b><i>is in error as tags cross</b></i>\nii. <b><i>is not since tags nest</i></b>",
      "explanation": "In markup, tags can be nested. The first tag who is going to nest other tag must end after that nested tag which means if <i> tag is nested in <b> tag then <b> must be closed after closing of the <i> tag.",
      "options": [
        {
          "text": "i",
          "correct": false
        },
        {
          "text": "ii",
          "correct": true
        },
        {
          "text": "i and ii",
          "correct": false
        },
        {
          "text": "Neither i nor ii",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a correct (X)HTML rule?",
      "explanation": "Rules of XHTML are as- 1) XHTML elements must be properly nested\n2) XHTML elements must always be closed\n3) XHTML elements must be in lowercase\n4) XHTML documents must have one root element\n5) Attribute names must be in lower case\n6) Attribute values must be quoted\n7) Attribute minimization is forbidden\n",
      "options": [
        {
          "text": "Attributes should be quoted",
          "correct": false
        },
        {
          "text": "Tags should not nest tag",
          "correct": false
        },
        {
          "text": "Attribute minimization is forbidden",
          "correct": false
        },
        {
          "text": "Unknown attributes are not ignored by the browser",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Choose the incorrect escape character entity.",
      "explanation": "Character escapes in markup is to represent any Unicode character in HTML, XHTML or XML using only ASCII characters. There are different types of escape character entity in HTML. Some of them are > which is used for greater than(>) , > is basically a entity number which is used for greater than(>), < stands for less than(<), etc. There doesn’t exist any &st escape character entity in markup.",
      "options": [
        {
          "text": "&gt;",
          "correct": false
        },
        {
          "text": "&#62;",
          "correct": false
        },
        {
          "text": "&lt;",
          "correct": false
        },
        {
          "text": "&st;",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Identify the count of mistakes in the following markup.\n\n<html>\n<head>\n</head>\n<body>\n<li>\n   <ul><p>Hello</p></ul>\n</li>\n<br>\n<hr>\n</body>\n</html>",
      "explanation": "We can write <p></p> tag in <ul></ul> tag as there is no such rule or else limitation. The tags <br> and <hr> are closed by default in browser.",
      "options": [
        {
          "text": "2",
          "correct": false
        },
        {
          "text": "3",
          "correct": true
        },
        {
          "text": "1",
          "correct": false
        },
        {
          "text": "0",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "A Rendering engine is not responsible for ________",
      "explanation": "A rendering engine is a software that draws text and images on the screen. The engine draws structured text from a document (HTML, XML) and formats it properly based on the given style declarations (CSS, XSL, etc). The primary job of a browser engine is to transform HTML documents and other resources of a web page into an interactive visual representation on a user’s device.",
      "options": [
        {
          "text": "parsing the markup content (HTML)",
          "correct": false
        },
        {
          "text": "parsing style information (CSS, XSL, and so on)",
          "correct": false
        },
        {
          "text": "generating a visual presentation of the formatted content including media files referenced",
          "correct": false
        },
        {
          "text": "parsing style information (CSS only)",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Firefox uses _________ rendering engine.",
      "explanation": "Gecko is a web browser engine used in many applications developed by Mozilla Foundation and the Mozilla Corporation as well as in many other open source software projects. Gecko is free and open-source software subject to the terms of the Mozilla Public License version 2.",
      "options": [
        {
          "text": "WebKit",
          "correct": false
        },
        {
          "text": "Gecko",
          "correct": true
        },
        {
          "text": "Trident",
          "correct": false
        },
        {
          "text": "Presto",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "State true or false. It is faster to render HTML and CSS than to interpret and execute JavaScript.",
      "explanation": "When it comes to ordering your CSS and JavaScript, you want your CSS to come first. The reason is that the rendering thread has all the style information it needs to render the page. If the JavaScript includes come first, the JavaScript engine has to parse it all before continuing on to the next set of resources.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the use of “defer” attribute?",
      "explanation": "The defer attribute is a boolean attribute. The script is executed after the page has finished parsing. The defer attribute is used if and only if there is src attribute. Defer is for external not internal scripts.",
      "options": [
        {
          "text": "It defers rendering of html page",
          "correct": false
        },
        {
          "text": "It defers script execution until the page has been rendered",
          "correct": true
        },
        {
          "text": "It defers rendering of css attributes",
          "correct": false
        },
        {
          "text": "It is only for internal scripts",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following statements is false?",
      "explanation": "In async attribute, the script is executed asynchronously with the rest of the page (the script will be executed while the page continues the parsing). Defer, the Boolean attribute is set to indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing DOMContentLoaded event. Older browsers doesn’t support async attribute.",
      "options": [
        {
          "text": "async and defer attributes of script tag execute before the DOMContentLoaded event",
          "correct": false
        },
        {
          "text": "defer executes each script sequentially",
          "correct": false
        },
        {
          "text": "async executes each script when it is ready",
          "correct": false
        },
        {
          "text": "all older browsers supports async attribute",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is used to read a HTML page and render it?",
      "explanation": "A web browser (commonly referred to as a browser) is a software application for retrieving, presenting and traversing information resources on the World Wide Web. A web server process, store and display output to client as per their request. Web matrix is a discontinued cloud-connected website builder and HTML editor for Windows.",
      "options": [
        {
          "text": "Web browser",
          "correct": true
        },
        {
          "text": "Web server",
          "correct": false
        },
        {
          "text": "Web matrix",
          "correct": false
        },
        {
          "text": "Web network",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the first web browser?",
      "explanation": "The first web browser was invented in 1990 called World Wide Web which was later renamed to Nexus. In 1995, a graphical web browser named Internet Explorer was developed. The Netscape is a web browser  produced by Netscape Communications. NCSA Mosaic, or Mosaic, is the web browser which in turn popularized World Wide Web.",
      "options": [
        {
          "text": "Nexus",
          "correct": true
        },
        {
          "text": "Netscape Navigator",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": false
        },
        {
          "text": "Mosaic",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Who created the first web browser",
      "explanation": "Sir Timothy John “Tim” Berners-Lee, also known as TimBL, is an English computer scientist, best known as the inventor of the World Wide Web. He made a proposal for an information management system in March 1989, and he implemented the first successful communication between a Hypertext Transfer Protocol (HTTP) client and server via the Internet sometime around mid-November of that same year.",
      "options": [
        {
          "text": "Tim Berners Lee",
          "correct": true
        },
        {
          "text": "Jacobs, Lan",
          "correct": false
        },
        {
          "text": "Marc Andeersen",
          "correct": false
        },
        {
          "text": "Mozilla foundation",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Nexus is first graphical web browser.",
      "explanation": "Mosaic was the first browser to display images inline with text instead of displaying images in a separate window, while often described as the first graphical web browser.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " The open source software version of netscape is _________",
      "explanation": "On February 23, 1998, Netscape Communications Corporation created a project called Mozilla to co-ordinate the development of the Mozilla Application Suite, the open source version of Netscape’s internet software, Netscape Communicator.",
      "options": [
        {
          "text": "Chrome",
          "correct": false
        },
        {
          "text": "Mozilla",
          "correct": true
        },
        {
          "text": "Internet Explorer",
          "correct": false
        },
        {
          "text": "Erwise",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not an IDE?",
      "explanation": "Dreamweaver is an Integrated Development Environment (IDE) tool. Aptana Studio 3 is an open-source integrated development environment (IDE) used for web applications. BlueGriffon 1.5.2 is an integrated development environment powered by Gecko. TextEdit is a simple, open-source word processor.",
      "options": [
        {
          "text": "BlueGriffon 1.5.2",
          "correct": false
        },
        {
          "text": "Aptana studio 3",
          "correct": false
        },
        {
          "text": "TextEdit(Mac)",
          "correct": true
        },
        {
          "text": "Dreamweaver",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "IDE stands for _________",
      "explanation": "An integrated development environment (IDE) or interactive development environment is a software application that provides comprehensive facilities to computer programmers for software development. An IDE normally consists of a source code editor, build automation tools and a debugger.",
      "options": [
        {
          "text": "Internet Development Environment",
          "correct": false
        },
        {
          "text": "Integrated Development Environment",
          "correct": true
        },
        {
          "text": "Intelligent Development Environment",
          "correct": false
        },
        {
          "text": "Integrated Developed Environment",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "We can define ________ number of sites with one copy of dreamweaver installed on our computer.",
      "explanation": "Dreamweaver is an IDE to build custom web apps and applications. There is no definite liit to it.",
      "options": [
        {
          "text": "990",
          "correct": false
        },
        {
          "text": "10",
          "correct": false
        },
        {
          "text": "only 1",
          "correct": false
        },
        {
          "text": "unlimited",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What should we add to a template in Dreamweaver in order to control where page content goes?",
      "explanation": "A template is a special type of document that you use to design a “fixed” page layout; you can then create documents based on the template that inherit its page layout. Editable template regions control which areas of a template-based page a user can edit. Frames appear inside a web page.",
      "options": [
        {
          "text": "Editable Regions",
          "correct": true
        },
        {
          "text": "HTML controllers",
          "correct": false
        },
        {
          "text": "Frames",
          "correct": false
        },
        {
          "text": "Content Controllers",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Blue Griffon is based on ________ rendering engine.",
      "explanation": "BlueGriffon is a new WYSIWYG content editor for the World Wide Web. Powered by Gecko, the rendering engine of Firefox, it’s a modern and robust solution to edit Web pages in conformance to the latest Web Standards. WebKit is a browser engine used in safari. Presto is a dynamic engine.",
      "options": [
        {
          "text": "WebKit",
          "correct": false
        },
        {
          "text": "Gecko",
          "correct": true
        },
        {
          "text": "Presto",
          "correct": false
        },
        {
          "text": "Mecko",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Swapping images in dreamweaver is best if __________",
      "explanation": "Before you start creating a more complex page design with Dreamweaver’s Swap Image behavior, look at a finished page. Swapping means replacing any or all images on the page. While swapping images, it is important to make all images of same size (height and width). MIME stands for “Multipurpose Internet Mail Extensions.",
      "options": [
        {
          "text": "The images are the same “Mime” type",
          "correct": false
        },
        {
          "text": "The images are the same color",
          "correct": false
        },
        {
          "text": "The images are the same size",
          "correct": true
        },
        {
          "text": "You use the “Constrain” tool",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Choose the inappropriate option with respect to Blue Griffon 1.5.2. Blue Griffon _________",
      "explanation": "Blue Griffon 1.5.2 is a new WYSIWYG content editor for the World Wide Web. Blue Griffon 1.5.2 includes tools for developing HTML5 pages. It can abstracts out many CSS3 effects, supports direct embedding of audio and video files. Blue Griffon 1.5.2 does not support swapping of videos of any length.",
      "options": [
        {
          "text": "includes tools for developing HTML5 pages",
          "correct": false
        },
        {
          "text": "abstracts out many css3 effects",
          "correct": false
        },
        {
          "text": "supports direct embedding of audio and video files",
          "correct": false
        },
        {
          "text": "supports swapping of videos of any length",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Maqetta is an open source initiative of the Dojo Foundation to geared towards visual designers through a WYSIWYG user interface.",
      "explanation": "Maqetta is an open source initiative of the Dojo Foundation to build an HTML5-based editor geared towards visual designers through a WYSIWYG user interface. Maqetta was developed by IBM and then donated to the Dojo.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Choose the correct statement.",
      "explanation": "Exo provides a free, cloud-based IDE that offers collaboration and deployment features. In addition to HTML5 and JavaScript, it supports the development of Java, Ruby, and Python applications.",
      "options": [
        {
          "text": "Exo is a cloud-based ide that offers collaboration and developed features",
          "correct": false
        },
        {
          "text": "Exo does not support java and python",
          "correct": false
        },
        {
          "text": "Exo does not support javascript and html5",
          "correct": false
        },
        {
          "text": "Exo is a cloud-based ide that offers collaboration and deployment features & its supports javascript and html5",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of following statement is true?",
      "explanation": "Cloud9 IDE is an online integrated development environment, published as open source from version 2.0, until version 3.0. It Supports for the following code repositories: 1) GitHub, 2) BitBucket, 3) Mercurial repositories, 4) Git repositories, 5) FTP servers. Cloud9 support deployment to 1) Heroku 2) Joyent 3)SFTP/FTP.",
      "options": [
        {
          "text": "Cloud9 has gained particular interest for its integration with GitHub and Bit Bucket authentication integration and real-time collaboration.",
          "correct": false
        },
        {
          "text": " Cloud9 does not account for SSH and FTP access.",
          "correct": true
        },
        {
          "text": "ii",
          "correct": false
        },
        {
          "text": "i",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a web server?",
      "explanation": "Tornado is a web server written in python language. Eclipse is a web server (Java HTTP server). Apache Tomcat, is a web server which is also known as Tomcat server. BlueGriffon is an IDE.",
      "options": [
        {
          "text": "Apache tomcat",
          "correct": false
        },
        {
          "text": "BlueGriffon",
          "correct": true
        },
        {
          "text": "Jetty",
          "correct": false
        },
        {
          "text": "Tornado",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Tomcat is an open source web server that provides a servlet container allowing you to run Java code.",
      "explanation": "Apache Tomcat, a web server developed by the Apache Software Foundation and which is also known as Tomcat Server. Apache Tomcat provides several Java EE specifications such as Java Servlet, JavaServer Pages (JSP), Java EL, and WebSocket. It also provides “Java” HTTP web server which is used to run java code.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following interface is not supported by LightTPD?",
      "explanation": "Interfaces like FastCGI, SCGI and CGI are supported by LightTPD to external programs to be used with the server.",
      "options": [
        {
          "text": "FastCGI",
          "correct": false
        },
        {
          "text": "SCGI",
          "correct": false
        },
        {
          "text": "GCGI",
          "correct": true
        },
        {
          "text": "CGI",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a prepackaged server stack?",
      "explanation": "Collection of software that forms operational infrastructure is a server stack. WampServer refers to a software stack.XAMPP is prepackaged stack developed by Apache Friends. To run dynamic web sites on computers, a solution stack known as MAMP is used. There is nothing like NAMP.",
      "options": [
        {
          "text": "WAMP",
          "correct": false
        },
        {
          "text": "XAAMP",
          "correct": true
        },
        {
          "text": "MAMP",
          "correct": false
        },
        {
          "text": "NAMP",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a channel of mozilla?",
      "explanation": "Mozilla Foundation & Corporation developed a open source web browser named Mozilla Firefox. Later on, new version of mozilla arrived in market, which are named as Firefox Beta & Firefox Aurora respectively. Firefox alpha is not a channel of mozilla.",
      "options": [
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Firefox alpha",
          "correct": true
        },
        {
          "text": "Firefox Beta",
          "correct": false
        },
        {
          "text": "Firefox Aurora",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Google Chrome has its own task manager, which allows you to view and manage your memory and CPU usage.",
      "explanation": "A task manager provides many functions to us including, managing applications, handling running pc, providing informative statistics, enabling computer on or off, etc. Google Chrome also has a task manager, which allows you to view and manage your memory and CPU usage.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following are automatically loaded and operates as a part of browser?",
      "explanation": "Functionality of firefox can be extended as well as modified by using Add-ons. Plugin programs operates as a part of browser. A utility provides an addition to the capabilities provided by the operating system. A widget is a simple application extension that is already installed on the device.",
      "options": [
        {
          "text": "Add-ons",
          "correct": false
        },
        {
          "text": "Plug-ins",
          "correct": true
        },
        {
          "text": "Utilities",
          "correct": false
        },
        {
          "text": "Widgets",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following allows user to view a webpage?",
      "explanation": "An interpreter is a computer program that directly executes, instructions written in a programming or scripting language. A website is a collection of related web pages, which contains multimedia content.  An operating system is a balancing bridge between hardware and software. A web/internet browser allows user to view a webpage",
      "options": [
        {
          "text": "Operating System",
          "correct": false
        },
        {
          "text": "Website",
          "correct": false
        },
        {
          "text": "Interpreter",
          "correct": false
        },
        {
          "text": "Internet Browser",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is DOM?",
      "explanation": "The Document Object Model is a cross-platform and language-independent application programming interface that treats an HTML, XHTML, or XML document as a tree structure. A document can be viewed as a logical tree with help of DOM Model.",
      "options": [
        {
          "text": "Hierarchy of objects in ASP.NET",
          "correct": false
        },
        {
          "text": "Application programming interface",
          "correct": false
        },
        {
          "text": "Convention for representing and interacting with objects in html documents",
          "correct": true
        },
        {
          "text": "Language dependent application programming",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " \n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\"> is used to _________\n",
      "explanation": "X-UA-Compatible is a document mode meta tag that allows web authors to choose what version of Internet Explorer the page should be rendered as. The <meta http-equiv=”X-UA-Compatible” content=”IE=8″> display as IE 8 with or without a DOCTYPE. It provides fallback for IE8.",
      "options": [
        {
          "text": "make web page compatible only with IE8",
          "correct": false
        },
        {
          "text": "mimic behaviour of IE8",
          "correct": true
        },
        {
          "text": "make web page incompatible only with IE8",
          "correct": false
        },
        {
          "text": "make web page compatible with IE7 and IE8",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is an open source JavaScript library that enables styling for HTML5 elements in versions of Internet Explorer before IE 9 ?",
      "explanation": "HTML5 Shiv is a JavaScript workaround, invented by Sjoerd Visscher, to enable styling of HTML5 elements in versions of Internet Explorer prior to version 9, which do not allow unknown elements to be styled without JavaScript. HTML 5 defines the properties and behaviors of web page content. It is a web language.",
      "options": [
        {
          "text": "HTML5",
          "correct": false
        },
        {
          "text": "HTML5 Shiv",
          "correct": true
        },
        {
          "text": "HTML5 Shim",
          "correct": false
        },
        {
          "text": "HTML5 Sham",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is not a step to install a library you need to perform the compatibility in browsers?",
      "explanation": "All steps are required.",
      "options": [
        {
          "text": "Download the library from the github location",
          "correct": false
        },
        {
          "text": "Uncompress the file",
          "correct": false
        },
        {
          "text": "Insert the following code inside the head tag",
          "correct": false
        },
        {
          "text": "None of the mentioned",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which property is used to detect the browser’s user agent and code based on the pertinent cases?",
      "explanation": "An old strategy was to look at the property navigator.userAgent to detect the browser’s user agent and code based on the pertinent cases.",
      "options": [
        {
          "text": "navigator.userAgent",
          "correct": true
        },
        {
          "text": "navigator.user",
          "correct": false
        },
        {
          "text": "navigator",
          "correct": false
        },
        {
          "text": "return",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Some users have requested tests for IE’s float double margin bug, and support for position:fixed. Which API is suitable for them?",
      "explanation": "The navigator object contains information about the browser. UseAgent property gives user-agent header sent by browser to the server. A navigator.userAgent is used to detect the browser’s user agent and code based on the pertinent cases.",
      "options": [
        {
          "text": "mq() media Plugin API",
          "correct": false
        },
        {
          "text": "addTest() Plugin API",
          "correct": true
        },
        {
          "text": "testAllProps() Plugin API",
          "correct": false
        },
        {
          "text": "none of the mentioned",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "___________ is an open source JavaScript library that allows support for different levels of experiences based on the capabilities of each browser.",
      "explanation": "Modernizr is an open source JavaScript library that allows support for different levels of experiences based on the capabilities of each browser using a simple feature detection model. Geolocation is the identification of geographic location of an object. The navigator object contains information about the browser. Google API, i.e set of application programming interface which allow communication with Google Services & integration to other services.",
      "options": [
        {
          "text": "Navigator",
          "correct": false
        },
        {
          "text": "Modernizr",
          "correct": true
        },
        {
          "text": "Geolocation",
          "correct": false
        },
        {
          "text": "Google API",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "____________ allows you to add custom styles to the document and test an element afterwards.",
      "explanation": "Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards. An element with the id of “modernizr” is injected into the page.",
      "options": [
        {
          "text": "hasEvent()",
          "correct": false
        },
        {
          "text": "testAllProps()",
          "correct": false
        },
        {
          "text": "testProp()",
          "correct": false
        },
        {
          "text": "modernizr.testStyles()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Modernizr does actually add missing functionalities to browsers save for the HTML5 tags styling support.",
      "explanation": "Modernizr is a JavaScript library which is designed to detect HTML5 and CSS3 features in various browsers, which lets JavaScript avoid using unimplemented features or use a workaround such as a shim to emulate them. Modernizr, in spite of its name, does not actually add missing functionalities to browsers save for the HTML5 tags styling support.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "___________ is used to test whether geolocation is supported in old browsers.",
      "explanation": "Since Modernizr is a JavaScript object with methods, we can use Modernizr.geolocation to test whether geolocation is supported. Geolocation API Detects support for the Geolocation API for users to provide their location to web applications.",
      "options": [
        {
          "text": "Modernizr",
          "correct": false
        },
        {
          "text": "Modernizr.geolocation",
          "correct": false
        },
        {
          "text": "Navigator.userAgent",
          "correct": true
        },
        {
          "text": "Modernizr.js",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "____________ is a resource loader (CSS and JavaScript) that was made to specifically to work side-by-side with Modernizr.",
      "explanation": "Modernizr.load is optional in your build, but if you are loading polyfills, there’s a good chance it can save you some bandwidth and boost performance a bit. Modernizr.load objects print out on your page in the exact spot they should be, coming after the Modernizr.",
      "options": [
        {
          "text": "HasEvent()",
          "correct": false
        },
        {
          "text": "Navigator.userAgent",
          "correct": false
        },
        {
          "text": "Modernizr.load",
          "correct": true
        },
        {
          "text": "Modernizer.geolocation",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " In case we want to implement a JavaScript fallback, we would need to create a conditional statement using Modernizr.",
      "explanation": "Modernizr is a JavaScript library that detects which HTML5 and CSS3 features your visitor’s browser supports. Modernizer determines whether browser has implemented a given feature. Developers take advantage of new features that browsers support, still create fallbacks for browsers that lack support.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Metadata store information about the web page that is not necessarily visible to end users.",
      "explanation": "Metadata is “data [information] that provides information about other data. Meta tags store information about the web page—known as metadata that is not necessarily visible to end users (unless you reveal the page source code).",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In which part of the HTML metadata is contained?",
      "explanation": "Metadata is information about data. The meta tag provides metadata/meta information about the HTML document. Metadata will not be displayed on the page. Metadata is present in head. The body tag defines document’s body. A title tag is an HTML element which specifies the title of a web page.",
      "options": [
        {
          "text": "body tag",
          "correct": false
        },
        {
          "text": "html tag",
          "correct": false
        },
        {
          "text": "head tag",
          "correct": true
        },
        {
          "text": "title tag",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a function of robots meta tag?",
      "explanation": "Valid values for the “CONTENT” attribute are: “INDEX”, “NOINDEX”, “FOLLOW”, “NOFOLLOW”, “NOARCHIVE”. “NOREPEAT” is not any of robots meta tag.",
      "options": [
        {
          "text": "noindex",
          "correct": false
        },
        {
          "text": "nofollow",
          "correct": false
        },
        {
          "text": "norepeat",
          "correct": true
        },
        {
          "text": "noarchive",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the role of charset attribute? It specifies",
      "explanation": "A charset attribute is new in HTML5. The charset is used to provide the character support. The charset attribute specifies the character encoding which is in an external script file.",
      "options": [
        {
          "text": "a scheme to be used to interpret the value of the content attribute",
          "correct": false
        },
        {
          "text": "a name for the metadata",
          "correct": false
        },
        {
          "text": "the character encoding for the HTML document",
          "correct": true
        },
        {
          "text": "the character decoding for the HTML document",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ prevents the page from being indexed altogether.",
      "explanation": "NOFOLLOW attribute instruct search engines that a hyperlink should not influence the link target’s ranking in search engine. NOINDEX prevents page from being indexed. To prevent a page from being cracked, NOARCHIEVE tag can be used. The noindex value of an HTML robots meta tag requests that automated Internet bots avoid indexing a web page.",
      "options": [
        {
          "text": "noarchive",
          "correct": false
        },
        {
          "text": "nofollow",
          "correct": false
        },
        {
          "text": "noindex",
          "correct": true
        },
        {
          "text": "novalue",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not supported in HTML5?",
      "explanation": "The scheme attribute is supported in HTML but not in HTML5. Rest of attributes like “content”, “http-equiv” and  “name” are supported in both HTML as well as HTML5. The scheme element is deprecated from HTML5.",
      "options": [
        {
          "text": "scheme",
          "correct": true
        },
        {
          "text": "content",
          "correct": false
        },
        {
          "text": "http-equiv",
          "correct": false
        },
        {
          "text": "name",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "___________ prevents search engines from following links inside the page.",
      "explanation": "NOFOLLOW attribute instruct search engines that a hyperlink should not influence the link target’s ranking in search engine. NOINDEX prevents page from being indexed. To prevent a page from being cracked, NOARCHIEVE tag can be used.",
      "options": [
        {
          "text": "noarchive",
          "correct": false
        },
        {
          "text": "nofollow",
          "correct": true
        },
        {
          "text": "noindex",
          "correct": false
        },
        {
          "text": "novalue",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Different meta tags are defined by changing the __________ attribute to a valid value.",
      "explanation": "The information/value of the content is provided by http-equiv through http header. Some values associated with http-equiv and name attribute are given by the content attribute. A scheme that to be used to interpret the value of the content is specified by the scheme tag. The name attribute specifies the name of input element and thus provides information/value of it.",
      "options": [
        {
          "text": "scheme",
          "correct": false
        },
        {
          "text": "content",
          "correct": false
        },
        {
          "text": "http-equiv",
          "correct": false
        },
        {
          "text": "name",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ prevents search engines from showing a cached link for the page.",
      "explanation": "The “noarchive” meta tag is used to tell browsers not to store cached link for the page. A “nofollow” attribute instruct search engines that a hyperlink should not influence the link target’s ranking in search engine. The “noindex” prevents page from being indexed.",
      "options": [
        {
          "text": "nobot",
          "correct": false
        },
        {
          "text": "nofollow",
          "correct": false
        },
        {
          "text": "noarchive",
          "correct": true
        },
        {
          "text": "nosearch",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " The value of the ___________ attribute refers to the time interval in seconds before the refresh is performed.",
      "explanation": "The information/value of the content is provided by http-equiv through http header. Some values associated with http-equiv and name attribute are given by the content attribute. A scheme that to be used to interpret the value of the content is specified by the scheme tag. The name attribute specifies the name of input element and thus provides information/value of it.",
      "options": [
        {
          "text": "scheme",
          "correct": false
        },
        {
          "text": "content",
          "correct": true
        },
        {
          "text": "http-equiv",
          "correct": false
        },
        {
          "text": "name",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ is an HTML specification used to add more information to HTML tags.",
      "explanation": "The Microdata spec provides a standardized syntax for additional semantic markup to your web pages to enhance the machine readability of your web pages. The planning for distribution center operation is offered by minidata. Macrodata and Modifydata are not any terms related to HTML5.",
      "options": [
        {
          "text": "Macrodata",
          "correct": false
        },
        {
          "text": "Microdata",
          "correct": true
        },
        {
          "text": "Minidata",
          "correct": false
        },
        {
          "text": "Modifydata",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The microdata model consists of groups of name-value pairs known as ________",
      "explanation": "The microdata model consists of groups of name-value pairs known as items. Each group is known as an item. Each item can have item types, a global identifier (if the vocabulary specified by the item types support global identifiers for items), and a list of name-value pairs. A Uniform Resource Locator, called URL, termed as web address and is used for a reference to a web resource for finding its location. Property is information about a particular id or else attribute.",
      "options": [
        {
          "text": "Item",
          "correct": true
        },
        {
          "text": "Property",
          "correct": false
        },
        {
          "text": "Value",
          "correct": false
        },
        {
          "text": "URL",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Every HTML element may have an ____________ attribute specified.",
      "explanation": "“itemtype” attribute specifies URL that is used to provide item’s data in data structure. An element with the itemscope attribute specified creates a new item, a group of name-value pairs.",
      "options": [
        {
          "text": "itemtype",
          "correct": false
        },
        {
          "text": "relevant types",
          "correct": false
        },
        {
          "text": "itemscope",
          "correct": true
        },
        {
          "text": "itemref",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is true if the property value of a name-value pair added by an element with an itemprop attribute is a meta element?",
      "explanation": "When the property value of a name-value pair added by an element with an itemprop attribute which is a meta element then the value is the value of the element’s value attribute, if it has one, or the empty string otherwise. The “itemprop” attribute is a global attribute which adds properties to item.",
      "options": [
        {
          "text": "The value is the item created by the element",
          "correct": false
        },
        {
          "text": "The value is the value of the element’s value attribute, if it has one, or the empty string otherwise",
          "correct": true
        },
        {
          "text": "On getting, if the element has a datetime content attribute, the IDL attribute must return that content attribute’s value",
          "correct": false
        },
        {
          "text": "The value is the element’s textContent",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is true if the property value of a name-value pair added by an element with an itemprop attribute is a time element?",
      "explanation": "The “itemprop” attribute is a global attribute which adds properties to item. When the property value of a name-value pair added by an element with an itemprop attribute which is a time element then the value is the element’s datetime value.",
      "options": [
        {
          "text": "The value is the element’s datetime value",
          "correct": true
        },
        {
          "text": "The value is the value of the element’s content attribute, if any, or the empty string if there is no such attribute",
          "correct": false
        },
        {
          "text": "The value is the value of the element’s value attribute, if it has one, or the empty string otherwise",
          "correct": false
        },
        {
          "text": "The value is the element’s textContent",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ___________ of an item is the value of its element’s itemid attribute.",
      "explanation": "The global identifier of an item is the value of its element’s itemid attribute, if it has one, resolved relative to the element on which the attribute is specified. If the itemid attribute is missing or if resolving it fails, it is said to have no global identifier. The “typed item” creates new item.",
      "options": [
        {
          "text": "token",
          "correct": false
        },
        {
          "text": "typed item",
          "correct": false
        },
        {
          "text": "global identifier",
          "correct": true
        },
        {
          "text": "scope",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "If the element has an itemscope attribute, it returns an __________ object with all the element’s properties.",
      "explanation": "When an HTML document is loaded into a web browser, it becomes a document object. In web browser, document model represents document as a logical tree. The “itemscope” attribute which is of boolean type is used to state the scope of metadata.",
      "options": [
        {
          "text": "itemscope",
          "correct": false
        },
        {
          "text": "dom object",
          "correct": true
        },
        {
          "text": "collection.namedItem",
          "correct": false
        },
        {
          "text": "itemtype",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is true if the property value of a name-value pair added by an element with an itemprop attribute is a data element?",
      "explanation": "The “itemprop” attribute is a global attribute which adds properties to item. When the property value of a name-value pair added by an element with an itemprop attribute which is a data element then the value is the value of the element’s value attribute if it has one, or the empty string otherwise.",
      "options": [
        {
          "text": "The value is the value of the element’s value attribute if it has one, or the empty string otherwise",
          "correct": true
        },
        {
          "text": "The value is the item created by the element",
          "correct": false
        },
        {
          "text": "The value is the element’s datetime value",
          "correct": false
        },
        {
          "text": "The value is item’s scope",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which method takes a string that contains an unordered set of unique space-separated tokens that are case-sensitive, representing types?",
      "explanation": "When called, the method must return a live NodeList object containing all the elements in the document, in tree order, that are each top-level microdata items whose types include all the types specified in the method’s argument, having obtained the types by splitting the string on spaces.",
      "options": [
        {
          "text": "document.getItems",
          "correct": true
        },
        {
          "text": "element.itemProp",
          "correct": false
        },
        {
          "text": "collection.namedItem",
          "correct": false
        },
        {
          "text": "object.itemref",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " The goal of microdata is to create a unified way to define the data in a way any web crawler or reader implementation can read it.",
      "explanation": "Microdata allows the user to create “custom” elements (sort of), to give a specific meaning to them. Microdata is an HTML specification is used to add more information to HTML. The Microdata spec provides a standardized syntax for additional semantic markup to your web pages to enhance the machine readability of your web pages.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following applications/software can be used to create a favicon?",
      "explanation": "Favicon means favorite icon. To create a favicon, we can use any graphics editor program in the market such as Adobe Photoshop or Fireworks.",
      "options": [
        {
          "text": "Unity",
          "correct": false
        },
        {
          "text": "Adobe Photoshop",
          "correct": true
        },
        {
          "text": "Dreamweaver",
          "correct": false
        },
        {
          "text": "VLC",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "By default, iOS adds ____________ effects to icons.",
      "explanation": "Most of these icons are beautifully designed, and after Apple introduced a new meta tag named apple-touch-icon you can now display website icons on the iOS home screen when you bookmark a site. By default, IOS adds rounded corners with reflective shine.",
      "options": [
        {
          "text": "reflective shine",
          "correct": false
        },
        {
          "text": "square corners and reflective shine",
          "correct": false
        },
        {
          "text": "rounded corners and reflective shine",
          "correct": true
        },
        {
          "text": "apple trademark",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Favicon stands for ______",
      "explanation": "A favicon which is also known as a shortcut icon, Web site icon, tab icon, Fave icon and also a Favorite icon. It is associated with a particular website or a web page. Favicon is a graphical representation for a site.",
      "options": [
        {
          "text": "Fave icon",
          "correct": false
        },
        {
          "text": "Favorite icon",
          "correct": false
        },
        {
          "text": "Both Fave icon and Favorite icon",
          "correct": true
        },
        {
          "text": "Fav icon",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute is used for favicon?",
      "explanation": " Favicon is associated with a particular website or a web page. Favicon is a graphical representation for a site. The “rel” attribute is used for favicon generation. The syntax is\n <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"favicon.ico\" />\n",
      "options": [
        {
          "text": "icon",
          "correct": false
        },
        {
          "text": "title",
          "correct": false
        },
        {
          "text": "rel",
          "correct": true
        },
        {
          "text": "head",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which image file format is not supported in Firefox?",
      "explanation": "There are different file formats such as MNG stands for “Multipe-image Network Graphics”, PNG stands for “Portable Network Graphics”, SVG stands for “Scalable Vector Graphics”, APNG stands for “Animated Portable Network Graphics” etc. Many browsers have theri own criteria to support those types of files. Among those, Firefox browser suuport PNG, APNG files, it also supports SVG partially. The MNG file format is not supported in Firefox.",
      "options": [
        {
          "text": "MNG",
          "correct": true
        },
        {
          "text": "PNG",
          "correct": false
        },
        {
          "text": "SVG",
          "correct": false
        },
        {
          "text": "APNG",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The favicon was standardized by the _______",
      "explanation": "In december 1999, the favicon was standardized by W3C i.e World Wide Web Consortium. IANA is Internet Assigned Numbers Authority. WIPO stands for World Intellectual Property Organization and EPO for European Patent Office.",
      "options": [
        {
          "text": "IANA",
          "correct": false
        },
        {
          "text": "W3C",
          "correct": true
        },
        {
          "text": "WIPO",
          "correct": false
        },
        {
          "text": "EPO",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In 2003, the .ico format was registered with the ____________",
      "explanation": "In 2003, the .ico format was registered with the Internet Assigned Numbers Authority (IANA) under the MIME type image/vnd.microsoft.icon. W3C is World Wide Consortium which standardized facicon for HTML 4.01 recommendation. WIPO stands for World Intellectual Property Organization and EPO for European Patent Office.",
      "options": [
        {
          "text": "IANA",
          "correct": true
        },
        {
          "text": "W3C",
          "correct": false
        },
        {
          "text": "WIPO",
          "correct": false
        },
        {
          "text": "EPO",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The recommended basic size for a favicon is ___________ pixels.",
      "explanation": "Facicon is a graphical representation of a site which stands for favorite icon. The basic size for a favicon varies from  16×16 pixels, 32×32 pixels, 48×48 pixels etc in ICO image file format.",
      "options": [
        {
          "text": "16×16",
          "correct": false
        },
        {
          "text": "26×26",
          "correct": false
        },
        {
          "text": "48×48",
          "correct": false
        },
        {
          "text": "both 16×16 and 48×48",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In March 1999, Microsoft released Internet Explorer 5, which supported favicons for the first time.",
      "explanation": "Favicons are graphical interface given to a site. Firstly, in 1999, favicon was supported by Internet Explorer 5 which was owned by Microsoft. Later on, in 1999 favicon was standardized by the W3C.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " A favicon is an image used by the browser to identify a website or web application.",
      "explanation": "Favicons are a graphical interface to a site. Browsers that provide favicon support typically display a page’s favicon in the browser’s address bar (sometimes in the history as well) and next to the page’s name in a list of bookmarks.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used if you want to highlight something that is important to the reader?",
      "explanation": ": The <b> tag is used to make the text bold. The <strong> tag is used to highlight the importance of text. The <em> tag is emphasis tag and is displayed in italic by browser. <i> tag is used to write text in italic font.",
      "options": [
        {
          "text": "<b>",
          "correct": true
        },
        {
          "text": "<strong>",
          "correct": false
        },
        {
          "text": "<em>",
          "correct": false
        },
        {
          "text": "<i>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is not used if you want to indicate the importance of the phrase?",
      "explanation": "Tags like <h1> (including all headings from h1 to h6), <em> and <strong> can be used to indicate the importance of the phrase. The <i> is none other than a type of font displaced in italic bond by the browsers.",
      "options": [
        {
          "text": "<i>",
          "correct": true
        },
        {
          "text": "<h1>",
          "correct": false
        },
        {
          "text": "<em>",
          "correct": false
        },
        {
          "text": "<strong>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following statement is not true?",
      "explanation": "XHTML is a markup language. There are certain terms and conditions (rules and regulations) for it. There are as: 1) In XHTML, the DOCTYPE is compulsory, 2) Xmlns attribute in <html> in manndatory, 3) The basic building blocks of markup i.e. <html>, <head>, <title>, and <body> are must in one. 4) Last but not least, XHTML is case sensitive where as HTML is case in-sensitive.",
      "options": [
        {
          "text": "XHTML DOCTYPE is mandatory",
          "correct": false
        },
        {
          "text": "The xmlns attribute in <html> is mandatory",
          "correct": false
        },
        {
          "text": "<html>, <head>, <title>, and <body> are mandatory",
          "correct": false
        },
        {
          "text": "None of the mentioned",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "According to the rules of XML and XHTML, all elements must be closed either with an end tag or by self-closing with space, slash, and a right-pointing angle bracket.",
      "explanation": "XML and XHTML are markup languages used for creating web pages. XHTML is case sensitive, and thus they must be closed either an end tag or by self-closing with a space, slash, and a right pointing angle bracket. Ex) <p></p> is paragraph tag closed with ending tag. <br/> is break tag whose closing is done either by a slash or right pointing angle bracket.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ is the XML equivalent to strict HTML 4.01.",
      "explanation": "XML is a markup language while XHTML is a extensible hypertext markup language. XHTML 1.0 Strict is the XML equivalent to strict HTML 4.01, and includes elements and attributes that have not been marked deprecated in the HTML 4.01 specification.",
      "options": [
        {
          "text": "XHTML 1.0 Strict",
          "correct": true
        },
        {
          "text": "XHTML 1.0 Frameset",
          "correct": false
        },
        {
          "text": "XHTML 1.0 Transitional",
          "correct": false
        },
        {
          "text": "XHTML 1.1 Strict",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following statement is true?",
      "explanation": "HTML is hypertext markup language. There are many rules and regulations in HTML for attribute specification. HTML is case in-sensitive and thus we can write attribute name in either uppercase or lowercase, none of it is going to make difference. There is nothing like that atrribute name should be minimized, we can write attribute name as long as and as short as we want. The only rule for attribute name is that it should be in quoted form.",
      "options": [
        {
          "text": "Attribute names must be in uppercase",
          "correct": false
        },
        {
          "text": "Attribute values must be quoted",
          "correct": true
        },
        {
          "text": "Attribute minimization is mandatory",
          "correct": false
        },
        {
          "text": "Attribute values should not be quoted",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The root element of an XHTML document must be html, and must contain an __________ attribute to associate it with the XHTML namespace.",
      "explanation": "The xmlns attribute specifies the xml namespace for a document. It is manadatory in XHTML while in HTML5 it is optional. The root element of an XHTML document must be html, and must contain an xmlns atrribute to associate it with the XHTML namespace.",
      "options": [
        {
          "text": "source",
          "correct": false
        },
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "xmlns",
          "correct": true
        },
        {
          "text": "link",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following encoding an XML parser assumes?",
      "explanation": "Basically parsers are used in softwares and they convert user data into machine data in short in memory form to use. In XML, parser is used to read XML. If an XML document lacks encoding specification, an XML parser assumes that the encoding is UTF-8 or UTF-16.",
      "options": [
        {
          "text": "UTF-8",
          "correct": false
        },
        {
          "text": "UTF-16",
          "correct": false
        },
        {
          "text": "UTF-32",
          "correct": false
        },
        {
          "text": "Both UTF-8 and UTF-32",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ is an extended version of the XHTML markup language for supporting RDF through a collection of attributes and processing rules in the form of well-formed XML documents.",
      "explanation": "XHTML+RDFa (Extensible Hypertext Markup Language + Resource Description Framework in attributes) is an extended version of the XHTML markup language for supporting RDF through a collection of attributes and processing rules in the form of well-formed XML documents.",
      "options": [
        {
          "text": "XHTML + RDFa",
          "correct": true
        },
        {
          "text": "XHTML+XHTML5",
          "correct": false
        },
        {
          "text": "XHTML1.0+XHTML2.0",
          "correct": false
        },
        {
          "text": "XHTML + RDF",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " XML is a markup language where documents must be marked up correctly.",
      "explanation": "XML is markup language while XHTML is extensible hypertext version of markup language. XHTML is HTML defined as an XML application. XHTML is stricter than HTML.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In OSI model USB lies under the layer ___________",
      "explanation": "There are seven layers namely Physical layer, data Link layer, network Layer, transport layer, session layer, presentation layer, and application layer. The physical layer is the first layer, it is used for transmitting electrical signal across the network. Examples are USB, Bluetooth or Ethernet.",
      "options": [
        {
          "text": "data Link layer",
          "correct": false
        },
        {
          "text": "physical layer",
          "correct": true
        },
        {
          "text": "network layer",
          "correct": false
        },
        {
          "text": "transport layer",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "IP is used in the level ___________",
      "explanation": "Network layer is the third layer, it deals with routing across complicated networks, Internet Protocol (IP) is very commonly used at this level. It is capable of traveling across multiple networks. It can also travel through intermediate devices like routers.",
      "options": [
        {
          "text": "presentation layer",
          "correct": false
        },
        {
          "text": "network layer",
          "correct": true
        },
        {
          "text": "application layer",
          "correct": false
        },
        {
          "text": "data Link layer",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one is not the feature of HTTP protocol?",
      "explanation": "There are basically three main features of HTTP protocol i.e HTTP is media independent, HTTP is connectionless and it is stateless also. Browser initiates HTTP request, and then client disconnects from the server.",
      "options": [
        {
          "text": "media independent",
          "correct": false
        },
        {
          "text": "connectionless",
          "correct": false
        },
        {
          "text": "responsive",
          "correct": true
        },
        {
          "text": "stateless",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following are not the valid character set in HTTP?",
      "explanation": "A character set must know to web browsers to display HTML pages correctly. For the preference of clients we use character sets for specifying characters. The default value is US-ASCII. The valid character sets are ISO-8859-1, US-ASCII or ISO-8859-7.",
      "options": [
        {
          "text": "ISO-8859-1",
          "correct": false
        },
        {
          "text": "US-ASCII",
          "correct": false
        },
        {
          "text": "ISO-8859-7",
          "correct": false
        },
        {
          "text": "ISO-8859-12",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one is the correct syntax for specifying media type?",
      "explanation": "Internet media types are used in Content-Type and Accept header fields. Media types are registered with IANA (Internet Assigned Number Authority). The syntax for a media type is m-type = type “/” subtype *(“;” parameter). The name of subtype, type and parameter attribute all are case sensitive.",
      "options": [
        {
          "text": "type ”/” subtype *( “;” parameter)",
          "correct": true
        },
        {
          "text": "subtype ”/” type *(“;” parameter)",
          "correct": false
        },
        {
          "text": "parameter “/” type *(“;” subtype)",
          "correct": false
        },
        {
          "text": "(“;” subtype) “/” type *(parameter)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which header field defines meta information?",
      "explanation": "A HTTP header which does not relate to the content of message is a response-header. A request-header is used to provide information about request or response. Entity-header field defines meta information about the body. If the body is not present resource is identified by request. The general syntax for all the header fields is msg-header=field-name “:” [field-value]. General-header field is for both response and request.",
      "options": [
        {
          "text": "Request-header",
          "correct": false
        },
        {
          "text": "Response-header",
          "correct": false
        },
        {
          "text": "General-header",
          "correct": false
        },
        {
          "text": "Entity-header",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the request method?",
      "explanation": "There are various request methods on the resource identified by Request-URI. Get, post, head, delete, trace, connect, put and options are some of the methods. For retrieving information from the server we use Get method.",
      "options": [
        {
          "text": "Head",
          "correct": false
        },
        {
          "text": "Get",
          "correct": false
        },
        {
          "text": "Remove",
          "correct": true
        },
        {
          "text": "Put",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which symbol is used when HTTP request does not apply to the particular source?",
      "explanation": "When HTTP request does not apply to particular resource ‘*’ is used. It is applied to the server itself. This is only allowed when the used method is not necessarily applied to the resource. E.g. OPTIONS * HTTP/1.1",
      "options": [
        {
          "text": "‘&’",
          "correct": false
        },
        {
          "text": "‘*’",
          "correct": true
        },
        {
          "text": "‘#’",
          "correct": false
        },
        {
          "text": "‘@’",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a request-header field?",
      "explanation": "For passing additional information about request we use request-header fields. These are also requested modifiers. There are several request-header fields like Accept-Encoding, Expect, Accept-Charset, Accept-Language, Form, Host, Authorization, If-Match, Proxy-Authorization, Range, User-Agent, TE, Referer, If-Unmodified-Since, If-Range.",
      "options": [
        {
          "text": "Expect",
          "correct": false
        },
        {
          "text": "Host",
          "correct": false
        },
        {
          "text": "Delete",
          "correct": true
        },
        {
          "text": "If-None-Match",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What does ‘3xx’ code denote?",
      "explanation": "‘3xx’ means Redirection, any further action have to be taken for completing the request. ‘1xx’ is for Informational, it signifies that the request was received and the process is going on. ‘2xx’ denotes Success, which signifies the action was successfully understood, received and accepted.",
      "options": [
        {
          "text": "Redirection",
          "correct": true
        },
        {
          "text": " Server Error",
          "correct": false
        },
        {
          "text": "Success",
          "correct": false
        },
        {
          "text": "Informational",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not a response-header field?",
      "explanation": "For passing additional information about the response that can’t be placed in Status-Line, we use response-header fields. Some of the fields are Age, Accept-Ranges, Location, ETag, WWW-Authenticate, Vary, Server, Retry-After.",
      "options": [
        {
          "text": "Location",
          "correct": false
        },
        {
          "text": "Server",
          "correct": false
        },
        {
          "text": "ETag",
          "correct": false
        },
        {
          "text": "Referer",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element represents a thematic break rather than a horizontal rule, though that is the likely representation?",
      "explanation": "The <dd> & <dt> tag defines names/terms. <menu> tag in HTML is for list of commands. The hr tag defines a thematic break in an HTML page (e.g. a shift of topic). Thematic is break between paragraph-level elements.",
      "options": [
        {
          "text": "<dd>",
          "correct": false
        },
        {
          "text": "<dt>",
          "correct": false
        },
        {
          "text": "<hr>",
          "correct": true
        },
        {
          "text": "<menu>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element was redefined to represent user interface menus, including context menus?",
      "explanation": "<dt> tag defines terms/names. The <hr> tag is used for thematic break between paragraph-level. <ul> tag is used to represent list of items/objects. <menu> tag in HTML is for list of commands. The menu tag is used for context menus, toolbars and for listing form controls and commands.",
      "options": [
        {
          "text": "<ul>",
          "correct": false
        },
        {
          "text": "<dt>",
          "correct": false
        },
        {
          "text": "<hr>",
          "correct": false
        },
        {
          "text": "<menu>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following HTML 4 attributes is not removed in HTML5?",
      "explanation": "Mark attribute is still used in HTML5 but rest of attributes i.e. text, rules, link are deprecated in HTML5.",
      "options": [
        {
          "text": "text",
          "correct": false
        },
        {
          "text": "rules",
          "correct": false
        },
        {
          "text": "link",
          "correct": false
        },
        {
          "text": "mark",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element is not removed by HTML5?",
      "explanation": "A <span> element (used to color a part of a text) is still used in HTML5. Elements like vlink, marginwidth and compact has been removed in HTML5, which were part of HTML markup. In earlier they have been deprecated.",
      "options": [
        {
          "text": "vlink",
          "correct": false
        },
        {
          "text": "span",
          "correct": true
        },
        {
          "text": "marginwidth",
          "correct": false
        },
        {
          "text": "compact",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a newly added element in HTML5?",
      "explanation": "An article tag is semantic element newly introduced in HTML5 along with nav and audio. Frameset was already introduced in HTML markup used to divide window/web page in frames.",
      "options": [
        {
          "text": "article",
          "correct": false
        },
        {
          "text": "audio",
          "correct": false
        },
        {
          "text": "nav",
          "correct": false
        },
        {
          "text": "frameset",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "____________ defines the accelerator key to be used for keyboard access to an element.",
      "explanation": "Command tag specifies a command provided with action. When one want to provide parentheses around ruby text, rp tag is used. The accesskey attribute specifies a shortcut key to activate/focus an element. Data-X stores data.",
      "options": [
        {
          "text": "data-X",
          "correct": false
        },
        {
          "text": "accesskey",
          "correct": true
        },
        {
          "text": "rp",
          "correct": false
        },
        {
          "text": "command",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element represents the header of a section or the document and contains a label or other heading information for the related content?",
      "explanation": "Data-X element consist of data. The mark element indicates highlighted/marked text. The header element represents a container for introductory content or a set of navigational links.",
      "options": [
        {
          "text": "data-X",
          "correct": false
        },
        {
          "text": "header",
          "correct": true
        },
        {
          "text": "mark",
          "correct": false
        },
        {
          "text": "meter",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element sets is an item of metadata?",
      "explanation": "Itemscope is a boolean global attribute that defines the scope of associated metadata. The itemscope attribute creates a new item, a group of name-value pairs. The URL of vocabulary is specified by itemtype global attribute. List of element ID’s is provided by itemref.",
      "options": [
        {
          "text": "itemscope",
          "correct": true
        },
        {
          "text": "itemref",
          "correct": false
        },
        {
          "text": "itemtype",
          "correct": false
        },
        {
          "text": "none of the mentioned",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "_____________ defines a group of content that should be used as a figure and may be labeled by a legend element.",
      "explanation": "The aside tag contains data related to its surrounding. <output> is result of anything. The figure tag specifies self-contained content, like illustrations, diagrams, photos, code listings, etc. Additional details that someone wants to know or hide as per demand are provided by details element.",
      "options": [
        {
          "text": "figure",
          "correct": true
        },
        {
          "text": "details",
          "correct": false
        },
        {
          "text": "output",
          "correct": false
        },
        {
          "text": "aside",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used to define a discrete unit of content such as a blogpost, comment, and so on?",
      "explanation": "Sections in document is made by the section tag. The class attribute specifies one or more class names to HTML. An article element is semantic element and it contains a standalone piece of content that would make sense if syndicated as an RSS item, for example a news item.",
      "options": [
        {
          "text": "section",
          "correct": false
        },
        {
          "text": "class",
          "correct": false
        },
        {
          "text": "article",
          "correct": true
        },
        {
          "text": "media",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "HTML5 documents may contains a ___________ element, which is used to set the header section of a document.",
      "explanation": "Section element is used to make sections in document. The copyright/footer information is provided by footer element in HTML5. A header for document section is given by header element. The header tag is used to contain the header content of a site.",
      "options": [
        {
          "text": "header",
          "correct": true
        },
        {
          "text": "footer",
          "correct": false
        },
        {
          "text": "section",
          "correct": false
        },
        {
          "text": "drive",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element may be used within content to represent material that is tangential?",
      "explanation": "<cite> tag defines the title of work. The class attribute specifies one or more class names to HTML. An article tag is similar to <section> or <header> which contains information. The aside tag defines a block of content that is related to the main content around it, but not central to the flow of it.",
      "options": [
        {
          "text": "aside",
          "correct": true
        },
        {
          "text": "cite",
          "correct": false
        },
        {
          "text": "article",
          "correct": false
        },
        {
          "text": "class",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "____________ contains the navigation menu, or other navigation functionality for the page.",
      "explanation": "The nav element is for marking up the navigation links or other constructs (eg a search form) that will take you to different pages of the current site, or different areas of the current page. Header contains section of headings. Section element is used to make sections in document. The aside tag defines a block of content that is related to the main content around it, but not central to the flow of it.",
      "options": [
        {
          "text": "section",
          "correct": false
        },
        {
          "text": "header",
          "correct": false
        },
        {
          "text": "nav",
          "correct": true
        },
        {
          "text": "aside",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following attribute is used to display date/time content?",
      "explanation": "To provide both human and machine-friendly date/time content, the element supports a datetime attribute, which should be set to the previously mentioned date format of YYYY-MM-DDThh:mm:ssTZD. Time tag defines date and time (human readable) while datetime tag display machine readable date/time.",
      "options": [
        {
          "text": "time",
          "correct": false
        },
        {
          "text": "datetime",
          "correct": true
        },
        {
          "text": "date",
          "correct": false
        },
        {
          "text": "year",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The element ___________ simply groups items within an enclosed dd tag, though it may associate them with a caption defined by a dt tag.",
      "explanation": "HTML documents are delivered as “documents”.These are then parsed, which turns them into the Document Object Model (DOM) internal representation, within the web browser. A self-contained information like images, diagrams are specified by figure tag in HTML. External applications are embed using embed tag.",
      "options": [
        {
          "text": "object",
          "correct": true
        },
        {
          "text": "figure",
          "correct": false
        },
        {
          "text": "embed",
          "correct": false
        },
        {
          "text": "collect",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element is used for highlighting content similarly to how a highlighter pen might be used on important text in a book?",
      "explanation": "<em> tag convert the font in italic one. The <strong> tag is used to denote the importance of text. <bold> tag is used to make the text bold in font size. The mark tag defines marked text and is used to highlight parts of your text.",
      "options": [
        {
          "text": "em",
          "correct": false
        },
        {
          "text": "strong",
          "correct": false
        },
        {
          "text": "mark",
          "correct": true
        },
        {
          "text": "bold",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "To insert a video, we use a video tag and set its src attribute to a local or remote URL containing a playable movie.",
      "explanation": "To show a video in HTML, video element is used. One of the attribute of video called src is used to provide the location of video i.e. it’s URL address.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used to encapsulate navigation and then style the elements appropriately as menu items?",
      "explanation": "Conventionally, many web developers have use <ul></ul> and <li></li> tags to encapsulate navigation and then styled the elements appropriately as menu items. This seems to introduce quite a bit of ambiguity in markup because it may be difficult to determine the difference between a list that has links in it and a list that is simply navigation.",
      "options": [
        {
          "text": "ul",
          "correct": false
        },
        {
          "text": "li",
          "correct": false
        },
        {
          "text": "nav",
          "correct": false
        },
        {
          "text": "both ul and li",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ can be used to advise the browser to download media content in the background to improve playback.",
      "explanation": "Data-X stores custom data. Buffer property is used to decide whether the output should be buffered or not. If autobuffering attribute is used, then the video will automatically begin to buffer even if it’s not set. It suggests to the browser that it should load as much of the resource as possible. As long as the browser’s own media cache isn’t full, it will keep on downloading. URL of an image is given by poster attribute until the user seek for it.",
      "options": [
        {
          "text": "poster",
          "correct": false
        },
        {
          "text": "autobuffer",
          "correct": true
        },
        {
          "text": "buffer",
          "correct": false
        },
        {
          "text": "data-X",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The _________ element is used to render simple graphics such as line art, graphs, and other custom graphical elements on the client side.",
      "explanation": "Metdata gives data or information of other data. CSS i.e. Cascading Style Sheets is a style sheet language. Canvas is introduced in HTML5 for providing/drawing graphics. The canvas element is part of HTML5 and allows for dynamic, scriptable rendering of 2D shapes and bitmap images.",
      "options": [
        {
          "text": "metadata",
          "correct": false
        },
        {
          "text": "css",
          "correct": false
        },
        {
          "text": "canvas",
          "correct": true
        },
        {
          "text": "art",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Prior to HTML5 in web market, traditionally, multimedia has been inserted with the concept of tag-based multimedia back.",
      "explanation": "Multimedia has different formats, it can be anything that you can hear or see. Traditionally, multimedia has been inserted with the embed and object elements, particularly when inserting Adobe Flash, Apple QuickTime, Windows Media, and other formats.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Consider the following markup and answer the question that follow.\n\n<source src=\"html_5.mp4\" type=\"video/mp4\">\n<source src=\"html_5.ogv\" type=\"video/ogg\">\nWhat is the need to add multiple file formats for the same file?",
      "explanation": "To address the media support problem, you need to add in alternative formats to use by including a number of source tags.",
      "options": [
        {
          "text": "To provide fallback support",
          "correct": false
        },
        {
          "text": "To address the media support problem",
          "correct": false
        },
        {
          "text": "To provide fallback support & address the media support problem",
          "correct": true
        },
        {
          "text": "To provide foul back support",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Consider the markup and answer the question that follow.\n<? controls autobuffer autoplay>\n</?>\nWhich HTML5 element can replace the \"?\" ?",
      "explanation": "Autobuffer is a attribute for both <audio> and <video>, so we can replace it with either <audio> or <video>. As with the video element, you also have autobuffer and autoplay attributes for the audio element.",
      "options": [
        {
          "text": "<audio>",
          "correct": false
        },
        {
          "text": "<video>",
          "correct": false
        },
        {
          "text": "<media>",
          "correct": false
        },
        {
          "text": "both <audio> & <video>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which plugins can provide the fallback support for old browsers?",
      "explanation": "An attribute of the format: type=”application/x-shockwave-flash” will justify the purpose.",
      "options": [
        {
          "text": "Flash",
          "correct": false
        },
        {
          "text": "Quicktime",
          "correct": false
        },
        {
          "text": "Both Flash and Quicktime",
          "correct": true
        },
        {
          "text": "Fireback and Quickertime",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the promises of the open web platform?",
      "explanation": "The different promises of the open web platform are –\n• Security and Privacy\n• Core Web Design and Development\n• Device Interaction\n• Application Lifecycle\n• Media and Real-Time Communications\n• Performance and Tuning\n• Usability and Accessibility\n• Services\n",
      "options": [
        {
          "text": "Security and Privacy",
          "correct": false
        },
        {
          "text": "Performance and Tuning",
          "correct": false
        },
        {
          "text": "Media and Real-Time Communications",
          "correct": false
        },
        {
          "text": "Device Interconnection",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "HTML5 brings to the Web video and audio tracks without needing plugins.",
      "explanation": "The World Wide Web Consortium (W3C) published a Recommendation of HTML5, the fifth major revision of the format used to build Web pages and applications, and the cornerstone of the Open Web Platform. HTML5 brings to the Web video and audio tracks without needing plugins with programmatic access to resolution dependent canvas.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which protocol is supported by Android browsers?",
      "explanation": "HTTPS i.e. Hypertext Transfer Protocol Secure is used on internet. HLS which stands for Hypertext Transfer Protocol Live Streaming invented by Apple Inc., a new streaming protocol which is supported by android browsers. RTMP stands for Real-Time Messaging Protocol, FTP stands for File Transfer Protocol.",
      "options": [
        {
          "text": "HTTPS",
          "correct": false
        },
        {
          "text": "HLS",
          "correct": true
        },
        {
          "text": "RTMP",
          "correct": false
        },
        {
          "text": "FTP",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ is a JavaScript library that implements the most common user interface elements and interactions like sliders, accordions, tabs, and so on.",
      "explanation": "JQuery UI is a curated set of user interface interactions, effects, widgets, and themes built on top of the jQuery JavaScript Library. JavaScript is a scripting language. VTS is a powerful rendering engine browser for JavaScript. JCL is Job Control Language which is also named as scripting language.",
      "options": [
        {
          "text": "JavaScript",
          "correct": false
        },
        {
          "text": "JQuery UI",
          "correct": true
        },
        {
          "text": "VTS",
          "correct": false
        },
        {
          "text": "JCL",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM, __________ sets or returns whether the audio/video should be loaded when the page loads.",
      "explanation": "Autoplay, preload, buffered, controller etc are the different kinds of attribute of video/audio element. Using autoplay, video/audio automatically begins to play. The preload property allows the author to provide a hint to the browser about what he/she thinks will lead to the best user experience. This attribute may be ignored in some instances.",
      "options": [
        {
          "text": "preload",
          "correct": true
        },
        {
          "text": "autoplay",
          "correct": false
        },
        {
          "text": "buffered",
          "correct": false
        },
        {
          "text": "controller",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a HTML5 tag?",
      "explanation": "<video> tag is used to display video clips in HTML5. Multiple media resources for media elements is specified by <source> tag. Text track for media elements i.e. <audio> & <video> is provided by <track> tag in HTML5. There is no such thing as slider tag in HTML5.",
      "options": [
        {
          "text": "<video>",
          "correct": false
        },
        {
          "text": "<source>",
          "correct": false
        },
        {
          "text": "<track>",
          "correct": false
        },
        {
          "text": "<slider>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What will happen if height and width of video are not set while video loads?",
      "explanation": "If height and width are not set, the browser does not know the size of the video. The effect will be that the page will change (or flicker) while the video loads.",
      "options": [
        {
          "text": "page flickers",
          "correct": true
        },
        {
          "text": "page does not load",
          "correct": false
        },
        {
          "text": "page crash",
          "correct": false
        },
        {
          "text": "page closes",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following HTML Video – Media Type is not supported in IE?",
      "explanation": "The Ogg container format with the Theora video codec and the Vorbis audio codec is supported in desktop/mobile Gecko (Firefox), Chrome, and Opera, and support for the format can be added to Safari (but not on iOS) by installing an add-on. The format is not supported in Internet Explorer in any way. The most widely used format for HTMl video i.e MP4 format is supported in IE.",
      "options": [
        {
          "text": "WebM",
          "correct": false
        },
        {
          "text": "MP4",
          "correct": false
        },
        {
          "text": "Ogg",
          "correct": true
        },
        {
          "text": "MP4 FLAC",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM, __________ sets or returns the default speed of the audio/video playback.",
      "explanation": "CurrentTime set or returns current playback position while playing audio/video. The length of the current audio/video is set or returned by duration. Default speed of playback is given by defaultPlaybackRate while playback returns speed of the audio/video.",
      "options": [
        {
          "text": "currentTime",
          "correct": false
        },
        {
          "text": "duration",
          "correct": false
        },
        {
          "text": "defaultPlaybackRate",
          "correct": true
        },
        {
          "text": "playbackRate",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM, __________ sets or returns the CORS settings of the audio/video.",
      "explanation": "CurrentTime set or returns current playback position while playing audio/video. The length of the current audio/video is set or returned by duration. Default speed of playback is given by defaultPlaybackRate. The purpose of the crossorigin attribute is to allow you to configure the CORS requests for the element’s fetched data.",
      "options": [
        {
          "text": "currentTime",
          "correct": false
        },
        {
          "text": "duration",
          "correct": false
        },
        {
          "text": "defaultPlaybackRate",
          "correct": false
        },
        {
          "text": "crossOrigin",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM, __________ returns a TimeRanges object representing the buffered parts of the audio/video.",
      "explanation": "Preload is used to set or return whether the video/ audio has been loaded on page. Current network of audio/video has been set or returned by networkState. A buffered range is a time-range of buffered audio/video. The user gets several buffered ranges if he/she skips in the audio/video. Media controller of current video/audio is given or returned by controller.",
      "options": [
        {
          "text": "preload",
          "correct": false
        },
        {
          "text": "networkState",
          "correct": false
        },
        {
          "text": "buffered",
          "correct": true
        },
        {
          "text": "controller",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "There is an audio format supported across all browsers.",
      "explanation": "There are 3 formats that are used in HTML5 Audio and are .mp3, .m4a AAC also known as H.264 format.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following tag is used for audio in HTML5?",
      "explanation": "<video> tag is used for video clips in HTML5. <canvas> is for graphical user interface. The audio tag defines sound, such as music or other audio streams.",
      "options": [
        {
          "text": "<bgsound>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": true
        },
        {
          "text": "<video>",
          "correct": false
        },
        {
          "text": "<canvas>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used to defines multiple media resources for media elements audio and video?",
      "explanation": "<video> tag is used for video clips in HTML5. <canvas> is for graphical user interface. The audio tag defines sound, such as music or other audio streams.defines multiple media resources for media elements, such as <video> and <audio>.",
      "options": [
        {
          "text": "<source>",
          "correct": true
        },
        {
          "text": "<canvas>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": false
        },
        {
          "text": "<video>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following browser does not support wav file format?",
      "explanation": "Opera, firefox, chrome and internet explorer are different kinds of browsers. Out of which audio file format named wav is not supported by internet explorer.",
      "options": [
        {
          "text": "Opera",
          "correct": false
        },
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Chrome",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns the volume of the audio/video.",
      "explanation": "Src attribute gives current source of audio/video element. The videoTrack list is returned representing available video tracks by video track attribute. Volume attribute sets the current volume of video/audio.",
      "options": [
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "volume controls",
          "correct": false
        },
        {
          "text": "volume",
          "correct": true
        },
        {
          "text": "video Tracks",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following attribute adds audio controls, like play, pause, and volume?",
      "explanation": "The audio attribute defines sound, such as music or other audio streams. Source attribute defines multiple media resources for media elements, such as <video> and <audio>. Src attribute gives current source of audio/video element. The controls attribute is a boolean attribute. When present, it specifies that audio controls should be displayed.",
      "options": [
        {
          "text": "audio",
          "correct": false
        },
        {
          "text": "controls",
          "correct": true
        },
        {
          "text": "source",
          "correct": false
        },
        {
          "text": "src",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns whether the audio/video should start playing as soon as it is loaded.",
      "explanation": "Control attribute is used to set whether audio/video should display controls. AudioTrack list representing audio tracks is set by audio track. The autoplay attribute is a boolean attribute. When present, the audio will automatically start playing as soon as it can do so without stopping. A current src of audio/video is returned by currentSrc.",
      "options": [
        {
          "text": "controls",
          "correct": false
        },
        {
          "text": "audio Tracks",
          "correct": false
        },
        {
          "text": "autoplay",
          "correct": true
        },
        {
          "text": "currentSrc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns whether the audio/video should start over again when finished.",
      "explanation": "The loop attribute is a boolean attribute. When present, it specifies that the audio will start over again, every time it is finished. With autoplay, it ensures whether video/audio should play immediately after loading page. Seeking returns whether user is currently seeking video/audio. Timeranges representing played parts of audio/video is set by played attribute.",
      "options": [
        {
          "text": "loop",
          "correct": true
        },
        {
          "text": "autoplay",
          "correct": false
        },
        {
          "text": "seeking",
          "correct": false
        },
        {
          "text": "played",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ returns a MediaError object representing the error state of the audio/video.",
      "explanation": "Seeking returns whether user is currently seeking video/audio. Ended attribute fires up when current playing playlist is finished. The error property returns a MediaError object. The MediaError object has a code property containing the error state of the audio/video. The group to which audio/video belongs is returned by mediaGroup.",
      "options": [
        {
          "text": "ended",
          "correct": false
        },
        {
          "text": "seeking",
          "correct": false
        },
        {
          "text": "error",
          "correct": true
        },
        {
          "text": "mediaGroup",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " In HTML Audio/Video DOM __________ returns a TextTrackList object representing the available text tracks.",
      "explanation": "The current ready state of video/audio is set by readyState. StartDate sets current date representing current time offsets. VideoTrack returns video track list representing available video tracks. The textTracks property returns a TextTrackList object. The TextTrackList object represents the available text tracks for the audio/video. Each available text track is represented by an TextTrack Object.",
      "options": [
        {
          "text": "readyState",
          "correct": false
        },
        {
          "text": "startDate",
          "correct": false
        },
        {
          "text": "videoTracks",
          "correct": false
        },
        {
          "text": "textTracks",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element is used for canvas graphics?",
      "explanation": "CSS i.e. Cascading Style Sheet is a scripting language. Canvas graphics is introduced in HTML5. Element used for canvas graphics is <canvas>. The HTML canvas element is used to draw graphics, on the fly, via scripting (usually JavaScript).",
      "options": [
        {
          "text": "<paint>",
          "correct": false
        },
        {
          "text": "<canvas>",
          "correct": true
        },
        {
          "text": "<graphic>",
          "correct": false
        },
        {
          "text": "<css>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following statement is not true?",
      "explanation": "SVG stands for “Scalable Vector Graphics”, it is used to draw graphics for the web. W3C recommends SVG graphics. SVG also supports  event handlers which is not supported in canvas.",
      "options": [
        {
          "text": "SVG stands for Scalable Vector Graphics",
          "correct": false
        },
        {
          "text": "SVG is used to define graphics for the Web",
          "correct": false
        },
        {
          "text": "SVG is a W3C recommendation",
          "correct": false
        },
        {
          "text": "SVG doesn’t support event handlers",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "To draw on the canvas, authors must first obtain a reference to a context using the ______________ method of the canvas interface element.",
      "explanation": "The method getImageData(), returns an imageData that copies  pixel data for a specified thing in canvas. ContextType is a DOMString containing the context identifier defining the drawing context associated to the canvas.",
      "options": [
        {
          "text": "getImageData",
          "correct": false
        },
        {
          "text": "toDataURL",
          "correct": false
        },
        {
          "text": "getContext",
          "correct": true
        },
        {
          "text": "restore",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ___________ method must add the scaling transformation described by the arguments to the transformation matrix.",
      "explanation": "HTML5 canvas provides scale(x, y) method which is used to increase or decrease the units in our canvas grid. The position (0, 0) is remaped in canvas by translate(x, y) method. If one want to rotate the current drawing then rotate(angle) method can be used.",
      "options": [
        {
          "text": "scale(x, y)",
          "correct": true
        },
        {
          "text": "translate(x, y)",
          "correct": false
        },
        {
          "text": "rotate(angle)",
          "correct": false
        },
        {
          "text": "skew(x,y)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which method must clear the pixels in the specified rectangle that also intersects the current clipping region to a fully transparent black, erasing any previous image?",
      "explanation": "StrokeRect(x, y, w, h) draws rectangle without filling it. The clearRect() method clears the specified pixels within a given rectangle. FillRect(x, y, w, h) method draws filled rectangle.",
      "options": [
        {
          "text": "strokeRect(x, y, w, h)",
          "correct": false
        },
        {
          "text": "clearRect(x, y, w, h)",
          "correct": true
        },
        {
          "text": "fillRect(x, y, w, h)",
          "correct": false
        },
        {
          "text": "removeRect(x,y,w,h)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "When the _____________ method is passed an animated image as its image argument, the user agent must use the poster frame of the animation, or, if there is no poster frame, the first frame of the animation.",
      "explanation": "The width of specified text present in an object is given by measureText() method. The drawImage() method draws an image, canvas, or video onto the canvas. ImageData() method provides image data in pixels in canvas.",
      "options": [
        {
          "text": "measureText()",
          "correct": false
        },
        {
          "text": "imageData()",
          "correct": false
        },
        {
          "text": "drawImage()",
          "correct": true
        },
        {
          "text": "setImage()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ____________ method must create a new clipping region by calculating the intersection of the current clipping region and the area described by the current path, using the non-zero winding number rule.",
      "explanation": "The path one defines is drawn by stroke() method. Any region/shape or size in canvas is clipped by clip(). The fill() method fills the current drawing (path). The default color is black. There is no method like get().",
      "options": [
        {
          "text": "fill()",
          "correct": false
        },
        {
          "text": "stroke()",
          "correct": false
        },
        {
          "text": "clip()",
          "correct": true
        },
        {
          "text": "get()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ____________ method must fill all the subpaths of the current path, using fillStyle, and using the non-zero winding number rule.",
      "explanation": "The path one defines is drawn by stroke() method. Any region/shape or size in canvas is clipped by clip(). The fill() method fills the current drawing (path). The default color is black. There is no method like get().",
      "options": [
        {
          "text": "fill()",
          "correct": true
        },
        {
          "text": "stroke()",
          "correct": false
        },
        {
          "text": "clip()",
          "correct": false
        },
        {
          "text": "get()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following methods must empty the list of subpaths so that the context once again has zero subpaths?",
      "explanation": "ClosePath() creates a path that starts from current point up to the starting point. The beginPath() method begins a path, or resets the current path. MoveTo(x, y) moves the point specified in canvas but without creating the line. There is nothing like endPath() in canvas.",
      "options": [
        {
          "text": "closePath()",
          "correct": false
        },
        {
          "text": "beginPath()",
          "correct": true
        },
        {
          "text": "moveTo(x, y)",
          "correct": false
        },
        {
          "text": "endPath()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " An API is an application programming interface consisting of methods and properties which allow the author to get or set data or execute commands to the user agent.",
      "explanation": "API, an abbreviation of application program interface, is a set of routines, protocols, and tools for building software applications. API allow the author/owner to get or set data or execute commands to the user agent.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a type of attribute for input tag?",
      "explanation": "Day is not defined in the pre-defined attribute list of input tag. Week attribute defines week and year when used as attribute in input tag. Month specifies month and year when it is accessed in input tag. The time attribute displays current time in html.",
      "options": [
        {
          "text": "day",
          "correct": true
        },
        {
          "text": "week",
          "correct": false
        },
        {
          "text": "month",
          "correct": false
        },
        {
          "text": "time",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The new __________ element is supposed to represent some form of extra details, such as a tooltip or revealed region that may be shown to a user.",
      "explanation": "A scalar measurement within a range or fractional value is defined by meter tag. A list/menu of coommands is displayed by menu tag in html. The details tag specifies additional details that the user can view or hide on demand. The details tag can be used to create an interactive widget that the user can open and close. Any sort of content can be put inside the <details> tag. Progress of a task is done by progress element.",
      "options": [
        {
          "text": "progress",
          "correct": false
        },
        {
          "text": "meter",
          "correct": false
        },
        {
          "text": "details",
          "correct": true
        },
        {
          "text": "menu",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ element may contain not just links but also other interactive items, including the newly introduced command element.",
      "explanation": "A scalar measurement within a range or fractional value is defined by meter tag. The menu tag defines a list/menu of commands. The menu tag is used for context menus, toolbars and for listing form controls and commands. The details tag specifies additional details that the user can view or hide on demand. The details tag can be used to create an interactive widget that the user can open and close. Any sort of content can be put inside the <details> tag. Progress of a task is done by progress element.",
      "options": [
        {
          "text": "progress",
          "correct": false
        },
        {
          "text": "meter",
          "correct": false
        },
        {
          "text": "details",
          "correct": false
        },
        {
          "text": "menu",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ attribute effectively renders the iframe as an inline include, which allows the parent document’s CSS to affect the contents of the iframe.",
      "explanation": "Embed attribute attach external content at a specified point in document. The seamless attribute is a boolean attribute. When present, it specifies that the iframe should look like it is a part of the containing document (no borders or scrollbars). Allow-forms re-enables from submission. Scripts are re-enabled by allow-scripts.",
      "options": [
        {
          "text": "allow-forms",
          "correct": false
        },
        {
          "text": "seamless",
          "correct": true
        },
        {
          "text": "embed",
          "correct": false
        },
        {
          "text": "allow-scripts",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following allows the sandboxed iframe to run scripts from the same domain?",
      "explanation": "Scripts are re-enabled by allow-scripts. The sandbox attribute enables an extra set of restrictions for the content in the iframe.  Allow-forms re-enables from submission. Allow-same-origin allows iframe content to be treated as being from the same origin. API’s are re-enable by allow-pointer-lock.",
      "options": [
        {
          "text": "allow-same-origin",
          "correct": false
        },
        {
          "text": "allow-forms",
          "correct": false
        },
        {
          "text": "allow-scripts",
          "correct": true
        },
        {
          "text": "allow-pointer-lock",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ allows the iframe to pull in content from elsewhere in the same domain.",
      "explanation": "Scripts are re-enabled by allow-scripts. Allow-forms re-enables from submission. Allow-same-origin allows iframe content to be treated as being from the same origin. API’s are re-enable by allow-pointer-lock.",
      "options": [
        {
          "text": "allow-same-origin",
          "correct": true
        },
        {
          "text": "allow-forms",
          "correct": false
        },
        {
          "text": "allow-scripts",
          "correct": false
        },
        {
          "text": "allow-pointer-lock",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a HTML5 added form element?",
      "explanation": "<datalist>, <keygen> and <output> are HTML5 added form element. Element <password> is not a HTML5 added form element. Password is an attribute used in input type in HTML.",
      "options": [
        {
          "text": "<datalist>",
          "correct": false
        },
        {
          "text": "<keygen>",
          "correct": false
        },
        {
          "text": "<output>",
          "correct": false
        },
        {
          "text": "<password>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element specifies a list of pre-defined options for an input element?",
      "explanation": "The datalist tag is used to provide an “autocomplete” feature on input elements. Users will see a drop-down list of pre-defined options as they input data. Password defines password field in HTML. It is attribute for input-type. The <keygen> element references from data after form has submitted. Result of calculation (script) is represented by output tag.",
      "options": [
        {
          "text": "<datalist>",
          "correct": true
        },
        {
          "text": "<keygen>",
          "correct": false
        },
        {
          "text": "<output>",
          "correct": false
        },
        {
          "text": "<password>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines a group of related options in a drop-down list?",
      "explanation": "HTML form element is used in its <form> tag having its own structure which is used by users for various tasks. If you have a long list of options, groups of related options are easier to handle for a user. Result of calculation (script) is represented by output tag. A drop down list of items is defined  by <option> tag in HTML.",
      "options": [
        {
          "text": "<form>",
          "correct": false
        },
        {
          "text": "<optgroup>",
          "correct": true
        },
        {
          "text": "<output>",
          "correct": false
        },
        {
          "text": "<option>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What does ‘On-Screen Action’ means in the testing of HTML5 applications?",
      "explanation": "While testing of HTML5 for a browser i.e. whether its elements are supported by the browser or not one can use draggable content using Drag action and this action can be called through On-Screen Action operation.",
      "options": [
        {
          "text": "Using Drag action",
          "correct": true
        },
        {
          "text": "Using new input type",
          "correct": false
        },
        {
          "text": "Using play and pause action of audio and video elements",
          "correct": false
        },
        {
          "text": "Verifying SVG and Canvas elements",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What can be used to verify a displayed graphics?",
      "explanation": "Region checkpoints are used to verify a displayed graphics. It is a kind of test operation which gives verification of application’s window or control is displayed correctly or not. Object’s property is verified by region checkpoints which is test operation. Local storage is for storing data.",
      "options": [
        {
          "text": "Property checkpoints",
          "correct": false
        },
        {
          "text": "Region checkpoints",
          "correct": true
        },
        {
          "text": "On-Screen Action",
          "correct": false
        },
        {
          "text": "Local STorage",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element has been removed from HTML5 (W3C) specification?",
      "explanation": "A section that is tangentially related to its surrounding content is defined by <aside> tag. A block of navigation links is provided by newly added element in HTML5 called <nav>. <hgroup> tag has been removed from HTML5 specification, but it can be seen in WHATWG version of HTML. The purpose of this element is how headings are displayed. It’s practice is limited to theory only. <figure> tag specifies its own self defined content which may contain diagrams, photos etc.",
      "options": [
        {
          "text": "<figure>",
          "correct": false
        },
        {
          "text": "<nav>",
          "correct": false
        },
        {
          "text": "<hgroup>",
          "correct": true
        },
        {
          "text": "<aside>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is used for plug-in content?",
      "explanation": "<embed> tag is new in HTML5 which also helps in validation of HTML5 page. It has attributes like height, src, type and width. HTML4 does not support this tag. Multiple media sources for video , audio and pictures are provided by <source> tag. <meter> tag gives a scalar measurement within a particular range. Progress of a task is shown by <progress> element.",
      "options": [
        {
          "text": "<embed>",
          "correct": true
        },
        {
          "text": "<progress>",
          "correct": false
        },
        {
          "text": "<meter>",
          "correct": false
        },
        {
          "text": "<source>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following does not lie under the attribute of <input> and is not supported by Opera?",
      "explanation": "<input> element type has new values as ‘url’, ‘email’, ‘datetime’, ‘date’, ‘month’, ‘tel’, ‘time’, ‘number’, ‘search’, ‘color’, ‘range’, ‘datetime-local’, ‘week’.",
      "options": [
        {
          "text": "url",
          "correct": false
        },
        {
          "text": "time",
          "correct": false
        },
        {
          "text": "tel",
          "correct": false
        },
        {
          "text": "option",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which is the new attribute of <input> element that is used to change the appearance of checkbox?",
      "explanation": "The indeterminate is actually not an attribute, it is the property of checkbox which can be change via JavaScript, e.g. Var checkbox=document.getElementById(“any-checkbox”); Checkbox.indeterminate=true;",
      "options": [
        {
          "text": "Indeterminate",
          "correct": true
        },
        {
          "text": "Media",
          "correct": false
        },
        {
          "text": "EI",
          "correct": false
        },
        {
          "text": "Target",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute does not lie inside <a> and <area> elements?",
      "explanation": "Preload is the attribute of the <video> element. Media, ping, hreflang, rel are the attribute used with <a> and <area> elements.",
      "options": [
        {
          "text": "Media",
          "correct": false
        },
        {
          "text": "Ping",
          "correct": false
        },
        {
          "text": "Hreflang",
          "correct": false
        },
        {
          "text": "Preload",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element does not support autofocus attribute?",
      "explanation": "Autofocus is a new attribute as well as very interesting one. It can be specified on <input>, <textarea>, <button> and <select> elements. It is a way to focus a form control when the page is loaded.",
      "options": [
        {
          "text": "<input>",
          "correct": false
        },
        {
          "text": "<select>",
          "correct": false
        },
        {
          "text": "<textarea>",
          "correct": false
        },
        {
          "text": "<base>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element does not support form attribute?",
      "explanation": "The new form attribute is for <input>, <select>, <textarea>, <button>, <output> and <fieldset>. One can place these elements anywhere on the page.",
      "options": [
        {
          "text": "<input>",
          "correct": false
        },
        {
          "text": "<output>",
          "correct": false
        },
        {
          "text": "<meta>",
          "correct": true
        },
        {
          "text": "<button>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute of <input> element can be used both with <datalist> and <select> elements?",
      "explanation": "List is the new attribute of <input> element and can be used together with <datalist> and <select> elements. Other attributes like pattern, multiple, max, min, step are new attribute used with the <input> element only.",
      "options": [
        {
          "text": "List",
          "correct": true
        },
        {
          "text": "Pattern",
          "correct": false
        },
        {
          "text": "Multiple",
          "correct": false
        },
        {
          "text": "Max",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not a Boolean attribute?",
      "explanation": "Formtarget attribute is a Boolean attribute that must have a value that is a valid browsing context name. Multiple is a new Boolean attribute of <input> the element which specifies constraint, novalidate, and formvalidate are <form> attribute and are Boolean as well.",
      "options": [
        {
          "text": "Multiple",
          "correct": false
        },
        {
          "text": "Novalidate",
          "correct": false
        },
        {
          "text": "Formvalidate",
          "correct": false
        },
        {
          "text": "Formtarget",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not the keyword of form method attribute?",
      "explanation": "The keyword GET, POST, PUT, DELETE mapped to the state GET, POST, PUT, DELETE and indicating the HTTP method respectively.",
      "options": [
        {
          "text": "GET",
          "correct": false
        },
        {
          "text": "POST",
          "correct": false
        },
        {
          "text": "PUT",
          "correct": false
        },
        {
          "text": "OUT",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the work of async attribute?",
      "explanation": "Async is the new attribute of the <script> element which influences script loading and its execution. It is a Boolean attribute which shows the manner of script execution. If async is present, the script will be executed asynchronously, as soon as it is available.",
      "options": [
        {
          "text": "It influences script loading",
          "correct": true
        },
        {
          "text": "It gives a label to the menu",
          "correct": false
        },
        {
          "text": "It validates form data",
          "correct": false
        },
        {
          "text": "Enables a set of extra restrictions on any content",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not <iframe> attribute?",
      "explanation": "Sizes is the attribute of <link> element. Sandbox is the attribute of <iframe> element that enables a set of extra restrictions on any content, seamless is a Boolean attribute of <iframe> which seamlessly included in the parent document, srcdoc attribute gives the content of the page that the nested browsing context is to contain.",
      "options": [
        {
          "text": "Seamless",
          "correct": false
        },
        {
          "text": "Srcdoc",
          "correct": false
        },
        {
          "text": "Sizes",
          "correct": true
        },
        {
          "text": "Sandbox",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not a new global attribute in HTML5?",
      "explanation": "Contenteditable, contextmenu, data, draggable, hidden, role, aria, spellcheck all are new global attributes introduced in HTML5. Class, dir, id, lang, style, tabindex, title are the attributes of HTML4 and now specified as global in HTML5.",
      "options": [
        {
          "text": "Contenteditable",
          "correct": false
        },
        {
          "text": "Contextmenu",
          "correct": false
        },
        {
          "text": "Title",
          "correct": true
        },
        {
          "text": "Draggable",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How do we write comments in HTML5?",
      "explanation": "Browser ignores comment in a code. There are always two types of command i.e. single line command and multiple line command. If one wants to add a comment in code, add the text between these characters <!…..comment….>. It will not visible in the user’s browser.",
      "options": [
        {
          "text": "<!……>",
          "correct": true
        },
        {
          "text": "<…….!>",
          "correct": false
        },
        {
          "text": "</…….>",
          "correct": false
        },
        {
          "text": "</……/>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one is correct syntax?",
      "explanation": "<p id=”td”> is the correct syntax for id type declaration. Id attribute’s value should start with a letter or an underscore. We cannot use any number or other character for defining name of the id.",
      "options": [
        {
          "text": "<p id=”1td”>",
          "correct": false
        },
        {
          "text": "<p id=”td”>",
          "correct": true
        },
        {
          "text": "<p id=”%td”>",
          "correct": false
        },
        {
          "text": "<p id=”#td”>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not example of block element?",
      "explanation": "The elements which always appear to start on a new line in browser are known as block level elements. Examples are <h1>,<ul>,<li> and <p>.",
      "options": [
        {
          "text": "<h1>",
          "correct": false
        },
        {
          "text": "<ul>",
          "correct": false
        },
        {
          "text": "<p>",
          "correct": false
        },
        {
          "text": "<a>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What does semantic markup not define?",
      "explanation": "< Semantic markup> which provides extra information, such as where emphasis is placed in a sentence, that something you have written is a quotation, the meaning of acronyms etc.",
      "options": [
        {
          "text": "provides extra information",
          "correct": false
        },
        {
          "text": "where an emphasis is placed in a sentence",
          "correct": false
        },
        {
          "text": "meaning of an acronym",
          "correct": false
        },
        {
          "text": "that describes paragraphs",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How many levels of headings HTML has?",
      "explanation": "HTML has six “levels ” of headings.<h1> is used for main headings,<h2> is used for subheadings. There is no other levels other than <h1>, <h2>, <h3>, <h4>, <h5>, <h6>",
      "options": [
        {
          "text": "6",
          "correct": true
        },
        {
          "text": "3",
          "correct": false
        },
        {
          "text": "7",
          "correct": false
        },
        {
          "text": "2",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the size of content of an <h1> element?",
      "explanation": "The contents of an <h1> element is the largest and the contents of an <h6> element is the smallest. Rest of <h2>, <h3>, <h4>, <h5> lies in between largest and smallest.",
      "options": [
        {
          "text": "Smallest",
          "correct": false
        },
        {
          "text": "Largest",
          "correct": true
        },
        {
          "text": "Medium",
          "correct": false
        },
        {
          "text": "Anything between smallest and largest",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the tag used for making character appearance bold?",
      "explanation": "By enclosing words in the tags <b>and</b> we can make characters appear bold. <i> element is for content in italics, <u> is for underlined content, <br> is for vertical breaking.",
      "options": [
        {
          "text": "<b>content</b>",
          "correct": true
        },
        {
          "text": "<i>content</i>",
          "correct": false
        },
        {
          "text": "<u>content</u>",
          "correct": false
        },
        {
          "text": "<br>content</br>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For writing chemical formula of water which tag will be used?",
      "explanation": "The <sub> element is used to contain characters that should be subscript. It is commonly used with foot notes or chemical formulas. E.g. H20, <sup> is use for superscript, <br> is for horizontal break, <ul> is for unordered list.",
      "options": [
        {
          "text": "<sup>",
          "correct": false
        },
        {
          "text": "<sub>",
          "correct": true
        },
        {
          "text": "<br/>",
          "correct": false
        },
        {
          "text": "<ul>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "which tag will be used For raising number to a power?",
      "explanation": "The <sup> element is used to contain characters that should be superscript. It is commonly used with foot notes or chemical formulae. E.g. X2 , <br> is for break, <ul> is for unordered list.",
      "options": [
        {
          "text": "<sup>",
          "correct": true
        },
        {
          "text": "<sub>",
          "correct": false
        },
        {
          "text": "<br/>",
          "correct": false
        },
        {
          "text": "<ul>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the use of <hr/> tag?",
      "explanation": "To create a break between themes-such as change of topic in a book or a new scene in a play-you can add a horizontal rule between sections using <hr/> tag",
      "options": [
        {
          "text": "To create horizontal rule between sections",
          "correct": true
        },
        {
          "text": "To create a line break",
          "correct": false
        },
        {
          "text": "To create vertical rule between sections",
          "correct": false
        },
        {
          "text": "For making content appearance italics",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not an empty element.",
      "explanation": "There are a few elements that do not have any words between an opening and closing tag. They are known as empty elements. An empty element usually has only one tag. Before the closing angled bracket of an empty element, there will often be a space and a forward slash.",
      "options": [
        {
          "text": "<hr/>",
          "correct": false
        },
        {
          "text": "<br/>",
          "correct": false
        },
        {
          "text": "<sup>",
          "correct": true
        },
        {
          "text": "<img/>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute is not essential under <iframe>?",
      "explanation": "An iframe is equivalent to a window that has been cut into our page, it is created using <iframe> element. Src, height, width attribute are essentially used inside of this. Src attribute specifies the URL of the page which is to be shown. Height and width specify the height and width of an iframe in pixels.",
      "options": [
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "height",
          "correct": false
        },
        {
          "text": "width",
          "correct": false
        },
        {
          "text": "frameborder",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not the attribute of <meta> element?",
      "explanation": "<meta> element contains information about web page. Description attribute contains the description of the web page, keywords contains the list of comma separated words, robots decide to add pages to search results.",
      "options": [
        {
          "text": "description",
          "correct": false
        },
        {
          "text": "keywords",
          "correct": false
        },
        {
          "text": "robots",
          "correct": false
        },
        {
          "text": "seamless",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Copyright symbol can be included by _________",
      "explanation": "HTML code has some characters that are reserved so for using those on the page one need to know “escape” characters. If you want to add a copyright symbol to the web page they can use &copy or &#169.",
      "options": [
        {
          "text": "&lt",
          "correct": false
        },
        {
          "text": "&copy",
          "correct": true
        },
        {
          "text": "&amp",
          "correct": false
        },
        {
          "text": "&gt",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Attributes that allow to identify particular element are  ____________",
      "explanation": "The id and class attributes are useful in identifying particular elements. <iframe> element is for creating frames in web page, <div> and <span> are inline elements, metadata is provided by <meta> tag.",
      "options": [
        {
          "text": "<div> and <span>",
          "correct": false
        },
        {
          "text": "<meta>",
          "correct": false
        },
        {
          "text": "id and class",
          "correct": true
        },
        {
          "text": "<iframes>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "All elements are identified by their __________ and are marked up using either start tags and end tags or self-closing tags.",
      "explanation": "The attribute name describes name of <input> element. The tagName property returns the tag name of the element. In HTML, the returned value of the tagName property is always in UPPERCASE. Name of class is returned by class name.",
      "options": [
        {
          "text": "attribute name",
          "correct": false
        },
        {
          "text": "tag name",
          "correct": true
        },
        {
          "text": "class name",
          "correct": false
        },
        {
          "text": "none of the mentioned",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ element represents a span of text that is isolated from its surroundings for the purposes of bidirectional text formatting.",
      "explanation": "The base Url target relative to all URL’s in document is specified by base tag in html. B is for bold text representation. bdi stands for Bi-directional Isolation. This element is useful when embedding user-generated content with an unknown directionality. Direction of text is displayed by bdo element.",
      "options": [
        {
          "text": "b",
          "correct": false
        },
        {
          "text": "bdi",
          "correct": true
        },
        {
          "text": "bdo",
          "correct": false
        },
        {
          "text": "base",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The interactive element audio with the attribute controls must not appear as a descendant of which element?",
      "explanation": "The anchor and the button tag acts as link which cannot be a parent of audio element.",
      "options": [
        {
          "text": "a",
          "correct": false
        },
        {
          "text": "button",
          "correct": false
        },
        {
          "text": "audio",
          "correct": false
        },
        {
          "text": "both a and button",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "A ____________ element must have a start tag but must not have an end tag.",
      "explanation": "The command tag is new in HTML5 and specifies a normal command with an action. Details has end tag.",
      "options": [
        {
          "text": "details",
          "correct": false
        },
        {
          "text": "command",
          "correct": true
        },
        {
          "text": "code",
          "correct": false
        },
        {
          "text": "both details and command",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which type attribute of input element sets the element’s value to a string representing a number?",
      "explanation": "The input element with a type attribute whose value is “range” represents an imprecise control for setting the element’s value to a string representing a number.",
      "options": [
        {
          "text": "range",
          "correct": true
        },
        {
          "text": "email",
          "correct": false
        },
        {
          "text": "file",
          "correct": false
        },
        {
          "text": "date",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following type attributes of input element defines control for entering a telephone number?",
      "explanation": "The input element with a type attribute whose value is “tel” represents a one-line plain-text edit control for entering a telephone number.",
      "options": [
        {
          "text": "mob",
          "correct": false
        },
        {
          "text": "tel",
          "correct": true
        },
        {
          "text": "mobile",
          "correct": false
        },
        {
          "text": "telephone",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element represents a control for generating a public-private key pair?",
      "explanation": "The command tag is new in HTML5 and specifies a normal command with an action. The keygen element represents a control for generating a public-private key pair and for submitting the public key from that key pair.",
      "options": [
        {
          "text": "ins",
          "correct": false
        },
        {
          "text": "keygen",
          "correct": true
        },
        {
          "text": "key",
          "correct": false
        },
        {
          "text": "command",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The World Wide Web’s markup language has always been HTML.",
      "explanation": "The World Wide Web’s markup language has always been HTML. HTML was primarily designed as a language for semantically describing scientific documents, although its general design and adaptations over the years have enabled it to be used to describe a number of other types of documents.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element represents marked or highlighted text for reference purposes?",
      "explanation": "Highlight element is used to highlight a particular text when used in a document. Strong element specifies the importance of text. The mark element represents a run of text in one document marked or highlighted for reference purposes, due to its relevance in another context. An enclosed text which flashes later on is created by blink element.",
      "options": [
        {
          "text": "highlight",
          "correct": false
        },
        {
          "text": "mark",
          "correct": true
        },
        {
          "text": "strong",
          "correct": false
        },
        {
          "text": "blink",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element(s) represents a section of a document that links to other documents?",
      "explanation": "The nav element represents a section of a page that links to other pages or to parts within the page: a section with navigation links.",
      "options": [
        {
          "text": "navigation",
          "correct": false
        },
        {
          "text": "anchor tag",
          "correct": false
        },
        {
          "text": "nav",
          "correct": true
        },
        {
          "text": "option",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following element marks the ruby text component of a ruby annotation?",
      "explanation": "A ruby annotation is specified by ruby text, which is small text attached to the main text, which is used to indicate the pronunciation of characters. The rt element is the markup for ruby text.",
      "options": [
        {
          "text": "r",
          "correct": false
        },
        {
          "text": "rt",
          "correct": true
        },
        {
          "text": "ruby",
          "correct": false
        },
        {
          "text": "rubytxt",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Subtitle tracks and caption tracks to be specified for audio and video elements can be added using which of the following element?",
      "explanation": "The track element enables supplementary media tracks such as subtitle tracks and caption tracks to be specified for audio and video elements.",
      "options": [
        {
          "text": "sink",
          "correct": false
        },
        {
          "text": "track",
          "correct": true
        },
        {
          "text": "stable",
          "correct": false
        },
        {
          "text": "caption",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the property of SVG images?",
      "explanation": "SVG images stands for Scalable Vector Graphics which are scalable, zoomable and resolution independent. SVG is an open standard.",
      "options": [
        {
          "text": "SVG images are scalable",
          "correct": false
        },
        {
          "text": "SVG images are zoomable",
          "correct": false
        },
        {
          "text": "SVG is an open standard",
          "correct": false
        },
        {
          "text": "SVG images are resolution dependent",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "_______ drawings can be dynamic and interactive.",
      "explanation": "Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation. The SVG specification is an open standard developed by the World Wide Web Consortium (W3C) since 1999. SVG images and their behaviors are defined in XML text files.",
      "options": [
        {
          "text": "Canvas based",
          "correct": false
        },
        {
          "text": "SVG",
          "correct": true
        },
        {
          "text": "CSS3",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the predefined shape elements that can be used by developers?",
      "explanation": "SVG images stands for Scalable Vector Graphics. Path <path> is used to define path. Rectangle  element draws rectangle and Circle <circle> draws circle in SVG. All of the respective SVG elements are used to draw respective images.",
      "options": [
        {
          "text": "Path <path>",
          "correct": false
        },
        {
          "text": "Rectangle <rect>",
          "correct": false
        },
        {
          "text": "Circle <circle>",
          "correct": false
        },
        {
          "text": "Line <lin>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element must reference a resource that can provide an image for the cursor graphic?",
      "explanation": "The cursor attribute specifies the mouse cursor displayed when the mouse pointer is over an element. This attribute behaves exactly like the css cursor property except that if the browser supports the cursor element, you should be able to use it with the funciri notation.",
      "options": [
        {
          "text": "hover",
          "correct": false
        },
        {
          "text": "i",
          "correct": false
        },
        {
          "text": "cursor",
          "correct": true
        },
        {
          "text": "fill",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element serves as a container for atomic filter operations?",
      "explanation": "Composition of two images together is done by a primitive filter called feblend. A filter is referenced by using the filter attribute on the target SVG element and is never renderd directly. Fetching of image data from external sources is done by feimage.",
      "options": [
        {
          "text": "filter",
          "correct": true
        },
        {
          "text": "feimage",
          "correct": false
        },
        {
          "text": "feblend",
          "correct": false
        },
        {
          "text": "tref",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ element must reference either an ‘altGlyphDef’ element or a ‘glyph’ element.",
      "explanation": "Src is the URL of image. The href is Hypertext Reference which is used to link pages in html and is also an attribute for anchor tag. The altGlyph element allows sophisticated selection of the glyphs used to render its child character data.",
      "options": [
        {
          "text": "href",
          "correct": false
        },
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "animate",
          "correct": false
        },
        {
          "text": "altGlyph",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ___________ element must reference a ‘linearGradient’ or ‘radialGradient’ element.",
      "explanation": "Script is line of command which are executed by script engine. Allowing animation to control translation, scaling or rotation is done by animateTransform element. A radialGradient lets authors define radial gradients to fill or stroke graphical elements. A clipping path is defined by clip-path element.",
      "options": [
        {
          "text": "script",
          "correct": false
        },
        {
          "text": "radialGradient",
          "correct": true
        },
        {
          "text": "animateTransform",
          "correct": false
        },
        {
          "text": "clip-Path",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "SVG also stands for Scalar Vector Graphics.",
      "explanation": "SVG stands for Scalable Vector Graphics.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which property of SVG restricts the region to which paint can be applied?",
      "explanation": "Allowing animation to control translation, scaling or rotation is done by animateTransform element. A clipping path is defined by clip-path element. A clipping path is defined with a clipPath element. A clipping path is used/referenced using the clip-path property. A radialGradient lets authors define radial gradients to fill or stroke graphical elements.",
      "options": [
        {
          "text": "animateTransform",
          "correct": false
        },
        {
          "text": "clip-Path",
          "correct": true
        },
        {
          "text": "linearGradient",
          "correct": false
        },
        {
          "text": "radialGradient",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which SVG element produces the same effect as if the nodes were deeply cloned into a non-exposed DOM?",
      "explanation": "A colour of line, text or outline is defined by stroke element in SVG. The use element takes nodes from within the SVG document, and duplicates them somewhere else.",
      "options": [
        {
          "text": "tref",
          "correct": false
        },
        {
          "text": "use",
          "correct": true
        },
        {
          "text": "stroke",
          "correct": false
        },
        {
          "text": "bin",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "There is an audio format supported across all browsers.",
      "explanation": "There are 3 formats that are used in HTML5 Audio and are .mp3, .m4a AAC also known as H.264 format.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following tag is used for audio in HTML5?",
      "explanation": "<video> tag is used for video clips in HTML5. <canvas> is for graphical user interface. The audio tag defines sound, such as music or other audio streams.",
      "options": [
        {
          "text": "<bgsound>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": true
        },
        {
          "text": "<video>",
          "correct": false
        },
        {
          "text": "<canvas>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used to defines multiple media resources for media elements audio and video?",
      "explanation": "<video> tag is used for video clips in HTML5. <canvas> is for graphical user interface. The audio tag defines sound, such as music or other audio streams.defines multiple media resources for media elements, such as <video> and <audio>.",
      "options": [
        {
          "text": "<source>",
          "correct": true
        },
        {
          "text": "<canvas>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": false
        },
        {
          "text": "<video>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following browser does not support wav file format?",
      "explanation": "Opera, firefox, chrome and internet explorer are different kinds of browsers. Out of which audio file format named wav is not supported by internet explorer.",
      "options": [
        {
          "text": "Opera",
          "correct": false
        },
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Chrome",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns the volume of the audio/video.",
      "explanation": "Src attribute gives current source of audio/video element. The videoTrack list is returned representing available video tracks by video track attribute. Volume attribute sets the current volume of video/audio.",
      "options": [
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "volume controls",
          "correct": false
        },
        {
          "text": "volume",
          "correct": true
        },
        {
          "text": "video Tracks",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following attribute adds audio controls, like play, pause, and volume?",
      "explanation": "The audio attribute defines sound, such as music or other audio streams. Source attribute defines multiple media resources for media elements, such as <video> and <audio>. Src attribute gives current source of audio/video element. The controls attribute is a boolean attribute. When present, it specifies that audio controls should be displayed.",
      "options": [
        {
          "text": "audio",
          "correct": false
        },
        {
          "text": "controls",
          "correct": true
        },
        {
          "text": "source",
          "correct": false
        },
        {
          "text": "src",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns whether the audio/video should start playing as soon as it is loaded.",
      "explanation": "Control attribute is used to set whether audio/video should display controls. AudioTrack list representing audio tracks is set by audio track. The autoplay attribute is a boolean attribute. When present, the audio will automatically start playing as soon as it can do so without stopping. A current src of audio/video is returned by currentSrc.",
      "options": [
        {
          "text": "controls",
          "correct": false
        },
        {
          "text": "audio Tracks",
          "correct": false
        },
        {
          "text": "autoplay",
          "correct": true
        },
        {
          "text": "currentSrc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns whether the audio/video should start over again when finished.",
      "explanation": "The loop attribute is a boolean attribute. When present, it specifies that the audio will start over again, every time it is finished. With autoplay, it ensures whether video/audio should play immediately after loading page. Seeking returns whether user is currently seeking video/audio. Timeranges representing played parts of audio/video is set by played attribute.",
      "options": [
        {
          "text": "loop",
          "correct": true
        },
        {
          "text": "autoplay",
          "correct": false
        },
        {
          "text": "seeking",
          "correct": false
        },
        {
          "text": "played",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ returns a MediaError object representing the error state of the audio/video.",
      "explanation": "Seeking returns whether user is currently seeking video/audio. Ended attribute fires up when current playing playlist is finished. The error property returns a MediaError object. The MediaError object has a code property containing the error state of the audio/video. The group to which audio/video belongs is returned by mediaGroup.",
      "options": [
        {
          "text": "ended",
          "correct": false
        },
        {
          "text": "seeking",
          "correct": false
        },
        {
          "text": "error",
          "correct": true
        },
        {
          "text": "mediaGroup",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " In HTML Audio/Video DOM __________ returns a TextTrackList object representing the available text tracks.",
      "explanation": "The current ready state of video/audio is set by readyState. StartDate sets current date representing current time offsets. VideoTrack returns video track list representing available video tracks. The textTracks property returns a TextTrackList object. The TextTrackList object represents the available text tracks for the audio/video. Each available text track is represented by an TextTrack Object.",
      "options": [
        {
          "text": "readyState",
          "correct": false
        },
        {
          "text": "startDate",
          "correct": false
        },
        {
          "text": "videoTracks",
          "correct": false
        },
        {
          "text": "textTracks",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the default type of ‘type’ attribute of <input> element?",
      "explanation": "Text input type defines single line text field. Type is the attribute that displays type of <input> elements. Its default type is text. It is supported by most of the browsers like Chrome, Internet Explorer, Firefox, Opera.  Syntax is: <form action=”jump.php”> Name:<input type=”text” name=”name”>  </form> A password field is defined by password input.",
      "options": [
        {
          "text": "Text",
          "correct": true
        },
        {
          "text": "Password",
          "correct": false
        },
        {
          "text": "Numerals",
          "correct": false
        },
        {
          "text": "Special Characters",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is a new input attribute introduce by HTML5?",
      "explanation": "HTML4 has attributes with <input> elements like radio buttons, Checkbox controls, submit buttons, text input etc.\nHTML5 has introduced new attributes like date, color, month, time, week, datetime-local, email, number, range, tel, url, search etc.\n",
      "options": [
        {
          "text": "text",
          "correct": false
        },
        {
          "text": "checkbox controls",
          "correct": false
        },
        {
          "text": "submit buttons",
          "correct": false
        },
        {
          "text": "date",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How does the color attribute work?",
      "explanation": "color is the attribute of <input> element introduce by HTML5. It defines the color picker i.e we can select a color of our choice from the color picker. Syntax is Select the color that you want: <input type=”color” name=”favorite color”>",
      "options": [
        {
          "text": "Changes color of the text",
          "correct": false
        },
        {
          "text": "Changes background color",
          "correct": false
        },
        {
          "text": "The color picker is defined by it",
          "correct": true
        },
        {
          "text": "Changes color of the text as well as background",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute is used for activation of JavaScript?",
      "explanation": "Input type button is used for the activation of JavaScript on the clicking of the button. Its syntax is <input type=”button” value=”click” onclick=”source()”>. This will display a button named click and when we click that button JavaScript function source() will be invoked.",
      "options": [
        {
          "text": " button",
          "correct": true
        },
        {
          "text": "checkbox",
          "correct": false
        },
        {
          "text": "url",
          "correct": false
        },
        {
          "text": "submit",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute defines the file-select field?",
      "explanation": "file input type defines a file-select field, also gives a “Browse” button for file uploads. Syntax is <input type=”file” name=”image”>. Checkbox gives the facility to select one or more than one options from the given choices. The button activates JavaScript code. The text defines a single-line text field.",
      "options": [
        {
          "text": "file",
          "correct": true
        },
        {
          "text": "checkbox",
          "correct": false
        },
        {
          "text": "button",
          "correct": false
        },
        {
          "text": "text",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How image attribute works?",
      "explanation": "the image input type set an image as submit button. The syntax is <input type=”image” src=”imghj.gif” alt=”Submit”> this sets the image provided by url as the submit button. Input type image sends the X and Y coordinates of click and hence the image is activated by clicking the submit button.",
      "options": [
        {
          "text": "Sets an image background",
          "correct": false
        },
        {
          "text": "Set an image as submit button",
          "correct": true
        },
        {
          "text": "Set an image anywhere on the page",
          "correct": false
        },
        {
          "text": "Bring default image to the page",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "month attribute defines ___________",
      "explanation": "month and year are defined by month attribute. It does not define the time zone. The syntax is Anniversary (month and year) <input=”month” name=”anniversary month” >., date attribute defines the date, datetime-local defines date and time but no time zone.",
      "options": [
        {
          "text": "the only month",
          "correct": false
        },
        {
          "text": "month and year",
          "correct": true
        },
        {
          "text": "date",
          "correct": false
        },
        {
          "text": "date and time",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "week attribute defines ____________",
      "explanation": "week input type defines a week and year. It does not define the time zone. Syntax is <form action=”ghu.php”> week: <input type=”week” name=”week and year”> <input type=”submit”> </form>, this gives a selection box and display a calendar like chart from where we can select a week and the year as well.",
      "options": [
        {
          "text": "week",
          "correct": false
        },
        {
          "text": "year",
          "correct": false
        },
        {
          "text": "week and year",
          "correct": true
        },
        {
          "text": "week, month and year",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "tel attribute is supported by the _________ browser.",
      "explanation": "tel is the attribute which specifies field for telephone number. Syntax is <form action=”hkjk.php”> Telephone number: <input type=”tel” name=”usertelephone”> <br> <input type=”submit”> </form>, tel attribute is usually supported by newer versions like Safari 8.",
      "options": [
        {
          "text": "Chrome",
          "correct": false
        },
        {
          "text": "Safari",
          "correct": true
        },
        {
          "text": "Opera",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute is not used on new forms?",
      "explanation": "size attribute denotes the width of text input i.e measured by the number of characters inputted. E.g. If we input value 3 then it will create a box of width enough to display three characters. The user can enter more characters if they want. Syntax is <input type=”text” name=”firstname” size=”12” maxlength=”30”>",
      "options": [
        {
          "text": "size",
          "correct": true
        },
        {
          "text": "text",
          "correct": false
        },
        {
          "text": "name",
          "correct": false
        },
        {
          "text": "maxlength",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not used with password attribute?",
      "explanation": "password is the attribute that creates a text box which is similar to the single line text input, but the characters are blocked out. They are hidden due to the privacy of the user. The name attribute with a password set the name of the password input, size and maxlength attributes define the size and maximum length of the text box which is to be used for the password.",
      "options": [
        {
          "text": "name",
          "correct": false
        },
        {
          "text": "size",
          "correct": false
        },
        {
          "text": "maxlength",
          "correct": false
        },
        {
          "text": "min",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element is used to create multi-line text input?",
      "explanation": "For creating multi-line text input we use <textarea> element. This is not empty element i.e. it requires both opening tag and closing tag. The cols attribute defines a width of the text area. The row attributes the number of rows that the textarea can require.",
      "options": [
        {
          "text": "text",
          "correct": false
        },
        {
          "text": "textarea",
          "correct": true
        },
        {
          "text": "submit",
          "correct": false
        },
        {
          "text": "radio button",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute is not used for the radio type?",
      "explanation": "When we want to pick one option from the given many options we use radio type. Name attribute sent the value of the option selected to the server. Value attribute indicates the value that has been sent to the server for the selected option. The checked attribute indicates that which value should be selected on the loading of the page.",
      "options": [
        {
          "text": "name",
          "correct": false
        },
        {
          "text": "value",
          "correct": false
        },
        {
          "text": "checked",
          "correct": false
        },
        {
          "text": "selected",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute is used with <select> element?",
      "explanation": "<select> element is used for drop down select box. Size attribute is used for showing more than one option. For a selection of multiple options, we use multiple attributes. It is a useful option to select multiple things at a time.\nSyntax is\n<form action=”jhi.php”> <select name=”fruits” size=”5” multiple=”multiple”>\n",
      "options": [
        {
          "text": "multiple",
          "correct": true
        },
        {
          "text": "selected",
          "correct": false
        },
        {
          "text": "name",
          "correct": false
        },
        {
          "text": "value",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Before HTML5 where data had to be stored?",
      "explanation": "When HTML5 was not introduced application data had to store in cookies when server requested for it. Web storage was secure then as well as large data could be stored even it does not affect performance. After coming of HTML5 web applications can store data within the browser that the user is using.",
      "options": [
        {
          "text": "cookies",
          "correct": true
        },
        {
          "text": "browser",
          "correct": false
        },
        {
          "text": "only in Internet Explorer",
          "correct": false
        },
        {
          "text": "only in Chrome",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In localStorage object data ________",
      "explanation": "Data with no expiration date is stored by localStorage object. Here the data is not deleted if we close the browser. We can have data at the next day or week or year. Syntax is\nlocalStorage(“firstname”,”Tanya”); document.getElementById(“fo”).innerHTML= localStorage.getItem(“firstname”); here fo is id.\n",
      "options": [
        {
          "text": "is deleted after the browser has been closed",
          "correct": false
        },
        {
          "text": "is not deleted after the browser has been closed",
          "correct": true
        },
        {
          "text": "can be seen but can not edit",
          "correct": false
        },
        {
          "text": "can be seen as well as edit",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In sessionStorage object data __________",
      "explanation": "sessionStorage object works same as localStorage object except the data is stored for one session only. When the use closes the browser the data is deleted. Syntax is\nsessionStorage.firstname-“Tanya”; document.getElementById(“fo”).innerHTML= sessionStorage.firstname;\n",
      "options": [
        {
          "text": "is not deleted after the browser has been closed",
          "correct": false
        },
        {
          "text": "can be seen but can’t edit",
          "correct": false
        },
        {
          "text": "can be seen as well as edit",
          "correct": false
        },
        {
          "text": "is deleted after the browser has been closed",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the limit of character storage for chrome 23.0 in localStorage?",
      "explanation": "We can’t store any character in localStorage in chrome 23.0, for chrome 18.0 it is unlimited i.e. can store any number of characters, for chrome 19.77 it is 1021 k, for chrome 22.0 it is 2.49 M, for chrome 24.0, 25.0, 27.0 it is 2.49 M, for chrome 28.0, 30.0, 31.0 and 31.1 it is 4.98 M.",
      "options": [
        {
          "text": "unlimited",
          "correct": false
        },
        {
          "text": "none",
          "correct": true
        },
        {
          "text": "1021 k",
          "correct": false
        },
        {
          "text": "4.98 M",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the limit of character storage for chrome 23.0 in sessionStorage?",
      "explanation": "We can store 510 k characters in sessionStorage in chrome 23.0, for chrome 18.0 and chrome 24.0 we can store unlimited characters, for chrome 19.77 its value is 1021 k, for chrome 25.0 and 27.0 it is 2.49 M, for chrome 28.0, 30.0, 31.0, 31.1 its value is 4.98 M.",
      "options": [
        {
          "text": "510 k",
          "correct": true
        },
        {
          "text": "unlimited",
          "correct": false
        },
        {
          "text": "1021 k",
          "correct": false
        },
        {
          "text": "2.49 M",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a web storage interface?",
      "explanation": "There is only three web storage interface window, storage, and StorageEvent. Window object provides access to the local storage objects. Storage retrieves, set and remove data from the domain. Storage event is fired when the storage area on a document’s window changes.",
      "options": [
        {
          "text": "storage",
          "correct": false
        },
        {
          "text": "window",
          "correct": false
        },
        {
          "text": "storageEvent",
          "correct": false
        },
        {
          "text": "privacy",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following returns a number of value pairs?",
      "explanation": "storage.length returns number of value pairs that are currently present in the list, storage.key(n) returns name of nth key from the list, storagesetItem(key,value) sets the value which is identified by key to value, storage.clear() empties the list which is associated with values.",
      "options": [
        {
          "text": "storage.key(n)",
          "correct": false
        },
        {
          "text": "storage.length",
          "correct": true
        },
        {
          "text": "storage.setItem(key,value)",
          "correct": false
        },
        {
          "text": "storage.clear()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is invoked when it is not fired on window object?",
      "explanation": "When removeItem(), clear() and setItem() are invoked the events are fired on window object, which accesses newly stored or removed data, as defined by LocalStorage and sessionStorage attributes, getItem(key) method returns the current value associated with the key.",
      "options": [
        {
          "text": "removeItem()",
          "correct": false
        },
        {
          "text": "clear()",
          "correct": false
        },
        {
          "text": "setItem()",
          "correct": false
        },
        {
          "text": "getItem()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the storageEvent interface?",
      "explanation": "There are many storgeEvent interfaces like event.key, event.newValue, event.url, event.oldValue, event.storageArea. Event.key returns the key if the storage item is changed, event.oldValue and event.newValue returns old value and the new value of the key whose value has been changed. Event.url returns the URL of a document which has been changed.",
      "options": [
        {
          "text": "event.newValue",
          "correct": false
        },
        {
          "text": "event.url",
          "correct": false
        },
        {
          "text": "event.key",
          "correct": false
        },
        {
          "text": "event.clear",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For clearing all the settings which function should be called?",
      "explanation": "If we want to delete all the setting we can call localStorage.clear() method, localStorage.remove(key) only removes the key of the value that we have given. Same can be applied with sessionStorage also the syntax will be sessionStorage.clear().",
      "options": [
        {
          "text": "localStorage.remove(key)",
          "correct": false
        },
        {
          "text": "localStorage.clear()",
          "correct": true
        },
        {
          "text": "localStorage.remove()",
          "correct": false
        },
        {
          "text": "localStorage.clearAll()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the form type for adding text?",
      "explanation": "There are many types of form controls. Adding text, Submitting forms, Making choices and Uploading files are some of them. For an adding text, we can use Text input, Text area, and Password input. For making choices there are checkboxes, radio buttons, and drop-down boxes.",
      "options": [
        {
          "text": "Text input",
          "correct": false
        },
        {
          "text": "Text area",
          "correct": false
        },
        {
          "text": "Password input",
          "correct": false
        },
        {
          "text": "Submit button",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In the processing of information, the server does not use the language _____",
      "explanation": "When we enter a new value through form it goes to the server for processing information and this information is processed using languages C#, PHP, JAVA or VB.net. The database can also store the information.",
      "options": [
        {
          "text": "C#",
          "correct": false
        },
        {
          "text": "JAVA",
          "correct": false
        },
        {
          "text": "C++",
          "correct": true
        },
        {
          "text": "VB.net",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For creating single line text box for searching queries, we use the type ___________",
      "explanation": "For creating a single line text box for searching queries we use the type=”search”. In old browsers, it will be simply a single line text box.  Safari adds across that clear search box when we enter new data to search. It also rounds the corners on search input fields by default.",
      "options": [
        {
          "text": "placeholder",
          "correct": false
        },
        {
          "text": "search",
          "correct": true
        },
        {
          "text": "url",
          "correct": false
        },
        {
          "text": "hidden",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Form validation traditionally was performed by ___________",
      "explanation": "Form validation is checking if the form has been filled correctly. Traditionally it has been performed by JavaScript but now HTML5 is introducing validation. Hence browser does all the work of validation. Validation reduces the amount of work for the server.",
      "options": [
        {
          "text": "PHP",
          "correct": false
        },
        {
          "text": "HTML",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": true
        },
        {
          "text": "jQuery",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For grouping form controls we can use ___________",
      "explanation": "For grouping form controls together we use <fieldset> element. Fieldset is shown with a line around edge. Appearance can be adjusted by CSS.\n E.g. <fieldset> <legend> details </legend> <label> Name: <br/> <>input type=”text” name=”name”/> </label> <br/> </fieldset>\n\n",
      "options": [
        {
          "text": "<legend>",
          "correct": false
        },
        {
          "text": "<fieldset>",
          "correct": true
        },
        {
          "text": "<label>",
          "correct": false
        },
        {
          "text": "<select>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one has the most potential for minification?",
      "explanation": "Among the four languages JavaScript, PHP, HTML and CSS, JavaScript has the most potential for minification. In JavaScript whitespaces and comments are removed. Windows-style line breaks (CRLF) is converted to UNIX-style breaks (LF). Moreover, variable names can also be shortened.",
      "options": [
        {
          "text": "JavaScript",
          "correct": true
        },
        {
          "text": "CSS",
          "correct": false
        },
        {
          "text": "HTML",
          "correct": false
        },
        {
          "text": "PHP",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "YUI compressor is written in ____________",
      "explanation": "YUI compressor is one of the best compressor. It is a command-line minifier which is written in Java. It can process CSS as well as JavaScript. It is simple to run it like-\n$java –jar /usr/local/bin//yuicompressor-2.3.5/build/yuicompressor-2.3.5.jar input.js > output.js\n",
      "options": [
        {
          "text": "HTML",
          "correct": false
        },
        {
          "text": "C++",
          "correct": false
        },
        {
          "text": "C",
          "correct": false
        },
        {
          "text": "Java",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which compressor gives maximum GZIPPED compression?",
      "explanation": "YUI compressor gives maximum GZIPPED compression i.e. 21 out of 122. JSMin gives 23 out of 122, Closure(simple) gives 21 out of 122, Closure(advanced) gives 18 out of 122, Packer gives 23 out of 122. There is also redundancy due to GZIP compression.",
      "options": [
        {
          "text": "YUI",
          "correct": true
        },
        {
          "text": "JSMin",
          "correct": false
        },
        {
          "text": "Packer",
          "correct": false
        },
        {
          "text": "Closure(advanced)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "CSSMin is written in ___________",
      "explanation": "CSSMin is written in Java. It preforms conversion of lowercase, ordering of properties, replacement of names with numeric or hex equivalents. E.g. font-weight:bold can be written as font-weight: 600, color: black to color: #000.",
      "options": [
        {
          "text": "C++",
          "correct": false
        },
        {
          "text": "Java",
          "correct": true
        },
        {
          "text": "PHP",
          "correct": false
        },
        {
          "text": "C",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " HTMLMinifier is written in ________",
      "explanation": "There are mainly two popular HTML minifier. HTMLMinifier and htmlcompressor first are written in JavaScript. It is to be run via a web browser. Second is command-line Java application. HTMLMinifier offers better levels of compression.",
      "options": [
        {
          "text": "JavaScript",
          "correct": true
        },
        {
          "text": "Java",
          "correct": false
        },
        {
          "text": "C++",
          "correct": false
        },
        {
          "text": "C",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which option is not available in HTMLMinifier?",
      "explanation": "There are many options available in HTMLMinifier like it removes comments, also comments from CSS and JavaScript blocks, collapses whitespace, removes character data blocks from JavaScript and CSS, Collapses Boolean attributes, removes redundant attributes, uses a short doctype, removes empty elements, removes attribute quotes.",
      "options": [
        {
          "text": "remove attribute quotes",
          "correct": false
        },
        {
          "text": "use the short doctype",
          "correct": false
        },
        {
          "text": "remove empty elements",
          "correct": false
        },
        {
          "text": "replace <strong> with <b>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not associated with web socket communication?",
      "explanation": "For opening WebSocket we call WebSocket constructor. The syntax is\nvar conn=new WebSocket(‘ws://rtyyghj.websocket.org/echo’,[‘brush’, ‘xmpp’]);\nfor using secure HTTP connections use https: ,ws: is the new URL scheme for connecting WebSockets. There is wss: also.\n",
      "options": [
        {
          "text": "https",
          "correct": false
        },
        {
          "text": "wss",
          "correct": false
        },
        {
          "text": "ws",
          "correct": false
        },
        {
          "text": "http",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the wire protocol for WebScoket?",
      "explanation": "Wire protocol is handshaking and data transferring between server and client. It is the RFC6455. Chrome for Android and Chrome are compatible with RFC6455. It includes binary messaging also. Firefox version 11 and Internet Explorer 10 is also compatible with this.",
      "options": [
        {
          "text": "RFC6455",
          "correct": true
        },
        {
          "text": "RFC6477",
          "correct": false
        },
        {
          "text": "RFC6567",
          "correct": false
        },
        {
          "text": "RFC8967",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The maximum bytes for control frames is _______________",
      "explanation": "Control frames must be of 125 bytes or less than this. Control frames must not be fragmented. They have opcode of 0x02 (Ping), 0x01 (close) or 0x03 (Pong). Control frames help in communicating state about webSocket.",
      "options": [
        {
          "text": "100 bytes",
          "correct": false
        },
        {
          "text": "125 bytes",
          "correct": true
        },
        {
          "text": "130 bytes",
          "correct": false
        },
        {
          "text": "150 bytes",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the server library for Node.js?",
      "explanation": "ws is server library and WebSocket client for Node.js. Caddy is used for proxying arbitrary commands. WebSocket under covers is used by SignalR. To use asynchronous RPC library with the bidirectional call we use JSONRPC.server.",
      "options": [
        {
          "text": " Caddy",
          "correct": false
        },
        {
          "text": "SignalR",
          "correct": false
        },
        {
          "text": "ws",
          "correct": true
        },
        {
          "text": "jsonrpc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In desktop which browser does not support WebSocket?",
      "explanation": "In desktops, WebSockets are supported by Chrome version-6, version-43, version-14. Edge-14 supports WebSockets. All the versions of firefox support WebSocket. Opera version-76 and version-7 do not support WebSocket. Safari version-5.0.1 and version-6.0 support WebSocket.",
      "options": [
        {
          "text": "Chrome version 7",
          "correct": true
        },
        {
          "text": "Chrome version 6",
          "correct": false
        },
        {
          "text": "Chrome version 43",
          "correct": false
        },
        {
          "text": "Internet Explorer 10",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one is not associated with Gecko?",
      "explanation": "Gecko 7.0 includes Firefox 7.0/SeaMonkey 2.4/Thunderbird 7.0. Gecko 8.0 includes Firefox 8.0/SeaMonkey 2.5/Thunderbird 8.0. In Gecko 11.0 WebSocket API is no longer used as a prefix. In Gecko 7.0 network.websocket.max-connections is used.",
      "options": [
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "SeaMonkey",
          "correct": false
        },
        {
          "text": "Thunderbird",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Messages from the server are received by ____",
      "explanation": "onmessage function is used for receiving messages from the server. E.g. memeDocket.onmessage = function (eve) { console.log(eve.data); }. For sending data as a string we use ArrayaBuffer and Blob.",
      "options": [
        {
          "text": "onmessage",
          "correct": true
        },
        {
          "text": "send",
          "correct": false
        },
        {
          "text": "arrayBuffer",
          "correct": false
        },
        {
          "text": "blob",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For duplex communication we can’t use ____________",
      "explanation": "There are some existing techniques for the communication between client and server known as duplex techniques. They are Streaming, HTML5, Postback and AJAX, Long Polling, Polling. For real-time transferring of data, Streaming is the best option. Polling performs periodic requests.",
      "options": [
        {
          "text": "Long Polling",
          "correct": false
        },
        {
          "text": "HTML5",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": true
        },
        {
          "text": "Streaming",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the event of WebSocket API?",
      "explanation": "There are four WebSocket API, Close, Message, Error and Open. We can implement these events by using functions like onmessage, onopen, onerror, addEventListener and onclose. When there is an end of communication between client and server then onclose method is called.",
      "options": [
        {
          "text": "Close",
          "correct": false
        },
        {
          "text": "Message",
          "correct": false
        },
        {
          "text": "Send",
          "correct": true
        },
        {
          "text": "Error",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which one is not a very good developer support?",
      "explanation": "Firefox, Chrome and Opera are the very good browser in terms of developer support. They have various built-in tools for the interaction of client-side and resources. It is also very helpful for security purposes.",
      "options": [
        {
          "text": "Opera",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": true
        },
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Chrome",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used to define a discrete unit of content such as a blogpost, comment, and so on?",
      "explanation": "Sections in document is made by the section tag. The class attribute specifies one or more class names to HTML. An article element is semantic element and it contains a standalone piece of content that would make sense if syndicated as an RSS item, for example a news item.",
      "options": [
        {
          "text": "section",
          "correct": false
        },
        {
          "text": "class",
          "correct": false
        },
        {
          "text": "article",
          "correct": true
        },
        {
          "text": "media",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "HTML5 documents may contains a ___________ element, which is used to set the header section of a document.",
      "explanation": "Section element is used to make sections in document. The copyright/footer information is provided by footer element in HTML5. A header for document section is given by header element. The header tag is used to contain the header content of a site.",
      "options": [
        {
          "text": "header",
          "correct": true
        },
        {
          "text": "footer",
          "correct": false
        },
        {
          "text": "section",
          "correct": false
        },
        {
          "text": "drive",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element may be used within content to represent material that is tangential?",
      "explanation": "<cite> tag defines the title of work. The class attribute specifies one or more class names to HTML. An article tag is similar to <section> or <header> which contains information. The aside tag defines a block of content that is related to the main content around it, but not central to the flow of it.",
      "options": [
        {
          "text": "aside",
          "correct": true
        },
        {
          "text": "cite",
          "correct": false
        },
        {
          "text": "article",
          "correct": false
        },
        {
          "text": "class",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "____________ contains the navigation menu, or other navigation functionality for the page.",
      "explanation": "The nav element is for marking up the navigation links or other constructs (eg a search form) that will take you to different pages of the current site, or different areas of the current page. Header contains section of headings. Section element is used to make sections in document. The aside tag defines a block of content that is related to the main content around it, but not central to the flow of it.",
      "options": [
        {
          "text": "section",
          "correct": false
        },
        {
          "text": "header",
          "correct": false
        },
        {
          "text": "nav",
          "correct": true
        },
        {
          "text": "aside",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following attribute is used to display date/time content?",
      "explanation": "To provide both human and machine-friendly date/time content, the element supports a datetime attribute, which should be set to the previously mentioned date format of YYYY-MM-DDThh:mm:ssTZD. Time tag defines date and time (human readable) while datetime tag display machine readable date/time.",
      "options": [
        {
          "text": "time",
          "correct": false
        },
        {
          "text": "datetime",
          "correct": true
        },
        {
          "text": "date",
          "correct": false
        },
        {
          "text": "year",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The element ___________ simply groups items within an enclosed dd tag, though it may associate them with a caption defined by a dt tag.",
      "explanation": "HTML documents are delivered as “documents”.These are then parsed, which turns them into the Document Object Model (DOM) internal representation, within the web browser. A self-contained information like images, diagrams are specified by figure tag in HTML. External applications are embed using embed tag.",
      "options": [
        {
          "text": "object",
          "correct": true
        },
        {
          "text": "figure",
          "correct": false
        },
        {
          "text": "embed",
          "correct": false
        },
        {
          "text": "collect",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element is used for highlighting content similarly to how a highlighter pen might be used on important text in a book?",
      "explanation": "<em> tag convert the font in italic one. The <strong> tag is used to denote the importance of text. <bold> tag is used to make the text bold in font size. The mark tag defines marked text and is used to highlight parts of your text.",
      "options": [
        {
          "text": "em",
          "correct": false
        },
        {
          "text": "strong",
          "correct": false
        },
        {
          "text": "mark",
          "correct": true
        },
        {
          "text": "bold",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "To insert a video, we use a video tag and set its src attribute to a local or remote URL containing a playable movie.",
      "explanation": "To show a video in HTML, video element is used. One of the attribute of video called src is used to provide the location of video i.e. it’s URL address.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used to encapsulate navigation and then style the elements appropriately as menu items?",
      "explanation": "Conventionally, many web developers have use <ul></ul> and <li></li> tags to encapsulate navigation and then styled the elements appropriately as menu items. This seems to introduce quite a bit of ambiguity in markup because it may be difficult to determine the difference between a list that has links in it and a list that is simply navigation.",
      "options": [
        {
          "text": "ul",
          "correct": false
        },
        {
          "text": "li",
          "correct": false
        },
        {
          "text": "nav",
          "correct": false
        },
        {
          "text": "both ul and li",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ can be used to advise the browser to download media content in the background to improve playback.",
      "explanation": "Data-X stores custom data. Buffer property is used to decide whether the output should be buffered or not. If autobuffering attribute is used, then the video will automatically begin to buffer even if it’s not set. It suggests to the browser that it should load as much of the resource as possible. As long as the browser’s own media cache isn’t full, it will keep on downloading. URL of an image is given by poster attribute until the user seek for it.",
      "options": [
        {
          "text": "poster",
          "correct": false
        },
        {
          "text": "autobuffer",
          "correct": true
        },
        {
          "text": "buffer",
          "correct": false
        },
        {
          "text": "data-X",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The _________ element is used to render simple graphics such as line art, graphs, and other custom graphical elements on the client side.",
      "explanation": "Metdata gives data or information of other data. CSS i.e. Cascading Style Sheets is a style sheet language. Canvas is introduced in HTML5 for providing/drawing graphics. The canvas element is part of HTML5 and allows for dynamic, scriptable rendering of 2D shapes and bitmap images.",
      "options": [
        {
          "text": "metadata",
          "correct": false
        },
        {
          "text": "css",
          "correct": false
        },
        {
          "text": "canvas",
          "correct": true
        },
        {
          "text": "art",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Prior to HTML5 in web market, traditionally, multimedia has been inserted with the concept of tag-based multimedia back.",
      "explanation": "Multimedia has different formats, it can be anything that you can hear or see. Traditionally, multimedia has been inserted with the embed and object elements, particularly when inserting Adobe Flash, Apple QuickTime, Windows Media, and other formats.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Consider the following markup and answer the question that follow.\n\n<source src=\"html_5.mp4\" type=\"video/mp4\">\n<source src=\"html_5.ogv\" type=\"video/ogg\">\nWhat is the need to add multiple file formats for the same file?",
      "explanation": "To address the media support problem, you need to add in alternative formats to use by including a number of source tags.",
      "options": [
        {
          "text": "To provide fallback support",
          "correct": false
        },
        {
          "text": "To address the media support problem",
          "correct": false
        },
        {
          "text": "To provide fallback support & address the media support problem",
          "correct": true
        },
        {
          "text": "To provide foul back support",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Consider the markup and answer the question that follow.\n<? controls autobuffer autoplay>\n</?>\nWhich HTML5 element can replace the \"?\" ?",
      "explanation": "Autobuffer is a attribute for both <audio> and <video>, so we can replace it with either <audio> or <video>. As with the video element, you also have autobuffer and autoplay attributes for the audio element.",
      "options": [
        {
          "text": "<audio>",
          "correct": false
        },
        {
          "text": "<video>",
          "correct": false
        },
        {
          "text": "<media>",
          "correct": false
        },
        {
          "text": "both <audio> & <video>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which plugins can provide the fallback support for old browsers?",
      "explanation": "An attribute of the format: type=”application/x-shockwave-flash” will justify the purpose.",
      "options": [
        {
          "text": "Flash",
          "correct": false
        },
        {
          "text": "Quicktime",
          "correct": false
        },
        {
          "text": "Both Flash and Quicktime",
          "correct": true
        },
        {
          "text": "Fireback and Quickertime",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the promises of the open web platform?",
      "explanation": "The different promises of the open web platform are –\n• Security and Privacy\n• Core Web Design and Development\n• Device Interaction\n• Application Lifecycle\n• Media and Real-Time Communications\n• Performance and Tuning\n• Usability and Accessibility\n• Services\n",
      "options": [
        {
          "text": "Security and Privacy",
          "correct": false
        },
        {
          "text": "Performance and Tuning",
          "correct": false
        },
        {
          "text": "Media and Real-Time Communications",
          "correct": false
        },
        {
          "text": "Device Interconnection",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "HTML5 brings to the Web video and audio tracks without needing plugins.",
      "explanation": "The World Wide Web Consortium (W3C) published a Recommendation of HTML5, the fifth major revision of the format used to build Web pages and applications, and the cornerstone of the Open Web Platform. HTML5 brings to the Web video and audio tracks without needing plugins with programmatic access to resolution dependent canvas.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which protocol is supported by Android browsers?",
      "explanation": "HTTPS i.e. Hypertext Transfer Protocol Secure is used on internet. HLS which stands for Hypertext Transfer Protocol Live Streaming invented by Apple Inc., a new streaming protocol which is supported by android browsers. RTMP stands for Real-Time Messaging Protocol, FTP stands for File Transfer Protocol.",
      "options": [
        {
          "text": "HTTPS",
          "correct": false
        },
        {
          "text": "HLS",
          "correct": true
        },
        {
          "text": "RTMP",
          "correct": false
        },
        {
          "text": "FTP",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ is a JavaScript library that implements the most common user interface elements and interactions like sliders, accordions, tabs, and so on.",
      "explanation": "JQuery UI is a curated set of user interface interactions, effects, widgets, and themes built on top of the jQuery JavaScript Library. JavaScript is a scripting language. VTS is a powerful rendering engine browser for JavaScript. JCL is Job Control Language which is also named as scripting language.",
      "options": [
        {
          "text": "JavaScript",
          "correct": false
        },
        {
          "text": "JQuery UI",
          "correct": true
        },
        {
          "text": "VTS",
          "correct": false
        },
        {
          "text": "JCL",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM, __________ sets or returns whether the audio/video should be loaded when the page loads.",
      "explanation": "Autoplay, preload, buffered, controller etc are the different kinds of attribute of video/audio element. Using autoplay, video/audio automatically begins to play. The preload property allows the author to provide a hint to the browser about what he/she thinks will lead to the best user experience. This attribute may be ignored in some instances.",
      "options": [
        {
          "text": "preload",
          "correct": true
        },
        {
          "text": "autoplay",
          "correct": false
        },
        {
          "text": "buffered",
          "correct": false
        },
        {
          "text": "controller",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a HTML5 tag?",
      "explanation": "<video> tag is used to display video clips in HTML5. Multiple media resources for media elements is specified by <source> tag. Text track for media elements i.e. <audio> & <video> is provided by <track> tag in HTML5. There is no such thing as slider tag in HTML5.",
      "options": [
        {
          "text": "<video>",
          "correct": false
        },
        {
          "text": "<source>",
          "correct": false
        },
        {
          "text": "<track>",
          "correct": false
        },
        {
          "text": "<slider>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What will happen if height and width of video are not set while video loads?",
      "explanation": "If height and width are not set, the browser does not know the size of the video. The effect will be that the page will change (or flicker) while the video loads.",
      "options": [
        {
          "text": "page flickers",
          "correct": true
        },
        {
          "text": "page does not load",
          "correct": false
        },
        {
          "text": "page crash",
          "correct": false
        },
        {
          "text": "page closes",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following HTML Video – Media Type is not supported in IE?",
      "explanation": "The Ogg container format with the Theora video codec and the Vorbis audio codec is supported in desktop/mobile Gecko (Firefox), Chrome, and Opera, and support for the format can be added to Safari (but not on iOS) by installing an add-on. The format is not supported in Internet Explorer in any way. The most widely used format for HTMl video i.e MP4 format is supported in IE.",
      "options": [
        {
          "text": "WebM",
          "correct": false
        },
        {
          "text": "MP4",
          "correct": false
        },
        {
          "text": "Ogg",
          "correct": true
        },
        {
          "text": "MP4 FLAC",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM, __________ sets or returns the default speed of the audio/video playback.",
      "explanation": "CurrentTime set or returns current playback position while playing audio/video. The length of the current audio/video is set or returned by duration. Default speed of playback is given by defaultPlaybackRate while playback returns speed of the audio/video.",
      "options": [
        {
          "text": "currentTime",
          "correct": false
        },
        {
          "text": "duration",
          "correct": false
        },
        {
          "text": "defaultPlaybackRate",
          "correct": true
        },
        {
          "text": "playbackRate",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM, __________ sets or returns the CORS settings of the audio/video.",
      "explanation": "CurrentTime set or returns current playback position while playing audio/video. The length of the current audio/video is set or returned by duration. Default speed of playback is given by defaultPlaybackRate. The purpose of the crossorigin attribute is to allow you to configure the CORS requests for the element’s fetched data.",
      "options": [
        {
          "text": "currentTime",
          "correct": false
        },
        {
          "text": "duration",
          "correct": false
        },
        {
          "text": "defaultPlaybackRate",
          "correct": false
        },
        {
          "text": "crossOrigin",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM, __________ returns a TimeRanges object representing the buffered parts of the audio/video.",
      "explanation": "Preload is used to set or return whether the video/ audio has been loaded on page. Current network of audio/video has been set or returned by networkState. A buffered range is a time-range of buffered audio/video. The user gets several buffered ranges if he/she skips in the audio/video. Media controller of current video/audio is given or returned by controller.",
      "options": [
        {
          "text": "preload",
          "correct": false
        },
        {
          "text": "networkState",
          "correct": false
        },
        {
          "text": "buffered",
          "correct": true
        },
        {
          "text": "controller",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "There is an audio format supported across all browsers.",
      "explanation": "There are 3 formats that are used in HTML5 Audio and are .mp3, .m4a AAC also known as H.264 format.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following tag is used for audio in HTML5?",
      "explanation": "<video> tag is used for video clips in HTML5. <canvas> is for graphical user interface. The audio tag defines sound, such as music or other audio streams.",
      "options": [
        {
          "text": "<bgsound>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": true
        },
        {
          "text": "<video>",
          "correct": false
        },
        {
          "text": "<canvas>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used to defines multiple media resources for media elements audio and video?",
      "explanation": "<video> tag is used for video clips in HTML5. <canvas> is for graphical user interface. The audio tag defines sound, such as music or other audio streams.defines multiple media resources for media elements, such as <video> and <audio>.",
      "options": [
        {
          "text": "<source>",
          "correct": true
        },
        {
          "text": "<canvas>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": false
        },
        {
          "text": "<video>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following browser does not support wav file format?",
      "explanation": "Opera, firefox, chrome and internet explorer are different kinds of browsers. Out of which audio file format named wav is not supported by internet explorer.",
      "options": [
        {
          "text": "Opera",
          "correct": false
        },
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Chrome",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns the volume of the audio/video.",
      "explanation": "Src attribute gives current source of audio/video element. The videoTrack list is returned representing available video tracks by video track attribute. Volume attribute sets the current volume of video/audio.",
      "options": [
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "volume controls",
          "correct": false
        },
        {
          "text": "volume",
          "correct": true
        },
        {
          "text": "video Tracks",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following attribute adds audio controls, like play, pause, and volume?",
      "explanation": "The audio attribute defines sound, such as music or other audio streams. Source attribute defines multiple media resources for media elements, such as <video> and <audio>. Src attribute gives current source of audio/video element. The controls attribute is a boolean attribute. When present, it specifies that audio controls should be displayed.",
      "options": [
        {
          "text": "audio",
          "correct": false
        },
        {
          "text": "controls",
          "correct": true
        },
        {
          "text": "source",
          "correct": false
        },
        {
          "text": "src",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns whether the audio/video should start playing as soon as it is loaded.",
      "explanation": "Control attribute is used to set whether audio/video should display controls. AudioTrack list representing audio tracks is set by audio track. The autoplay attribute is a boolean attribute. When present, the audio will automatically start playing as soon as it can do so without stopping. A current src of audio/video is returned by currentSrc.",
      "options": [
        {
          "text": "controls",
          "correct": false
        },
        {
          "text": "audio Tracks",
          "correct": false
        },
        {
          "text": "autoplay",
          "correct": true
        },
        {
          "text": "currentSrc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns whether the audio/video should start over again when finished.",
      "explanation": "The loop attribute is a boolean attribute. When present, it specifies that the audio will start over again, every time it is finished. With autoplay, it ensures whether video/audio should play immediately after loading page. Seeking returns whether user is currently seeking video/audio. Timeranges representing played parts of audio/video is set by played attribute.",
      "options": [
        {
          "text": "loop",
          "correct": true
        },
        {
          "text": "autoplay",
          "correct": false
        },
        {
          "text": "seeking",
          "correct": false
        },
        {
          "text": "played",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ returns a MediaError object representing the error state of the audio/video.",
      "explanation": "Seeking returns whether user is currently seeking video/audio. Ended attribute fires up when current playing playlist is finished. The error property returns a MediaError object. The MediaError object has a code property containing the error state of the audio/video. The group to which audio/video belongs is returned by mediaGroup.",
      "options": [
        {
          "text": "ended",
          "correct": false
        },
        {
          "text": "seeking",
          "correct": false
        },
        {
          "text": "error",
          "correct": true
        },
        {
          "text": "mediaGroup",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " In HTML Audio/Video DOM __________ returns a TextTrackList object representing the available text tracks.",
      "explanation": "The current ready state of video/audio is set by readyState. StartDate sets current date representing current time offsets. VideoTrack returns video track list representing available video tracks. The textTracks property returns a TextTrackList object. The TextTrackList object represents the available text tracks for the audio/video. Each available text track is represented by an TextTrack Object.",
      "options": [
        {
          "text": "readyState",
          "correct": false
        },
        {
          "text": "startDate",
          "correct": false
        },
        {
          "text": "videoTracks",
          "correct": false
        },
        {
          "text": "textTracks",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element is used for canvas graphics?",
      "explanation": "CSS i.e. Cascading Style Sheet is a scripting language. Canvas graphics is introduced in HTML5. Element used for canvas graphics is <canvas>. The HTML canvas element is used to draw graphics, on the fly, via scripting (usually JavaScript).",
      "options": [
        {
          "text": "<paint>",
          "correct": false
        },
        {
          "text": "<canvas>",
          "correct": true
        },
        {
          "text": "<graphic>",
          "correct": false
        },
        {
          "text": "<css>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following statement is not true?",
      "explanation": "SVG stands for “Scalable Vector Graphics”, it is used to draw graphics for the web. W3C recommends SVG graphics. SVG also supports  event handlers which is not supported in canvas.",
      "options": [
        {
          "text": "SVG stands for Scalable Vector Graphics",
          "correct": false
        },
        {
          "text": "SVG is used to define graphics for the Web",
          "correct": false
        },
        {
          "text": "SVG is a W3C recommendation",
          "correct": false
        },
        {
          "text": "SVG doesn’t support event handlers",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "To draw on the canvas, authors must first obtain a reference to a context using the ______________ method of the canvas interface element.",
      "explanation": "The method getImageData(), returns an imageData that copies  pixel data for a specified thing in canvas. ContextType is a DOMString containing the context identifier defining the drawing context associated to the canvas.",
      "options": [
        {
          "text": "getImageData",
          "correct": false
        },
        {
          "text": "toDataURL",
          "correct": false
        },
        {
          "text": "getContext",
          "correct": true
        },
        {
          "text": "restore",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ___________ method must add the scaling transformation described by the arguments to the transformation matrix.",
      "explanation": "HTML5 canvas provides scale(x, y) method which is used to increase or decrease the units in our canvas grid. The position (0, 0) is remaped in canvas by translate(x, y) method. If one want to rotate the current drawing then rotate(angle) method can be used.",
      "options": [
        {
          "text": "scale(x, y)",
          "correct": true
        },
        {
          "text": "translate(x, y)",
          "correct": false
        },
        {
          "text": "rotate(angle)",
          "correct": false
        },
        {
          "text": "skew(x,y)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which method must clear the pixels in the specified rectangle that also intersects the current clipping region to a fully transparent black, erasing any previous image?",
      "explanation": "StrokeRect(x, y, w, h) draws rectangle without filling it. The clearRect() method clears the specified pixels within a given rectangle. FillRect(x, y, w, h) method draws filled rectangle.",
      "options": [
        {
          "text": "strokeRect(x, y, w, h)",
          "correct": false
        },
        {
          "text": "clearRect(x, y, w, h)",
          "correct": true
        },
        {
          "text": "fillRect(x, y, w, h)",
          "correct": false
        },
        {
          "text": "removeRect(x,y,w,h)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "When the _____________ method is passed an animated image as its image argument, the user agent must use the poster frame of the animation, or, if there is no poster frame, the first frame of the animation.",
      "explanation": "The width of specified text present in an object is given by measureText() method. The drawImage() method draws an image, canvas, or video onto the canvas. ImageData() method provides image data in pixels in canvas.",
      "options": [
        {
          "text": "measureText()",
          "correct": false
        },
        {
          "text": "imageData()",
          "correct": false
        },
        {
          "text": "drawImage()",
          "correct": true
        },
        {
          "text": "setImage()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ____________ method must create a new clipping region by calculating the intersection of the current clipping region and the area described by the current path, using the non-zero winding number rule.",
      "explanation": "The path one defines is drawn by stroke() method. Any region/shape or size in canvas is clipped by clip(). The fill() method fills the current drawing (path). The default color is black. There is no method like get().",
      "options": [
        {
          "text": "fill()",
          "correct": false
        },
        {
          "text": "stroke()",
          "correct": false
        },
        {
          "text": "clip()",
          "correct": true
        },
        {
          "text": "get()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ____________ method must fill all the subpaths of the current path, using fillStyle, and using the non-zero winding number rule.",
      "explanation": "The path one defines is drawn by stroke() method. Any region/shape or size in canvas is clipped by clip(). The fill() method fills the current drawing (path). The default color is black. There is no method like get().",
      "options": [
        {
          "text": "fill()",
          "correct": true
        },
        {
          "text": "stroke()",
          "correct": false
        },
        {
          "text": "clip()",
          "correct": false
        },
        {
          "text": "get()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following methods must empty the list of subpaths so that the context once again has zero subpaths?",
      "explanation": "ClosePath() creates a path that starts from current point up to the starting point. The beginPath() method begins a path, or resets the current path. MoveTo(x, y) moves the point specified in canvas but without creating the line. There is nothing like endPath() in canvas.",
      "options": [
        {
          "text": "closePath()",
          "correct": false
        },
        {
          "text": "beginPath()",
          "correct": true
        },
        {
          "text": "moveTo(x, y)",
          "correct": false
        },
        {
          "text": "endPath()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " An API is an application programming interface consisting of methods and properties which allow the author to get or set data or execute commands to the user agent.",
      "explanation": "API, an abbreviation of application program interface, is a set of routines, protocols, and tools for building software applications. API allow the author/owner to get or set data or execute commands to the user agent.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a type of attribute for input tag?",
      "explanation": "Day is not defined in the pre-defined attribute list of input tag. Week attribute defines week and year when used as attribute in input tag. Month specifies month and year when it is accessed in input tag. The time attribute displays current time in html.",
      "options": [
        {
          "text": "day",
          "correct": true
        },
        {
          "text": "week",
          "correct": false
        },
        {
          "text": "month",
          "correct": false
        },
        {
          "text": "time",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The new __________ element is supposed to represent some form of extra details, such as a tooltip or revealed region that may be shown to a user.",
      "explanation": "A scalar measurement within a range or fractional value is defined by meter tag. A list/menu of coommands is displayed by menu tag in html. The details tag specifies additional details that the user can view or hide on demand. The details tag can be used to create an interactive widget that the user can open and close. Any sort of content can be put inside the <details> tag. Progress of a task is done by progress element.",
      "options": [
        {
          "text": "progress",
          "correct": false
        },
        {
          "text": "meter",
          "correct": false
        },
        {
          "text": "details",
          "correct": true
        },
        {
          "text": "menu",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ element may contain not just links but also other interactive items, including the newly introduced command element.",
      "explanation": "A scalar measurement within a range or fractional value is defined by meter tag. The menu tag defines a list/menu of commands. The menu tag is used for context menus, toolbars and for listing form controls and commands. The details tag specifies additional details that the user can view or hide on demand. The details tag can be used to create an interactive widget that the user can open and close. Any sort of content can be put inside the <details> tag. Progress of a task is done by progress element.",
      "options": [
        {
          "text": "progress",
          "correct": false
        },
        {
          "text": "meter",
          "correct": false
        },
        {
          "text": "details",
          "correct": false
        },
        {
          "text": "menu",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ attribute effectively renders the iframe as an inline include, which allows the parent document’s CSS to affect the contents of the iframe.",
      "explanation": "Embed attribute attach external content at a specified point in document. The seamless attribute is a boolean attribute. When present, it specifies that the iframe should look like it is a part of the containing document (no borders or scrollbars). Allow-forms re-enables from submission. Scripts are re-enabled by allow-scripts.",
      "options": [
        {
          "text": "allow-forms",
          "correct": false
        },
        {
          "text": "seamless",
          "correct": true
        },
        {
          "text": "embed",
          "correct": false
        },
        {
          "text": "allow-scripts",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following allows the sandboxed iframe to run scripts from the same domain?",
      "explanation": "Scripts are re-enabled by allow-scripts. The sandbox attribute enables an extra set of restrictions for the content in the iframe.  Allow-forms re-enables from submission. Allow-same-origin allows iframe content to be treated as being from the same origin. API’s are re-enable by allow-pointer-lock.",
      "options": [
        {
          "text": "allow-same-origin",
          "correct": false
        },
        {
          "text": "allow-forms",
          "correct": false
        },
        {
          "text": "allow-scripts",
          "correct": true
        },
        {
          "text": "allow-pointer-lock",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "__________ allows the iframe to pull in content from elsewhere in the same domain.",
      "explanation": "Scripts are re-enabled by allow-scripts. Allow-forms re-enables from submission. Allow-same-origin allows iframe content to be treated as being from the same origin. API’s are re-enable by allow-pointer-lock.",
      "options": [
        {
          "text": "allow-same-origin",
          "correct": true
        },
        {
          "text": "allow-forms",
          "correct": false
        },
        {
          "text": "allow-scripts",
          "correct": false
        },
        {
          "text": "allow-pointer-lock",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a HTML5 added form element?",
      "explanation": "<datalist>, <keygen> and <output> are HTML5 added form element. Element <password> is not a HTML5 added form element. Password is an attribute used in input type in HTML.",
      "options": [
        {
          "text": "<datalist>",
          "correct": false
        },
        {
          "text": "<keygen>",
          "correct": false
        },
        {
          "text": "<output>",
          "correct": false
        },
        {
          "text": "<password>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element specifies a list of pre-defined options for an input element?",
      "explanation": "The datalist tag is used to provide an “autocomplete” feature on input elements. Users will see a drop-down list of pre-defined options as they input data. Password defines password field in HTML. It is attribute for input-type. The <keygen> element references from data after form has submitted. Result of calculation (script) is represented by output tag.",
      "options": [
        {
          "text": "<datalist>",
          "correct": true
        },
        {
          "text": "<keygen>",
          "correct": false
        },
        {
          "text": "<output>",
          "correct": false
        },
        {
          "text": "<password>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines a group of related options in a drop-down list?",
      "explanation": "HTML form element is used in its <form> tag having its own structure which is used by users for various tasks. If you have a long list of options, groups of related options are easier to handle for a user. Result of calculation (script) is represented by output tag. A drop down list of items is defined  by <option> tag in HTML.",
      "options": [
        {
          "text": "<form>",
          "correct": false
        },
        {
          "text": "<optgroup>",
          "correct": true
        },
        {
          "text": "<output>",
          "correct": false
        },
        {
          "text": "<option>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What does ‘On-Screen Action’ means in the testing of HTML5 applications?",
      "explanation": "While testing of HTML5 for a browser i.e. whether its elements are supported by the browser or not one can use draggable content using Drag action and this action can be called through On-Screen Action operation.",
      "options": [
        {
          "text": "Using Drag action",
          "correct": true
        },
        {
          "text": "Using new input type",
          "correct": false
        },
        {
          "text": "Using play and pause action of audio and video elements",
          "correct": false
        },
        {
          "text": "Verifying SVG and Canvas elements",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What can be used to verify a displayed graphics?",
      "explanation": "Region checkpoints are used to verify a displayed graphics. It is a kind of test operation which gives verification of application’s window or control is displayed correctly or not. Object’s property is verified by region checkpoints which is test operation. Local storage is for storing data.",
      "options": [
        {
          "text": "Property checkpoints",
          "correct": false
        },
        {
          "text": "Region checkpoints",
          "correct": true
        },
        {
          "text": "On-Screen Action",
          "correct": false
        },
        {
          "text": "Local STorage",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element has been removed from HTML5 (W3C) specification?",
      "explanation": "A section that is tangentially related to its surrounding content is defined by <aside> tag. A block of navigation links is provided by newly added element in HTML5 called <nav>. <hgroup> tag has been removed from HTML5 specification, but it can be seen in WHATWG version of HTML. The purpose of this element is how headings are displayed. It’s practice is limited to theory only. <figure> tag specifies its own self defined content which may contain diagrams, photos etc.",
      "options": [
        {
          "text": "<figure>",
          "correct": false
        },
        {
          "text": "<nav>",
          "correct": false
        },
        {
          "text": "<hgroup>",
          "correct": true
        },
        {
          "text": "<aside>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is used for plug-in content?",
      "explanation": "<embed> tag is new in HTML5 which also helps in validation of HTML5 page. It has attributes like height, src, type and width. HTML4 does not support this tag. Multiple media sources for video , audio and pictures are provided by <source> tag. <meter> tag gives a scalar measurement within a particular range. Progress of a task is shown by <progress> element.",
      "options": [
        {
          "text": "<embed>",
          "correct": true
        },
        {
          "text": "<progress>",
          "correct": false
        },
        {
          "text": "<meter>",
          "correct": false
        },
        {
          "text": "<source>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following does not lie under the attribute of <input> and is not supported by Opera?",
      "explanation": "<input> element type has new values as ‘url’, ‘email’, ‘datetime’, ‘date’, ‘month’, ‘tel’, ‘time’, ‘number’, ‘search’, ‘color’, ‘range’, ‘datetime-local’, ‘week’.",
      "options": [
        {
          "text": "url",
          "correct": false
        },
        {
          "text": "time",
          "correct": false
        },
        {
          "text": "tel",
          "correct": false
        },
        {
          "text": "option",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which is the new attribute of <input> element that is used to change the appearance of checkbox?",
      "explanation": "The indeterminate is actually not an attribute, it is the property of checkbox which can be change via JavaScript, e.g. Var checkbox=document.getElementById(“any-checkbox”); Checkbox.indeterminate=true;",
      "options": [
        {
          "text": "Indeterminate",
          "correct": true
        },
        {
          "text": "Media",
          "correct": false
        },
        {
          "text": "EI",
          "correct": false
        },
        {
          "text": "Target",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute does not lie inside <a> and <area> elements?",
      "explanation": "Preload is the attribute of the <video> element. Media, ping, hreflang, rel are the attribute used with <a> and <area> elements.",
      "options": [
        {
          "text": "Media",
          "correct": false
        },
        {
          "text": "Ping",
          "correct": false
        },
        {
          "text": "Hreflang",
          "correct": false
        },
        {
          "text": "Preload",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element does not support autofocus attribute?",
      "explanation": "Autofocus is a new attribute as well as very interesting one. It can be specified on <input>, <textarea>, <button> and <select> elements. It is a way to focus a form control when the page is loaded.",
      "options": [
        {
          "text": "<input>",
          "correct": false
        },
        {
          "text": "<select>",
          "correct": false
        },
        {
          "text": "<textarea>",
          "correct": false
        },
        {
          "text": "<base>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element does not support form attribute?",
      "explanation": "The new form attribute is for <input>, <select>, <textarea>, <button>, <output> and <fieldset>. One can place these elements anywhere on the page.",
      "options": [
        {
          "text": "<input>",
          "correct": false
        },
        {
          "text": "<output>",
          "correct": false
        },
        {
          "text": "<meta>",
          "correct": true
        },
        {
          "text": "<button>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute of <input> element can be used both with <datalist> and <select> elements?",
      "explanation": "List is the new attribute of <input> element and can be used together with <datalist> and <select> elements. Other attributes like pattern, multiple, max, min, step are new attribute used with the <input> element only.",
      "options": [
        {
          "text": "List",
          "correct": true
        },
        {
          "text": "Pattern",
          "correct": false
        },
        {
          "text": "Multiple",
          "correct": false
        },
        {
          "text": "Max",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not a Boolean attribute?",
      "explanation": "Formtarget attribute is a Boolean attribute that must have a value that is a valid browsing context name. Multiple is a new Boolean attribute of <input> the element which specifies constraint, novalidate, and formvalidate are <form> attribute and are Boolean as well.",
      "options": [
        {
          "text": "Multiple",
          "correct": false
        },
        {
          "text": "Novalidate",
          "correct": false
        },
        {
          "text": "Formvalidate",
          "correct": false
        },
        {
          "text": "Formtarget",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not the keyword of form method attribute?",
      "explanation": "The keyword GET, POST, PUT, DELETE mapped to the state GET, POST, PUT, DELETE and indicating the HTTP method respectively.",
      "options": [
        {
          "text": "GET",
          "correct": false
        },
        {
          "text": "POST",
          "correct": false
        },
        {
          "text": "PUT",
          "correct": false
        },
        {
          "text": "OUT",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the work of async attribute?",
      "explanation": "Async is the new attribute of the <script> element which influences script loading and its execution. It is a Boolean attribute which shows the manner of script execution. If async is present, the script will be executed asynchronously, as soon as it is available.",
      "options": [
        {
          "text": "It influences script loading",
          "correct": true
        },
        {
          "text": "It gives a label to the menu",
          "correct": false
        },
        {
          "text": "It validates form data",
          "correct": false
        },
        {
          "text": "Enables a set of extra restrictions on any content",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not <iframe> attribute?",
      "explanation": "Sizes is the attribute of <link> element. Sandbox is the attribute of <iframe> element that enables a set of extra restrictions on any content, seamless is a Boolean attribute of <iframe> which seamlessly included in the parent document, srcdoc attribute gives the content of the page that the nested browsing context is to contain.",
      "options": [
        {
          "text": "Seamless",
          "correct": false
        },
        {
          "text": "Srcdoc",
          "correct": false
        },
        {
          "text": "Sizes",
          "correct": true
        },
        {
          "text": "Sandbox",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not a new global attribute in HTML5?",
      "explanation": "Contenteditable, contextmenu, data, draggable, hidden, role, aria, spellcheck all are new global attributes introduced in HTML5. Class, dir, id, lang, style, tabindex, title are the attributes of HTML4 and now specified as global in HTML5.",
      "options": [
        {
          "text": "Contenteditable",
          "correct": false
        },
        {
          "text": "Contextmenu",
          "correct": false
        },
        {
          "text": "Title",
          "correct": true
        },
        {
          "text": "Draggable",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How do we write comments in HTML5?",
      "explanation": "Browser ignores comment in a code. There are always two types of command i.e. single line command and multiple line command. If one wants to add a comment in code, add the text between these characters <!…..comment….>. It will not visible in the user’s browser.",
      "options": [
        {
          "text": "<!……>",
          "correct": true
        },
        {
          "text": "<…….!>",
          "correct": false
        },
        {
          "text": "</…….>",
          "correct": false
        },
        {
          "text": "</……/>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one is correct syntax?",
      "explanation": "<p id=”td”> is the correct syntax for id type declaration. Id attribute’s value should start with a letter or an underscore. We cannot use any number or other character for defining name of the id.",
      "options": [
        {
          "text": "<p id=”1td”>",
          "correct": false
        },
        {
          "text": "<p id=”td”>",
          "correct": true
        },
        {
          "text": "<p id=”%td”>",
          "correct": false
        },
        {
          "text": "<p id=”#td”>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not example of block element?",
      "explanation": "The elements which always appear to start on a new line in browser are known as block level elements. Examples are <h1>,<ul>,<li> and <p>.",
      "options": [
        {
          "text": "<h1>",
          "correct": false
        },
        {
          "text": "<ul>",
          "correct": false
        },
        {
          "text": "<p>",
          "correct": false
        },
        {
          "text": "<a>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What does semantic markup not define?",
      "explanation": "< Semantic markup> which provides extra information, such as where emphasis is placed in a sentence, that something you have written is a quotation, the meaning of acronyms etc.",
      "options": [
        {
          "text": "provides extra information",
          "correct": false
        },
        {
          "text": "where an emphasis is placed in a sentence",
          "correct": false
        },
        {
          "text": "meaning of an acronym",
          "correct": false
        },
        {
          "text": "that describes paragraphs",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How many levels of headings HTML has?",
      "explanation": "HTML has six “levels ” of headings.<h1> is used for main headings,<h2> is used for subheadings. There is no other levels other than <h1>, <h2>, <h3>, <h4>, <h5>, <h6>",
      "options": [
        {
          "text": "6",
          "correct": true
        },
        {
          "text": "3",
          "correct": false
        },
        {
          "text": "7",
          "correct": false
        },
        {
          "text": "2",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the size of content of an <h1> element?",
      "explanation": "The contents of an <h1> element is the largest and the contents of an <h6> element is the smallest. Rest of <h2>, <h3>, <h4>, <h5> lies in between largest and smallest.",
      "options": [
        {
          "text": "Smallest",
          "correct": false
        },
        {
          "text": "Largest",
          "correct": true
        },
        {
          "text": "Medium",
          "correct": false
        },
        {
          "text": "Anything between smallest and largest",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the tag used for making character appearance bold?",
      "explanation": "By enclosing words in the tags <b>and</b> we can make characters appear bold. <i> element is for content in italics, <u> is for underlined content, <br> is for vertical breaking.",
      "options": [
        {
          "text": "<b>content</b>",
          "correct": true
        },
        {
          "text": "<i>content</i>",
          "correct": false
        },
        {
          "text": "<u>content</u>",
          "correct": false
        },
        {
          "text": "<br>content</br>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For writing chemical formula of water which tag will be used?",
      "explanation": "The <sub> element is used to contain characters that should be subscript. It is commonly used with foot notes or chemical formulas. E.g. H20, <sup> is use for superscript, <br> is for horizontal break, <ul> is for unordered list.",
      "options": [
        {
          "text": "<sup>",
          "correct": false
        },
        {
          "text": "<sub>",
          "correct": true
        },
        {
          "text": "<br/>",
          "correct": false
        },
        {
          "text": "<ul>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "which tag will be used For raising number to a power?",
      "explanation": "The <sup> element is used to contain characters that should be superscript. It is commonly used with foot notes or chemical formulae. E.g. X2 , <br> is for break, <ul> is for unordered list.",
      "options": [
        {
          "text": "<sup>",
          "correct": true
        },
        {
          "text": "<sub>",
          "correct": false
        },
        {
          "text": "<br/>",
          "correct": false
        },
        {
          "text": "<ul>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the use of <hr/> tag?",
      "explanation": "To create a break between themes-such as change of topic in a book or a new scene in a play-you can add a horizontal rule between sections using <hr/> tag",
      "options": [
        {
          "text": "To create horizontal rule between sections",
          "correct": true
        },
        {
          "text": "To create a line break",
          "correct": false
        },
        {
          "text": "To create vertical rule between sections",
          "correct": false
        },
        {
          "text": "For making content appearance italics",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not an empty element.",
      "explanation": "There are a few elements that do not have any words between an opening and closing tag. They are known as empty elements. An empty element usually has only one tag. Before the closing angled bracket of an empty element, there will often be a space and a forward slash.",
      "options": [
        {
          "text": "<hr/>",
          "correct": false
        },
        {
          "text": "<br/>",
          "correct": false
        },
        {
          "text": "<sup>",
          "correct": true
        },
        {
          "text": "<img/>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute is not essential under <iframe>?",
      "explanation": "An iframe is equivalent to a window that has been cut into our page, it is created using <iframe> element. Src, height, width attribute are essentially used inside of this. Src attribute specifies the URL of the page which is to be shown. Height and width specify the height and width of an iframe in pixels.",
      "options": [
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "height",
          "correct": false
        },
        {
          "text": "width",
          "correct": false
        },
        {
          "text": "frameborder",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not the attribute of <meta> element?",
      "explanation": "<meta> element contains information about web page. Description attribute contains the description of the web page, keywords contains the list of comma separated words, robots decide to add pages to search results.",
      "options": [
        {
          "text": "description",
          "correct": false
        },
        {
          "text": "keywords",
          "correct": false
        },
        {
          "text": "robots",
          "correct": false
        },
        {
          "text": "seamless",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Copyright symbol can be included by _________",
      "explanation": "HTML code has some characters that are reserved so for using those on the page one need to know “escape” characters. If you want to add a copyright symbol to the web page they can use &copy or &#169.",
      "options": [
        {
          "text": "&lt",
          "correct": false
        },
        {
          "text": "&copy",
          "correct": true
        },
        {
          "text": "&amp",
          "correct": false
        },
        {
          "text": "&gt",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Attributes that allow to identify particular element are  ____________",
      "explanation": "The id and class attributes are useful in identifying particular elements. <iframe> element is for creating frames in web page, <div> and <span> are inline elements, metadata is provided by <meta> tag.",
      "options": [
        {
          "text": "<div> and <span>",
          "correct": false
        },
        {
          "text": "<meta>",
          "correct": false
        },
        {
          "text": "id and class",
          "correct": true
        },
        {
          "text": "<iframes>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "All elements are identified by their __________ and are marked up using either start tags and end tags or self-closing tags.",
      "explanation": "The attribute name describes name of <input> element. The tagName property returns the tag name of the element. In HTML, the returned value of the tagName property is always in UPPERCASE. Name of class is returned by class name.",
      "options": [
        {
          "text": "attribute name",
          "correct": false
        },
        {
          "text": "tag name",
          "correct": true
        },
        {
          "text": "class name",
          "correct": false
        },
        {
          "text": "none of the mentioned",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ element represents a span of text that is isolated from its surroundings for the purposes of bidirectional text formatting.",
      "explanation": "The base Url target relative to all URL’s in document is specified by base tag in html. B is for bold text representation. bdi stands for Bi-directional Isolation. This element is useful when embedding user-generated content with an unknown directionality. Direction of text is displayed by bdo element.",
      "options": [
        {
          "text": "b",
          "correct": false
        },
        {
          "text": "bdi",
          "correct": true
        },
        {
          "text": "bdo",
          "correct": false
        },
        {
          "text": "base",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The interactive element audio with the attribute controls must not appear as a descendant of which element?",
      "explanation": "The anchor and the button tag acts as link which cannot be a parent of audio element.",
      "options": [
        {
          "text": "a",
          "correct": false
        },
        {
          "text": "button",
          "correct": false
        },
        {
          "text": "audio",
          "correct": false
        },
        {
          "text": "both a and button",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "A ____________ element must have a start tag but must not have an end tag.",
      "explanation": "The command tag is new in HTML5 and specifies a normal command with an action. Details has end tag.",
      "options": [
        {
          "text": "details",
          "correct": false
        },
        {
          "text": "command",
          "correct": true
        },
        {
          "text": "code",
          "correct": false
        },
        {
          "text": "both details and command",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which type attribute of input element sets the element’s value to a string representing a number?",
      "explanation": "The input element with a type attribute whose value is “range” represents an imprecise control for setting the element’s value to a string representing a number.",
      "options": [
        {
          "text": "range",
          "correct": true
        },
        {
          "text": "email",
          "correct": false
        },
        {
          "text": "file",
          "correct": false
        },
        {
          "text": "date",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following type attributes of input element defines control for entering a telephone number?",
      "explanation": "The input element with a type attribute whose value is “tel” represents a one-line plain-text edit control for entering a telephone number.",
      "options": [
        {
          "text": "mob",
          "correct": false
        },
        {
          "text": "tel",
          "correct": true
        },
        {
          "text": "mobile",
          "correct": false
        },
        {
          "text": "telephone",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element represents a control for generating a public-private key pair?",
      "explanation": "The command tag is new in HTML5 and specifies a normal command with an action. The keygen element represents a control for generating a public-private key pair and for submitting the public key from that key pair.",
      "options": [
        {
          "text": "ins",
          "correct": false
        },
        {
          "text": "keygen",
          "correct": true
        },
        {
          "text": "key",
          "correct": false
        },
        {
          "text": "command",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The World Wide Web’s markup language has always been HTML.",
      "explanation": "The World Wide Web’s markup language has always been HTML. HTML was primarily designed as a language for semantically describing scientific documents, although its general design and adaptations over the years have enabled it to be used to describe a number of other types of documents.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element represents marked or highlighted text for reference purposes?",
      "explanation": "Highlight element is used to highlight a particular text when used in a document. Strong element specifies the importance of text. The mark element represents a run of text in one document marked or highlighted for reference purposes, due to its relevance in another context. An enclosed text which flashes later on is created by blink element.",
      "options": [
        {
          "text": "highlight",
          "correct": false
        },
        {
          "text": "mark",
          "correct": true
        },
        {
          "text": "strong",
          "correct": false
        },
        {
          "text": "blink",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element(s) represents a section of a document that links to other documents?",
      "explanation": "The nav element represents a section of a page that links to other pages or to parts within the page: a section with navigation links.",
      "options": [
        {
          "text": "navigation",
          "correct": false
        },
        {
          "text": "anchor tag",
          "correct": false
        },
        {
          "text": "nav",
          "correct": true
        },
        {
          "text": "option",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following element marks the ruby text component of a ruby annotation?",
      "explanation": "A ruby annotation is specified by ruby text, which is small text attached to the main text, which is used to indicate the pronunciation of characters. The rt element is the markup for ruby text.",
      "options": [
        {
          "text": "r",
          "correct": false
        },
        {
          "text": "rt",
          "correct": true
        },
        {
          "text": "ruby",
          "correct": false
        },
        {
          "text": "rubytxt",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Subtitle tracks and caption tracks to be specified for audio and video elements can be added using which of the following element?",
      "explanation": "The track element enables supplementary media tracks such as subtitle tracks and caption tracks to be specified for audio and video elements.",
      "options": [
        {
          "text": "sink",
          "correct": false
        },
        {
          "text": "track",
          "correct": true
        },
        {
          "text": "stable",
          "correct": false
        },
        {
          "text": "caption",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the property of SVG images?",
      "explanation": "SVG images stands for Scalable Vector Graphics which are scalable, zoomable and resolution independent. SVG is an open standard.",
      "options": [
        {
          "text": "SVG images are scalable",
          "correct": false
        },
        {
          "text": "SVG images are zoomable",
          "correct": false
        },
        {
          "text": "SVG is an open standard",
          "correct": false
        },
        {
          "text": "SVG images are resolution dependent",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "_______ drawings can be dynamic and interactive.",
      "explanation": "Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation. The SVG specification is an open standard developed by the World Wide Web Consortium (W3C) since 1999. SVG images and their behaviors are defined in XML text files.",
      "options": [
        {
          "text": "Canvas based",
          "correct": false
        },
        {
          "text": "SVG",
          "correct": true
        },
        {
          "text": "CSS3",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the predefined shape elements that can be used by developers?",
      "explanation": "SVG images stands for Scalable Vector Graphics. Path <path> is used to define path. Rectangle  element draws rectangle and Circle <circle> draws circle in SVG. All of the respective SVG elements are used to draw respective images.",
      "options": [
        {
          "text": "Path <path>",
          "correct": false
        },
        {
          "text": "Rectangle <rect>",
          "correct": false
        },
        {
          "text": "Circle <circle>",
          "correct": false
        },
        {
          "text": "Line <lin>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element must reference a resource that can provide an image for the cursor graphic?",
      "explanation": "The cursor attribute specifies the mouse cursor displayed when the mouse pointer is over an element. This attribute behaves exactly like the css cursor property except that if the browser supports the cursor element, you should be able to use it with the funciri notation.",
      "options": [
        {
          "text": "hover",
          "correct": false
        },
        {
          "text": "i",
          "correct": false
        },
        {
          "text": "cursor",
          "correct": true
        },
        {
          "text": "fill",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element serves as a container for atomic filter operations?",
      "explanation": "Composition of two images together is done by a primitive filter called feblend. A filter is referenced by using the filter attribute on the target SVG element and is never renderd directly. Fetching of image data from external sources is done by feimage.",
      "options": [
        {
          "text": "filter",
          "correct": true
        },
        {
          "text": "feimage",
          "correct": false
        },
        {
          "text": "feblend",
          "correct": false
        },
        {
          "text": "tref",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ element must reference either an ‘altGlyphDef’ element or a ‘glyph’ element.",
      "explanation": "Src is the URL of image. The href is Hypertext Reference which is used to link pages in html and is also an attribute for anchor tag. The altGlyph element allows sophisticated selection of the glyphs used to render its child character data.",
      "options": [
        {
          "text": "href",
          "correct": false
        },
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "animate",
          "correct": false
        },
        {
          "text": "altGlyph",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ___________ element must reference a ‘linearGradient’ or ‘radialGradient’ element.",
      "explanation": "Script is line of command which are executed by script engine. Allowing animation to control translation, scaling or rotation is done by animateTransform element. A radialGradient lets authors define radial gradients to fill or stroke graphical elements. A clipping path is defined by clip-path element.",
      "options": [
        {
          "text": "script",
          "correct": false
        },
        {
          "text": "radialGradient",
          "correct": true
        },
        {
          "text": "animateTransform",
          "correct": false
        },
        {
          "text": "clip-Path",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "SVG also stands for Scalar Vector Graphics.",
      "explanation": "SVG stands for Scalable Vector Graphics.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which property of SVG restricts the region to which paint can be applied?",
      "explanation": "Allowing animation to control translation, scaling or rotation is done by animateTransform element. A clipping path is defined by clip-path element. A clipping path is defined with a clipPath element. A clipping path is used/referenced using the clip-path property. A radialGradient lets authors define radial gradients to fill or stroke graphical elements.",
      "options": [
        {
          "text": "animateTransform",
          "correct": false
        },
        {
          "text": "clip-Path",
          "correct": true
        },
        {
          "text": "linearGradient",
          "correct": false
        },
        {
          "text": "radialGradient",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which SVG element produces the same effect as if the nodes were deeply cloned into a non-exposed DOM?",
      "explanation": "A colour of line, text or outline is defined by stroke element in SVG. The use element takes nodes from within the SVG document, and duplicates them somewhere else.",
      "options": [
        {
          "text": "tref",
          "correct": false
        },
        {
          "text": "use",
          "correct": true
        },
        {
          "text": "stroke",
          "correct": false
        },
        {
          "text": "bin",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the default type of ‘type’ attribute of <input> element?",
      "explanation": "Text input type defines single line text field. Type is the attribute that displays type of <input> elements. Its default type is text. It is supported by most of the browsers like Chrome, Internet Explorer, Firefox, Opera.  Syntax is: <form action=”jump.php”> Name:<input type=”text” name=”name”>  </form> A password field is defined by password input.",
      "options": [
        {
          "text": "Text",
          "correct": true
        },
        {
          "text": "Password",
          "correct": false
        },
        {
          "text": "Numerals",
          "correct": false
        },
        {
          "text": "Special Characters",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is a new input attribute introduce by HTML5?",
      "explanation": "HTML4 has attributes with <input> elements like radio buttons, Checkbox controls, submit buttons, text input etc.\nHTML5 has introduced new attributes like date, color, month, time, week, datetime-local, email, number, range, tel, url, search etc.\n",
      "options": [
        {
          "text": "text",
          "correct": false
        },
        {
          "text": "checkbox controls",
          "correct": false
        },
        {
          "text": "submit buttons",
          "correct": false
        },
        {
          "text": "date",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How does the color attribute work?",
      "explanation": "color is the attribute of <input> element introduce by HTML5. It defines the color picker i.e we can select a color of our choice from the color picker. Syntax is Select the color that you want: <input type=”color” name=”favorite color”>",
      "options": [
        {
          "text": "Changes color of the text",
          "correct": false
        },
        {
          "text": "Changes background color",
          "correct": false
        },
        {
          "text": "The color picker is defined by it",
          "correct": true
        },
        {
          "text": "Changes color of the text as well as background",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute is used for activation of JavaScript?",
      "explanation": "Input type button is used for the activation of JavaScript on the clicking of the button. Its syntax is <input type=”button” value=”click” onclick=”source()”>. This will display a button named click and when we click that button JavaScript function source() will be invoked.",
      "options": [
        {
          "text": " button",
          "correct": true
        },
        {
          "text": "checkbox",
          "correct": false
        },
        {
          "text": "url",
          "correct": false
        },
        {
          "text": "submit",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute defines the file-select field?",
      "explanation": "file input type defines a file-select field, also gives a “Browse” button for file uploads. Syntax is <input type=”file” name=”image”>. Checkbox gives the facility to select one or more than one options from the given choices. The button activates JavaScript code. The text defines a single-line text field.",
      "options": [
        {
          "text": "file",
          "correct": true
        },
        {
          "text": "checkbox",
          "correct": false
        },
        {
          "text": "button",
          "correct": false
        },
        {
          "text": "text",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How image attribute works?",
      "explanation": "the image input type set an image as submit button. The syntax is <input type=”image” src=”imghj.gif” alt=”Submit”> this sets the image provided by url as the submit button. Input type image sends the X and Y coordinates of click and hence the image is activated by clicking the submit button.",
      "options": [
        {
          "text": "Sets an image background",
          "correct": false
        },
        {
          "text": "Set an image as submit button",
          "correct": true
        },
        {
          "text": "Set an image anywhere on the page",
          "correct": false
        },
        {
          "text": "Bring default image to the page",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "month attribute defines ___________",
      "explanation": "month and year are defined by month attribute. It does not define the time zone. The syntax is Anniversary (month and year) <input=”month” name=”anniversary month” >., date attribute defines the date, datetime-local defines date and time but no time zone.",
      "options": [
        {
          "text": "the only month",
          "correct": false
        },
        {
          "text": "month and year",
          "correct": true
        },
        {
          "text": "date",
          "correct": false
        },
        {
          "text": "date and time",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "week attribute defines ____________",
      "explanation": "week input type defines a week and year. It does not define the time zone. Syntax is <form action=”ghu.php”> week: <input type=”week” name=”week and year”> <input type=”submit”> </form>, this gives a selection box and display a calendar like chart from where we can select a week and the year as well.",
      "options": [
        {
          "text": "week",
          "correct": false
        },
        {
          "text": "year",
          "correct": false
        },
        {
          "text": "week and year",
          "correct": true
        },
        {
          "text": "week, month and year",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "tel attribute is supported by the _________ browser.",
      "explanation": "tel is the attribute which specifies field for telephone number. Syntax is <form action=”hkjk.php”> Telephone number: <input type=”tel” name=”usertelephone”> <br> <input type=”submit”> </form>, tel attribute is usually supported by newer versions like Safari 8.",
      "options": [
        {
          "text": "Chrome",
          "correct": false
        },
        {
          "text": "Safari",
          "correct": true
        },
        {
          "text": "Opera",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute is not used on new forms?",
      "explanation": "size attribute denotes the width of text input i.e measured by the number of characters inputted. E.g. If we input value 3 then it will create a box of width enough to display three characters. The user can enter more characters if they want. Syntax is <input type=”text” name=”firstname” size=”12” maxlength=”30”>",
      "options": [
        {
          "text": "size",
          "correct": true
        },
        {
          "text": "text",
          "correct": false
        },
        {
          "text": "name",
          "correct": false
        },
        {
          "text": "maxlength",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not used with password attribute?",
      "explanation": "password is the attribute that creates a text box which is similar to the single line text input, but the characters are blocked out. They are hidden due to the privacy of the user. The name attribute with a password set the name of the password input, size and maxlength attributes define the size and maximum length of the text box which is to be used for the password.",
      "options": [
        {
          "text": "name",
          "correct": false
        },
        {
          "text": "size",
          "correct": false
        },
        {
          "text": "maxlength",
          "correct": false
        },
        {
          "text": "min",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element is used to create multi-line text input?",
      "explanation": "For creating multi-line text input we use <textarea> element. This is not empty element i.e. it requires both opening tag and closing tag. The cols attribute defines a width of the text area. The row attributes the number of rows that the textarea can require.",
      "options": [
        {
          "text": "text",
          "correct": false
        },
        {
          "text": "textarea",
          "correct": true
        },
        {
          "text": "submit",
          "correct": false
        },
        {
          "text": "radio button",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute is not used for the radio type?",
      "explanation": "When we want to pick one option from the given many options we use radio type. Name attribute sent the value of the option selected to the server. Value attribute indicates the value that has been sent to the server for the selected option. The checked attribute indicates that which value should be selected on the loading of the page.",
      "options": [
        {
          "text": "name",
          "correct": false
        },
        {
          "text": "value",
          "correct": false
        },
        {
          "text": "checked",
          "correct": false
        },
        {
          "text": "selected",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute is used with <select> element?",
      "explanation": "<select> element is used for drop down select box. Size attribute is used for showing more than one option. For a selection of multiple options, we use multiple attributes. It is a useful option to select multiple things at a time.\nSyntax is\n<form action=”jhi.php”> <select name=”fruits” size=”5” multiple=”multiple”>\n",
      "options": [
        {
          "text": "multiple",
          "correct": true
        },
        {
          "text": "selected",
          "correct": false
        },
        {
          "text": "name",
          "correct": false
        },
        {
          "text": "value",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Before HTML5 where data had to be stored?",
      "explanation": "When HTML5 was not introduced application data had to store in cookies when server requested for it. Web storage was secure then as well as large data could be stored even it does not affect performance. After coming of HTML5 web applications can store data within the browser that the user is using.",
      "options": [
        {
          "text": "cookies",
          "correct": true
        },
        {
          "text": "browser",
          "correct": false
        },
        {
          "text": "only in Internet Explorer",
          "correct": false
        },
        {
          "text": "only in Chrome",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In localStorage object data ________",
      "explanation": "Data with no expiration date is stored by localStorage object. Here the data is not deleted if we close the browser. We can have data at the next day or week or year. Syntax is\nlocalStorage(“firstname”,”Tanya”); document.getElementById(“fo”).innerHTML= localStorage.getItem(“firstname”); here fo is id.\n",
      "options": [
        {
          "text": "is deleted after the browser has been closed",
          "correct": false
        },
        {
          "text": "is not deleted after the browser has been closed",
          "correct": true
        },
        {
          "text": "can be seen but can not edit",
          "correct": false
        },
        {
          "text": "can be seen as well as edit",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In sessionStorage object data __________",
      "explanation": "sessionStorage object works same as localStorage object except the data is stored for one session only. When the use closes the browser the data is deleted. Syntax is\nsessionStorage.firstname-“Tanya”; document.getElementById(“fo”).innerHTML= sessionStorage.firstname;\n",
      "options": [
        {
          "text": "is not deleted after the browser has been closed",
          "correct": false
        },
        {
          "text": "can be seen but can’t edit",
          "correct": false
        },
        {
          "text": "can be seen as well as edit",
          "correct": false
        },
        {
          "text": "is deleted after the browser has been closed",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the limit of character storage for chrome 23.0 in localStorage?",
      "explanation": "We can’t store any character in localStorage in chrome 23.0, for chrome 18.0 it is unlimited i.e. can store any number of characters, for chrome 19.77 it is 1021 k, for chrome 22.0 it is 2.49 M, for chrome 24.0, 25.0, 27.0 it is 2.49 M, for chrome 28.0, 30.0, 31.0 and 31.1 it is 4.98 M.",
      "options": [
        {
          "text": "unlimited",
          "correct": false
        },
        {
          "text": "none",
          "correct": true
        },
        {
          "text": "1021 k",
          "correct": false
        },
        {
          "text": "4.98 M",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the limit of character storage for chrome 23.0 in sessionStorage?",
      "explanation": "We can store 510 k characters in sessionStorage in chrome 23.0, for chrome 18.0 and chrome 24.0 we can store unlimited characters, for chrome 19.77 its value is 1021 k, for chrome 25.0 and 27.0 it is 2.49 M, for chrome 28.0, 30.0, 31.0, 31.1 its value is 4.98 M.",
      "options": [
        {
          "text": "510 k",
          "correct": true
        },
        {
          "text": "unlimited",
          "correct": false
        },
        {
          "text": "1021 k",
          "correct": false
        },
        {
          "text": "2.49 M",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a web storage interface?",
      "explanation": "There is only three web storage interface window, storage, and StorageEvent. Window object provides access to the local storage objects. Storage retrieves, set and remove data from the domain. Storage event is fired when the storage area on a document’s window changes.",
      "options": [
        {
          "text": "storage",
          "correct": false
        },
        {
          "text": "window",
          "correct": false
        },
        {
          "text": "storageEvent",
          "correct": false
        },
        {
          "text": "privacy",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following returns a number of value pairs?",
      "explanation": "storage.length returns number of value pairs that are currently present in the list, storage.key(n) returns name of nth key from the list, storagesetItem(key,value) sets the value which is identified by key to value, storage.clear() empties the list which is associated with values.",
      "options": [
        {
          "text": "storage.key(n)",
          "correct": false
        },
        {
          "text": "storage.length",
          "correct": true
        },
        {
          "text": "storage.setItem(key,value)",
          "correct": false
        },
        {
          "text": "storage.clear()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is invoked when it is not fired on window object?",
      "explanation": "When removeItem(), clear() and setItem() are invoked the events are fired on window object, which accesses newly stored or removed data, as defined by LocalStorage and sessionStorage attributes, getItem(key) method returns the current value associated with the key.",
      "options": [
        {
          "text": "removeItem()",
          "correct": false
        },
        {
          "text": "clear()",
          "correct": false
        },
        {
          "text": "setItem()",
          "correct": false
        },
        {
          "text": "getItem()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the storageEvent interface?",
      "explanation": "There are many storgeEvent interfaces like event.key, event.newValue, event.url, event.oldValue, event.storageArea. Event.key returns the key if the storage item is changed, event.oldValue and event.newValue returns old value and the new value of the key whose value has been changed. Event.url returns the URL of a document which has been changed.",
      "options": [
        {
          "text": "event.newValue",
          "correct": false
        },
        {
          "text": "event.url",
          "correct": false
        },
        {
          "text": "event.key",
          "correct": false
        },
        {
          "text": "event.clear",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For clearing all the settings which function should be called?",
      "explanation": "If we want to delete all the setting we can call localStorage.clear() method, localStorage.remove(key) only removes the key of the value that we have given. Same can be applied with sessionStorage also the syntax will be sessionStorage.clear().",
      "options": [
        {
          "text": "localStorage.remove(key)",
          "correct": false
        },
        {
          "text": "localStorage.clear()",
          "correct": true
        },
        {
          "text": "localStorage.remove()",
          "correct": false
        },
        {
          "text": "localStorage.clearAll()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the form type for adding text?",
      "explanation": "There are many types of form controls. Adding text, Submitting forms, Making choices and Uploading files are some of them. For an adding text, we can use Text input, Text area, and Password input. For making choices there are checkboxes, radio buttons, and drop-down boxes.",
      "options": [
        {
          "text": "Text input",
          "correct": false
        },
        {
          "text": "Text area",
          "correct": false
        },
        {
          "text": "Password input",
          "correct": false
        },
        {
          "text": "Submit button",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In the processing of information, the server does not use the language _____",
      "explanation": "When we enter a new value through form it goes to the server for processing information and this information is processed using languages C#, PHP, JAVA or VB.net. The database can also store the information.",
      "options": [
        {
          "text": "C#",
          "correct": false
        },
        {
          "text": "JAVA",
          "correct": false
        },
        {
          "text": "C++",
          "correct": true
        },
        {
          "text": "VB.net",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For creating single line text box for searching queries, we use the type ___________",
      "explanation": "For creating a single line text box for searching queries we use the type=”search”. In old browsers, it will be simply a single line text box.  Safari adds across that clear search box when we enter new data to search. It also rounds the corners on search input fields by default.",
      "options": [
        {
          "text": "placeholder",
          "correct": false
        },
        {
          "text": "search",
          "correct": true
        },
        {
          "text": "url",
          "correct": false
        },
        {
          "text": "hidden",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Form validation traditionally was performed by ___________",
      "explanation": "Form validation is checking if the form has been filled correctly. Traditionally it has been performed by JavaScript but now HTML5 is introducing validation. Hence browser does all the work of validation. Validation reduces the amount of work for the server.",
      "options": [
        {
          "text": "PHP",
          "correct": false
        },
        {
          "text": "HTML",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": true
        },
        {
          "text": "jQuery",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For grouping form controls we can use ___________",
      "explanation": "For grouping form controls together we use <fieldset> element. Fieldset is shown with a line around edge. Appearance can be adjusted by CSS.\n E.g. <fieldset> <legend> details </legend> <label> Name: <br/> <>input type=”text” name=”name”/> </label> <br/> </fieldset>\n\n",
      "options": [
        {
          "text": "<legend>",
          "correct": false
        },
        {
          "text": "<fieldset>",
          "correct": true
        },
        {
          "text": "<label>",
          "correct": false
        },
        {
          "text": "<select>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one has the most potential for minification?",
      "explanation": "Among the four languages JavaScript, PHP, HTML and CSS, JavaScript has the most potential for minification. In JavaScript whitespaces and comments are removed. Windows-style line breaks (CRLF) is converted to UNIX-style breaks (LF). Moreover, variable names can also be shortened.",
      "options": [
        {
          "text": "JavaScript",
          "correct": true
        },
        {
          "text": "CSS",
          "correct": false
        },
        {
          "text": "HTML",
          "correct": false
        },
        {
          "text": "PHP",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "YUI compressor is written in ____________",
      "explanation": "YUI compressor is one of the best compressor. It is a command-line minifier which is written in Java. It can process CSS as well as JavaScript. It is simple to run it like-\n$java –jar /usr/local/bin//yuicompressor-2.3.5/build/yuicompressor-2.3.5.jar input.js > output.js\n",
      "options": [
        {
          "text": "HTML",
          "correct": false
        },
        {
          "text": "C++",
          "correct": false
        },
        {
          "text": "C",
          "correct": false
        },
        {
          "text": "Java",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which compressor gives maximum GZIPPED compression?",
      "explanation": "YUI compressor gives maximum GZIPPED compression i.e. 21 out of 122. JSMin gives 23 out of 122, Closure(simple) gives 21 out of 122, Closure(advanced) gives 18 out of 122, Packer gives 23 out of 122. There is also redundancy due to GZIP compression.",
      "options": [
        {
          "text": "YUI",
          "correct": true
        },
        {
          "text": "JSMin",
          "correct": false
        },
        {
          "text": "Packer",
          "correct": false
        },
        {
          "text": "Closure(advanced)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "CSSMin is written in ___________",
      "explanation": "CSSMin is written in Java. It preforms conversion of lowercase, ordering of properties, replacement of names with numeric or hex equivalents. E.g. font-weight:bold can be written as font-weight: 600, color: black to color: #000.",
      "options": [
        {
          "text": "C++",
          "correct": false
        },
        {
          "text": "Java",
          "correct": true
        },
        {
          "text": "PHP",
          "correct": false
        },
        {
          "text": "C",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " HTMLMinifier is written in ________",
      "explanation": "There are mainly two popular HTML minifier. HTMLMinifier and htmlcompressor first are written in JavaScript. It is to be run via a web browser. Second is command-line Java application. HTMLMinifier offers better levels of compression.",
      "options": [
        {
          "text": "JavaScript",
          "correct": true
        },
        {
          "text": "Java",
          "correct": false
        },
        {
          "text": "C++",
          "correct": false
        },
        {
          "text": "C",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which option is not available in HTMLMinifier?",
      "explanation": "There are many options available in HTMLMinifier like it removes comments, also comments from CSS and JavaScript blocks, collapses whitespace, removes character data blocks from JavaScript and CSS, Collapses Boolean attributes, removes redundant attributes, uses a short doctype, removes empty elements, removes attribute quotes.",
      "options": [
        {
          "text": "remove attribute quotes",
          "correct": false
        },
        {
          "text": "use the short doctype",
          "correct": false
        },
        {
          "text": "remove empty elements",
          "correct": false
        },
        {
          "text": "replace <strong> with <b>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not associated with web socket communication?",
      "explanation": "For opening WebSocket we call WebSocket constructor. The syntax is\nvar conn=new WebSocket(‘ws://rtyyghj.websocket.org/echo’,[‘brush’, ‘xmpp’]);\nfor using secure HTTP connections use https: ,ws: is the new URL scheme for connecting WebSockets. There is wss: also.\n",
      "options": [
        {
          "text": "https",
          "correct": false
        },
        {
          "text": "wss",
          "correct": false
        },
        {
          "text": "ws",
          "correct": false
        },
        {
          "text": "http",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the wire protocol for WebScoket?",
      "explanation": "Wire protocol is handshaking and data transferring between server and client. It is the RFC6455. Chrome for Android and Chrome are compatible with RFC6455. It includes binary messaging also. Firefox version 11 and Internet Explorer 10 is also compatible with this.",
      "options": [
        {
          "text": "RFC6455",
          "correct": true
        },
        {
          "text": "RFC6477",
          "correct": false
        },
        {
          "text": "RFC6567",
          "correct": false
        },
        {
          "text": "RFC8967",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The maximum bytes for control frames is _______________",
      "explanation": "Control frames must be of 125 bytes or less than this. Control frames must not be fragmented. They have opcode of 0x02 (Ping), 0x01 (close) or 0x03 (Pong). Control frames help in communicating state about webSocket.",
      "options": [
        {
          "text": "100 bytes",
          "correct": false
        },
        {
          "text": "125 bytes",
          "correct": true
        },
        {
          "text": "130 bytes",
          "correct": false
        },
        {
          "text": "150 bytes",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the server library for Node.js?",
      "explanation": "ws is server library and WebSocket client for Node.js. Caddy is used for proxying arbitrary commands. WebSocket under covers is used by SignalR. To use asynchronous RPC library with the bidirectional call we use JSONRPC.server.",
      "options": [
        {
          "text": " Caddy",
          "correct": false
        },
        {
          "text": "SignalR",
          "correct": false
        },
        {
          "text": "ws",
          "correct": true
        },
        {
          "text": "jsonrpc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In desktop which browser does not support WebSocket?",
      "explanation": "In desktops, WebSockets are supported by Chrome version-6, version-43, version-14. Edge-14 supports WebSockets. All the versions of firefox support WebSocket. Opera version-76 and version-7 do not support WebSocket. Safari version-5.0.1 and version-6.0 support WebSocket.",
      "options": [
        {
          "text": "Chrome version 7",
          "correct": true
        },
        {
          "text": "Chrome version 6",
          "correct": false
        },
        {
          "text": "Chrome version 43",
          "correct": false
        },
        {
          "text": "Internet Explorer 10",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one is not associated with Gecko?",
      "explanation": "Gecko 7.0 includes Firefox 7.0/SeaMonkey 2.4/Thunderbird 7.0. Gecko 8.0 includes Firefox 8.0/SeaMonkey 2.5/Thunderbird 8.0. In Gecko 11.0 WebSocket API is no longer used as a prefix. In Gecko 7.0 network.websocket.max-connections is used.",
      "options": [
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "SeaMonkey",
          "correct": false
        },
        {
          "text": "Thunderbird",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Messages from the server are received by ____",
      "explanation": "onmessage function is used for receiving messages from the server. E.g. memeDocket.onmessage = function (eve) { console.log(eve.data); }. For sending data as a string we use ArrayaBuffer and Blob.",
      "options": [
        {
          "text": "onmessage",
          "correct": true
        },
        {
          "text": "send",
          "correct": false
        },
        {
          "text": "arrayBuffer",
          "correct": false
        },
        {
          "text": "blob",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For duplex communication we can’t use ____________",
      "explanation": "There are some existing techniques for the communication between client and server known as duplex techniques. They are Streaming, HTML5, Postback and AJAX, Long Polling, Polling. For real-time transferring of data, Streaming is the best option. Polling performs periodic requests.",
      "options": [
        {
          "text": "Long Polling",
          "correct": false
        },
        {
          "text": "HTML5",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": true
        },
        {
          "text": "Streaming",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the event of WebSocket API?",
      "explanation": "There are four WebSocket API, Close, Message, Error and Open. We can implement these events by using functions like onmessage, onopen, onerror, addEventListener and onclose. When there is an end of communication between client and server then onclose method is called.",
      "options": [
        {
          "text": "Close",
          "correct": false
        },
        {
          "text": "Message",
          "correct": false
        },
        {
          "text": "Send",
          "correct": true
        },
        {
          "text": "Error",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which one is not a very good developer support?",
      "explanation": "Firefox, Chrome and Opera are the very good browser in terms of developer support. They have various built-in tools for the interaction of client-side and resources. It is also very helpful for security purposes.",
      "options": [
        {
          "text": "Opera",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": true
        },
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Chrome",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "There is an audio format supported across all browsers.",
      "explanation": "There are 3 formats that are used in HTML5 Audio and are .mp3, .m4a AAC also known as H.264 format.",
      "options": [
        {
          "text": "True",
          "correct": false
        },
        {
          "text": "False",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following tag is used for audio in HTML5?",
      "explanation": "<video> tag is used for video clips in HTML5. <canvas> is for graphical user interface. The audio tag defines sound, such as music or other audio streams.",
      "options": [
        {
          "text": "<bgsound>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": true
        },
        {
          "text": "<video>",
          "correct": false
        },
        {
          "text": "<canvas>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used to defines multiple media resources for media elements audio and video?",
      "explanation": "<video> tag is used for video clips in HTML5. <canvas> is for graphical user interface. The audio tag defines sound, such as music or other audio streams.defines multiple media resources for media elements, such as <video> and <audio>.",
      "options": [
        {
          "text": "<source>",
          "correct": true
        },
        {
          "text": "<canvas>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": false
        },
        {
          "text": "<video>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following browser does not support wav file format?",
      "explanation": "Opera, firefox, chrome and internet explorer are different kinds of browsers. Out of which audio file format named wav is not supported by internet explorer.",
      "options": [
        {
          "text": "Opera",
          "correct": false
        },
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Chrome",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns the volume of the audio/video.",
      "explanation": "Src attribute gives current source of audio/video element. The videoTrack list is returned representing available video tracks by video track attribute. Volume attribute sets the current volume of video/audio.",
      "options": [
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "volume controls",
          "correct": false
        },
        {
          "text": "volume",
          "correct": true
        },
        {
          "text": "video Tracks",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following attribute adds audio controls, like play, pause, and volume?",
      "explanation": "The audio attribute defines sound, such as music or other audio streams. Source attribute defines multiple media resources for media elements, such as <video> and <audio>. Src attribute gives current source of audio/video element. The controls attribute is a boolean attribute. When present, it specifies that audio controls should be displayed.",
      "options": [
        {
          "text": "audio",
          "correct": false
        },
        {
          "text": "controls",
          "correct": true
        },
        {
          "text": "source",
          "correct": false
        },
        {
          "text": "src",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns whether the audio/video should start playing as soon as it is loaded.",
      "explanation": "Control attribute is used to set whether audio/video should display controls. AudioTrack list representing audio tracks is set by audio track. The autoplay attribute is a boolean attribute. When present, the audio will automatically start playing as soon as it can do so without stopping. A current src of audio/video is returned by currentSrc.",
      "options": [
        {
          "text": "controls",
          "correct": false
        },
        {
          "text": "audio Tracks",
          "correct": false
        },
        {
          "text": "autoplay",
          "correct": true
        },
        {
          "text": "currentSrc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ sets or returns whether the audio/video should start over again when finished.",
      "explanation": "The loop attribute is a boolean attribute. When present, it specifies that the audio will start over again, every time it is finished. With autoplay, it ensures whether video/audio should play immediately after loading page. Seeking returns whether user is currently seeking video/audio. Timeranges representing played parts of audio/video is set by played attribute.",
      "options": [
        {
          "text": "loop",
          "correct": true
        },
        {
          "text": "autoplay",
          "correct": false
        },
        {
          "text": "seeking",
          "correct": false
        },
        {
          "text": "played",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML Audio/Video DOM __________ returns a MediaError object representing the error state of the audio/video.",
      "explanation": "Seeking returns whether user is currently seeking video/audio. Ended attribute fires up when current playing playlist is finished. The error property returns a MediaError object. The MediaError object has a code property containing the error state of the audio/video. The group to which audio/video belongs is returned by mediaGroup.",
      "options": [
        {
          "text": "ended",
          "correct": false
        },
        {
          "text": "seeking",
          "correct": false
        },
        {
          "text": "error",
          "correct": true
        },
        {
          "text": "mediaGroup",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " In HTML Audio/Video DOM __________ returns a TextTrackList object representing the available text tracks.",
      "explanation": "The current ready state of video/audio is set by readyState. StartDate sets current date representing current time offsets. VideoTrack returns video track list representing available video tracks. The textTracks property returns a TextTrackList object. The TextTrackList object represents the available text tracks for the audio/video. Each available text track is represented by an TextTrack Object.",
      "options": [
        {
          "text": "readyState",
          "correct": false
        },
        {
          "text": "startDate",
          "correct": false
        },
        {
          "text": "videoTracks",
          "correct": false
        },
        {
          "text": "textTracks",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element represents a thematic break rather than a horizontal rule, though that is the likely representation?",
      "explanation": "The <dd> & <dt> tag defines names/terms. <menu> tag in HTML is for list of commands. The hr tag defines a thematic break in an HTML page (e.g. a shift of topic). Thematic is break between paragraph-level elements.",
      "options": [
        {
          "text": "<dd>",
          "correct": false
        },
        {
          "text": "<dt>",
          "correct": false
        },
        {
          "text": "<hr>",
          "correct": true
        },
        {
          "text": "<menu>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element was redefined to represent user interface menus, including context menus?",
      "explanation": "<dt> tag defines terms/names. The <hr> tag is used for thematic break between paragraph-level. <ul> tag is used to represent list of items/objects. <menu> tag in HTML is for list of commands. The menu tag is used for context menus, toolbars and for listing form controls and commands.",
      "options": [
        {
          "text": "<ul>",
          "correct": false
        },
        {
          "text": "<dt>",
          "correct": false
        },
        {
          "text": "<hr>",
          "correct": false
        },
        {
          "text": "<menu>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following HTML 4 attributes is not removed in HTML5?",
      "explanation": "Mark attribute is still used in HTML5 but rest of attributes i.e. text, rules, link are deprecated in HTML5.",
      "options": [
        {
          "text": "text",
          "correct": false
        },
        {
          "text": "rules",
          "correct": false
        },
        {
          "text": "link",
          "correct": false
        },
        {
          "text": "mark",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element is not removed by HTML5?",
      "explanation": "A <span> element (used to color a part of a text) is still used in HTML5. Elements like vlink, marginwidth and compact has been removed in HTML5, which were part of HTML markup. In earlier they have been deprecated.",
      "options": [
        {
          "text": "vlink",
          "correct": false
        },
        {
          "text": "span",
          "correct": true
        },
        {
          "text": "marginwidth",
          "correct": false
        },
        {
          "text": "compact",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a newly added element in HTML5?",
      "explanation": "An article tag is semantic element newly introduced in HTML5 along with nav and audio. Frameset was already introduced in HTML markup used to divide window/web page in frames.",
      "options": [
        {
          "text": "article",
          "correct": false
        },
        {
          "text": "audio",
          "correct": false
        },
        {
          "text": "nav",
          "correct": false
        },
        {
          "text": "frameset",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "____________ defines the accelerator key to be used for keyboard access to an element.",
      "explanation": "Command tag specifies a command provided with action. When one want to provide parentheses around ruby text, rp tag is used. The accesskey attribute specifies a shortcut key to activate/focus an element. Data-X stores data.",
      "options": [
        {
          "text": "data-X",
          "correct": false
        },
        {
          "text": "accesskey",
          "correct": true
        },
        {
          "text": "rp",
          "correct": false
        },
        {
          "text": "command",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element represents the header of a section or the document and contains a label or other heading information for the related content?",
      "explanation": "Data-X element consist of data. The mark element indicates highlighted/marked text. The header element represents a container for introductory content or a set of navigational links.",
      "options": [
        {
          "text": "data-X",
          "correct": false
        },
        {
          "text": "header",
          "correct": true
        },
        {
          "text": "mark",
          "correct": false
        },
        {
          "text": "meter",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element sets is an item of metadata?",
      "explanation": "Itemscope is a boolean global attribute that defines the scope of associated metadata. The itemscope attribute creates a new item, a group of name-value pairs. The URL of vocabulary is specified by itemtype global attribute. List of element ID’s is provided by itemref.",
      "options": [
        {
          "text": "itemscope",
          "correct": true
        },
        {
          "text": "itemref",
          "correct": false
        },
        {
          "text": "itemtype",
          "correct": false
        },
        {
          "text": "none of the mentioned",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "_____________ defines a group of content that should be used as a figure and may be labeled by a legend element.",
      "explanation": "The aside tag contains data related to its surrounding. <output> is result of anything. The figure tag specifies self-contained content, like illustrations, diagrams, photos, code listings, etc. Additional details that someone wants to know or hide as per demand are provided by details element.",
      "options": [
        {
          "text": "figure",
          "correct": true
        },
        {
          "text": "details",
          "correct": false
        },
        {
          "text": "output",
          "correct": false
        },
        {
          "text": "aside",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute specifies a unique alphanumeric identifier to be associated with an element?",
      "explanation": "HTML is Hyper Text Markup Language which is used to create web pages and applications. The id attribute is most used to point to a style in a style sheet, and by JavaScript (via the HTML DOM) to manipulate the element with the specific id. Class is a name given to HTML elements which can be used by CSS and JavaScript for styling the web pages. A self-contained content is called attribute.",
      "options": [
        {
          "text": "class",
          "correct": false
        },
        {
          "text": "id",
          "correct": true
        },
        {
          "text": "article",
          "correct": false
        },
        {
          "text": "html",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The _____________ attribute specifies an inline style associated with an element, which determines the rendering of the affected element.",
      "explanation": "Style attribute specifies an inline style for an element. The style attribute will override any style set globally, e.g. styles specified in the style tag or in an external style sheet. A self-contained content is called attribute. Class is a name given to HTML elements which can be used by CSS and JavaScript for styling the web pages. List of directory files is given by dir tag which is not supported in HTML5.",
      "options": [
        {
          "text": "dir",
          "correct": false
        },
        {
          "text": "style",
          "correct": true
        },
        {
          "text": "class",
          "correct": false
        },
        {
          "text": "article",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute is used to provide an advisory text about an element or its contents?",
      "explanation": "The extra information about an element is specified by title tag. The information is most often shown as a tooltip text when the mouse moves over the element. List of directory files is given by dir tag which is not supported in HTML5. Tooltip or else infotip is a graphical user interface of an element. Container of metadata is called head.",
      "options": [
        {
          "text": "tooltip",
          "correct": false
        },
        {
          "text": "dir",
          "correct": false
        },
        {
          "text": "title",
          "correct": true
        },
        {
          "text": "head",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ attribute sets the text direction as related to the lang attribute.",
      "explanation": "The dir attribute specifies the text direction of the element’s content. List of directory files is given by dir tag which is not supported in HTML5. The language of an element’s content is given by lang attribute. The subscript text is defined by sub attribute.",
      "options": [
        {
          "text": "lang",
          "correct": false
        },
        {
          "text": "sub",
          "correct": false
        },
        {
          "text": "dir",
          "correct": true
        },
        {
          "text": "ds",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the attribute that specifies the column name from the data source object that supplies the bound data?",
      "explanation": "DataFormatAs specifies how data is rendered. The identifier for data source is set by dataSrc. Datafld attribute specifies the column name from the data source object that supplies the bound data. This attribute is specific to Microsoft’s data binding. A Disabled is a boolean attribute which specifies that <input> element should be disabled.",
      "options": [
        {
          "text": "dataFormatAs",
          "correct": false
        },
        {
          "text": "datafld",
          "correct": true
        },
        {
          "text": "disabled",
          "correct": false
        },
        {
          "text": "datasrc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the attribute that indicates the name of the data source object that supplies the data that is bound to this element?",
      "explanation": "The identifier for data source is set by dataSrc. When the dataSrc property is applied to a tabular data consumer, the entire data set is repeated by the consuming elements. DataFormatAs specifies how data is rendered. A Disabled is a boolean attribute which specifies that <input> element should be disabled.",
      "options": [
        {
          "text": "dataFormatAs",
          "correct": false
        },
        {
          "text": "datafld",
          "correct": false
        },
        {
          "text": "disabled",
          "correct": false
        },
        {
          "text": "datasrc",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the attribute that specifies additional horizontal space, in pixels, to be reserved on either side of an embedded item like an iframe, applet, image, and so on?",
      "explanation": "Height of element is pixels is specified by height attribute. The hspace attribute specifies the whitespace on left and right side of an object. The hidefocus specifies whether a focused rectangle is drawn around an object. The identifier for data source is set by dataSrc.",
      "options": [
        {
          "text": "height",
          "correct": false
        },
        {
          "text": "hspace",
          "correct": true
        },
        {
          "text": "hidefocus",
          "correct": false
        },
        {
          "text": "datasrc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The accesskey attribute specifies a keyboard navigation accelerator for the element.",
      "explanation": "The accesskey attribute specifies a shortcut key to activate/focus an element. It specifies a keyboard navigation accelerator for the element. We can use accesskey attribute in forms or links.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the attribute that is used to set a global identifier for a microdata item?",
      "explanation": "The unique id for an element in html is specified by id attribute. Itemmid allows a vocabulary to define a global identifier for a microdata item, for example an ISBN number on a book. Use itemid on the same element as the item’s itemscope and itemtype attributes.",
      "options": [
        {
          "text": "key",
          "correct": false
        },
        {
          "text": "id",
          "correct": false
        },
        {
          "text": "itemclass",
          "correct": false
        },
        {
          "text": "itemid",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is the attribute that is used to add a name/value pair to a microdata item?",
      "explanation": "A boolean global attribute which specifies scope of associated metadata is itemscope. Itemmid is unique global identifier of item. To add a property to an item, the itemprop attribute is used on one of the item’s descendants. Markup without the microdata-related attributes does not have any effect on the microdata model. Itemref provides list of elements id’s with extra/additional properties in the document.",
      "options": [
        {
          "text": "itemscope",
          "correct": false
        },
        {
          "text": "itemref",
          "correct": false
        },
        {
          "text": "itemprop",
          "correct": true
        },
        {
          "text": "itemid",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What does wrap attribute denote?",
      "explanation": "wrap is the attribute of <textarea> element and it indicates whether the text should be wrapped. Syntax: <textarea wrap=””> if we use wrap=”hard” it will contain newlines in the submission of a form. This attribute is newly introduced by HTML5 and is supported by all the browsers.",
      "options": [
        {
          "text": "Whether the text is in bold",
          "correct": false
        },
        {
          "text": "Whether the text is wrapped",
          "correct": true
        },
        {
          "text": "Whether the text is in italics",
          "correct": false
        },
        {
          "text": "Whether the text is highlighted",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "With which element width attribute is not define?",
      "explanation": "width attribute is defined with <object>, <iframe>, <img>, <video>, <canvas>, <embed>, <input>. <textarea> is used commonly with autofocus, cols, dirname, disabled, form, maxlength, minlength, name, placeholder, readonly, rows and many other attributes.",
      "options": [
        {
          "text": "<input>",
          "correct": false
        },
        {
          "text": "<object>",
          "correct": false
        },
        {
          "text": "<embed>",
          "correct": false
        },
        {
          "text": "<textarea>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines a default value on page load?",
      "explanation": "<button>, <li>, <progress>, <param>, <meter>, <input>, <option> are some elements used with value attribute and defines a default value on the page load. <object> element is used with many attributes like border, data, form, height etc. <area> is used with attributes like alt, cords, download, href, hreflang and many more.",
      "options": [
        {
          "text": "<object>",
          "correct": false
        },
        {
          "text": "<input>",
          "correct": false
        },
        {
          "text": "<progress>",
          "correct": true
        },
        {
          "text": "<area>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How title attribute works?",
      "explanation": "the title is a global attribute that displays text in a tooltip when hovered over the element. Syntax is:\n<p><abbr title=”Indian Association Service”>IAS</abbr> is India’s one of the most difficult job.</p>\nOutput: IAS is India’s one of the most difficult job.\n",
      "options": [
        {
          "text": "Displays text when hovering over the element",
          "correct": true
        },
        {
          "text": "Focus text when hovering over the element",
          "correct": false
        },
        {
          "text": "Highlight text when hovering over the element",
          "correct": false
        },
        {
          "text": "Zoom in and zoom out text when hovering over the element",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute is not for overriding the actions?",
      "explanation": "formaction is used for overriding <form> action, style is a global attribute that overrides previously set styles, tabindex is also a global attribute which overrides default tab order. A slot is a global attribute which assigns a slot in a shadow.",
      "options": [
        {
          "text": "Formaction",
          "correct": false
        },
        {
          "text": "Style",
          "correct": false
        },
        {
          "text": "Tabindex",
          "correct": false
        },
        {
          "text": "Slot",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "srclang attribute is used with the element ____________",
      "explanation": "srclang attribute is used with <track>. It specifies the language of text. E.g <track src=”xyz.ogg” srclang=”en” label=”English”>, <input> is used with many attributes like accept, alt, async, autocomplete, autofocus, checked, dirname, disabled, form, formaction, height, list and many more.",
      "options": [
        {
          "text": "<track>",
          "correct": true
        },
        {
          "text": "<input>",
          "correct": false
        },
        {
          "text": "<iframe>",
          "correct": false
        },
        {
          "text": "<table>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the use of spellcheck attribute?",
      "explanation": "spellcheck is a global attribute, it indicates if spell checking is allowed or not for the element. Syntax is\n<p contenteditable=”true” spellcheck=”true”> William Shakespeare was a great novelist. </p>\nOutput:\n\nWilliam Shakespeare was a great novelist.\n",
      "options": [
        {
          "text": "Checks spelling",
          "correct": false
        },
        {
          "text": "Indicates if spell checking is allowed",
          "correct": true
        },
        {
          "text": "Checks spelling and corrects it",
          "correct": false
        },
        {
          "text": "Checks spelling of a given particular text only",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which parameter is commonly used for size attribute?",
      "explanation": "Size is an attribute commonly used with <input> and <select> element, it defines the width of element in pixels. If we have password or text as attribute then it will be count number of characters. Sizes is a attribute use with <link>, <source>, <img>",
      "options": [
        {
          "text": "centimeter",
          "correct": false
        },
        {
          "text": "pixels",
          "correct": true
        },
        {
          "text": "inch",
          "correct": false
        },
        {
          "text": "millimeter",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute indicates a descending order of displaying a list?",
      "explanation": "Reverse attribute commonly use with <ol> element. It indicates that if the list is to be displayed in descending order instead of ascending order or not. There is no reference for options like forward, straight and circular in HTML.",
      "options": [
        {
          "text": "reversed",
          "correct": true
        },
        {
          "text": "forward",
          "correct": false
        },
        {
          "text": "straight",
          "correct": false
        },
        {
          "text": "circular",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " The major difference between minlength and min attribute is ______",
      "explanation": "minlength attribute use with <input>, <textarea> elements and it defines minimum number of character allowed. Min is used with <input>, <meter> elements and indicates minimum value allowed in element.",
      "options": [
        {
          "text": "‘minlength’ is for the minimum number of characters and ‘min’ is for the minimum value",
          "correct": true
        },
        {
          "text": "‘minlength’ is for the minimum value and ‘min’ is for the minimum number of characters",
          "correct": false
        },
        {
          "text": "‘minlength’ is for multiple values and ‘min’ is for the single value",
          "correct": false
        },
        {
          "text": "‘minlength’ is for single value and ‘minlength’ is for multiple values",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " loop attribute is not used with _____________",
      "explanation": "loop attribute is commonly use with <audio>, <bgsound>, <video>, <marquee> and denotes whether the media should start playing from the beginning when it is finished. <track> element is use with default attribute and it checks whether the track is enabled or not.",
      "options": [
        {
          "text": "<audio>",
          "correct": false
        },
        {
          "text": "<marquee>",
          "correct": false
        },
        {
          "text": "<video>",
          "correct": false
        },
        {
          "text": "<track>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " How does download attribute work?",
      "explanation": " Download attribute basically use by <a> and <area> elements. It shows the hyperlink is to be used to download a resource when user clicks on it.",
      "options": [
        {
          "text": "An indication that hyperlink is to be used for downloading",
          "correct": true
        },
        {
          "text": "Directly downloads as per the need of the user",
          "correct": false
        },
        {
          "text": "Gives various source links to download",
          "correct": false
        },
        {
          "text": "List the topics which one can download from a certain page",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " datetime attribute is not related with ______________",
      "explanation": " datetime shows the date and time related with the element. Commonly use with <del>, <time>, <ins> elements. <del> is use with cite attribute, <ins> is also use with cite attribute, <form> element is use with various attributes like accept, action, accept-charset etc.",
      "options": [
        {
          "text": "<del>",
          "correct": false
        },
        {
          "text": "<time>",
          "correct": false
        },
        {
          "text": "<ins>",
          "correct": false
        },
        {
          "text": "<form>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "  cols attribute is use with ___________",
      "explanation": "cols indicates number of columns in a certain textarea, use with <textarea> element. <td> element is use with align attribute, <th> is also use with align attribute, <ol> is basically use with reversed attribute.",
      "options": [
        {
          "text": "<td>",
          "correct": false
        },
        {
          "text": "<th>",
          "correct": false
        },
        {
          "text": "<textarea>",
          "correct": true
        },
        {
          "text": "<ol>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "  Use of checked attribute is ____________",
      "explanation": "checked is use with <command>, <input> elements and it indicates if element is checked on loading of the page or not.",
      "options": [
        {
          "text": "Whether on page load element should be checked",
          "correct": true
        },
        {
          "text": "Whether on page load all form element should be checked",
          "correct": false
        },
        {
          "text": "Whether on page load all list element should be checked",
          "correct": false
        },
        {
          "text": "Whether on page load all multimedia elements should be checked",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Syntax of entity declaration is ___________",
      "explanation": "Character entity reference declaration is done by syntax <!entity name “value”> in HTML and in XML.  This syntax is define in Document Type Definiton(DTD).",
      "options": [
        {
          "text": "<!entity name “value”>",
          "correct": true
        },
        {
          "text": "<entity name “value”!>",
          "correct": false
        },
        {
          "text": "<”value” entity name>",
          "correct": false
        },
        {
          "text": "<!”value” entity name>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the correct format of numeric character reference?",
      "explanation": "Numeric character reference uses the format &#nnnn, nnnn represents decimal format. We can also use hhhh in place of nnnn for hexadecimal form and its syntax will be like &#xhhhh; In XML documents use &#xnnnn; semicolon is mandatory.",
      "options": [
        {
          "text": "&nnnn;",
          "correct": false
        },
        {
          "text": "&#nnnn;",
          "correct": true
        },
        {
          "text": "#nnnn;",
          "correct": false
        },
        {
          "text": "$*nnnn;",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the format for character entity reference?",
      "explanation": "The format for character entity reference is &name; name is case-sensitive alphanumeric string and semicolon is necessary.",
      "options": [
        {
          "text": "&name;",
          "correct": true
        },
        {
          "text": "$name;",
          "correct": false
        },
        {
          "text": "%name;",
          "correct": false
        },
        {
          "text": "!name;",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For entity which term is used by XML?",
      "explanation": "“character entity reference” term is not used by XML instead XML defines five “predefined entities” which are & [&], < [<], > [>], \" [“] and ' [‘].",
      "options": [
        {
          "text": " character entity reference",
          "correct": false
        },
        {
          "text": "numeric character reference",
          "correct": false
        },
        {
          "text": "predefined entities",
          "correct": true
        },
        {
          "text": "character and numeric entity reference",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which entity is not defined in XML?",
      "explanation": " There is only five entity in XML that are predefined and those are quot, It, gt, apos, amp. Copy is used in HTML, quot, apos, gt was first introduced by XHTML 1.0. Copy was first introduced by HTML 3.2. Unicode code point for copy is U+00A9.",
      "options": [
        {
          "text": "quot",
          "correct": false
        },
        {
          "text": "apos",
          "correct": false
        },
        {
          "text": "gt",
          "correct": false
        },
        {
          "text": "copy",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which entity is not for both HTML and XML?",
      "explanation": "cent is only HTML character entity. Other entities like quot, lt, gt, apos, amp are for the use of both HTML and XML. The Unicode point in Hex for apos is U+0027, for lt is U+003C, for cent is U+00A2, for quot is U+0022.",
      "options": [
        {
          "text": "apos",
          "correct": false
        },
        {
          "text": "It?",
          "correct": false
        },
        {
          "text": "cent",
          "correct": true
        },
        {
          "text": "quot",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which entity is not for punctuation character?",
      "explanation": "&acute is character entity and denote small a of latin language. &quot, &para, &not are punctuation character entities. Number representation of &quot is &#34, &para is &#182, &not is &#172, &acute is &#180.",
      "options": [
        {
          "text": "&quot",
          "correct": false
        },
        {
          "text": "&para",
          "correct": false
        },
        {
          "text": "&not",
          "correct": false
        },
        {
          "text": "&acute",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not character entity?",
      "explanation": "&image is used for imaginary part. &aelig, &aring, &ecirc are all punctuation character. We represents &aelig by the number &#230, &aring by &#229, &image is by &#8465, &ecirc by &#234.",
      "options": [
        {
          "text": "&aelig",
          "correct": false
        },
        {
          "text": "&aring",
          "correct": false
        },
        {
          "text": "&image",
          "correct": true
        },
        {
          "text": "&ecirc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which entity is for the arrow?",
      "explanation": "&crarr represents a downwards arrow with corner leftwards. &zeta is for greek small letter zeta, &upsih is for greek upsilon, &oelig is for latin small letter o. Number for &crarr is &#8629, for &zeta is &#950, for &upsih is &#978, for &oelig is &#339.",
      "options": [
        {
          "text": "&crarr",
          "correct": true
        },
        {
          "text": "&zeta",
          "correct": false
        },
        {
          "text": "&upsih",
          "correct": false
        },
        {
          "text": "&oelig",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which entity is not for shape?",
      "explanation": "&harr is for left right arrow, &clubs for club suit, &hearts for heart suit, &spades for spade suit. Number representation of &harr is &#8596, &clubs is &#9827, &hearts is &#9830, &spades is &#9824.",
      "options": [
        {
          "text": "&harr",
          "correct": true
        },
        {
          "text": "&clubs",
          "correct": false
        },
        {
          "text": "&hearts",
          "correct": false
        },
        {
          "text": "&spades",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "  Which of the following entity is for shape?",
      "explanation": "&loz is for the shape lozenge, &uarr is for upward arrow, &rarr for rightwards arrow, &larr for leftwards double arrow. The number for &uarr is &#8593, for &loz is &#9674, for &rarr is &#8594, for &larr is &#8592.",
      "options": [
        {
          "text": "&uarr",
          "correct": false
        },
        {
          "text": "&loz",
          "correct": true
        },
        {
          "text": "&rarr",
          "correct": false
        },
        {
          "text": "&larr",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which entity is for inverted question mark?",
      "explanation": "For inverted question mark we used &iquest, &oline is for overline, &permil is for per mille, &prime is for feet sign. In number &iquest is &#191, &olin is &#8254, &permil is &#8240, &prime is &#8242.",
      "options": [
        {
          "text": "&iquest",
          "correct": true
        },
        {
          "text": "&oline",
          "correct": false
        },
        {
          "text": "&permil",
          "correct": false
        },
        {
          "text": "&prime",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For trade mark sign which entity is used?",
      "explanation": "We used &trade for the trademark sign, &shy is used for soft hyphen, &sect for section sign, &real for real part symbol. In number &shy is denoted by &#173, &trade by &#8482, &sect by &#167, &real by &#8476.",
      "options": [
        {
          "text": "&shy",
          "correct": false
        },
        {
          "text": "&trade",
          "correct": true
        },
        {
          "text": "&sect",
          "correct": false
        },
        {
          "text": "&real",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For latin letter u with acute which entity is used?",
      "explanation": "&uacute defines latin letter u with acute, &ucirc is for u with circumflex, &ugrave is for u with a grave.",
      "options": [
        {
          "text": "&ucirc",
          "correct": false
        },
        {
          "text": "&ugrave",
          "correct": false
        },
        {
          "text": "&ucirc",
          "correct": false
        },
        {
          "text": "&uacute",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For upward double arrow which entity is used?",
      "explanation": "&uArr is used for an upwards double arrow, &uarr is for upwards arrow, &rarr for rightwards arrow, &darr for downwards arrow.",
      "options": [
        {
          "text": "&uArr",
          "correct": true
        },
        {
          "text": "&uarr",
          "correct": false
        },
        {
          "text": "&rarr",
          "correct": false
        },
        {
          "text": "&darr",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How many standard color names does HTML supports?",
      "explanation": "In HTML one can use a color name to specify a color e.g. Tomato, Orange, DodgerBlue, MediumSeaGreen, Gray, SlateBlue, Violet, LightGray etc. For colored fonts, we used text-decoration property to set the color of the text.",
      "options": [
        {
          "text": "120",
          "correct": false
        },
        {
          "text": "130",
          "correct": false
        },
        {
          "text": "140",
          "correct": true
        },
        {
          "text": "90",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not set with font-style property?",
      "explanation": "Text-transform: capitalize, capitalizes the first letter of each word whereas font-style set font as normal, italic, oblique. We use text-transform: uppercase and text-transform: lowercase to change the text from lowercase to uppercase and from uppercase to lowercase respectively.",
      "options": [
        {
          "text": "font-style: normal",
          "correct": false
        },
        {
          "text": "font-style: italic",
          "correct": false
        },
        {
          "text": "font-style: oblique",
          "correct": false
        },
        {
          "text": "font-style: capitalize",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What should be set with text-align property so that every line has equal width like in magazines and newspapers?",
      "explanation": "By setting text-align property to “justify”, each line is stretched so that every line has equal width, left and right margins are straight like in magazines and newspapers. Text-align: center, text-align: right, text-align: left is also used for aligning the text at center, right and left respectively.",
      "options": [
        {
          "text": "text-align: justify",
          "correct": true
        },
        {
          "text": "text-align: none",
          "correct": false
        },
        {
          "text": "text-align: bottom",
          "correct": false
        },
        {
          "text": "text-align: top",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not used with text-decoration property?",
      "explanation": "overline, underline, line-through properties are used to decorate the text.\nSyntax: \nh1{text-decoration: line-through; }, \nh2 {text-decoration: overline ;}, \nh3{text-decoration: underline;}\nit will produce headings h1 with text having line-through, h2 with text having overline and h3 with text having underline.\n",
      "options": [
        {
          "text": "overline",
          "correct": false
        },
        {
          "text": "underline",
          "correct": false
        },
        {
          "text": "line-through",
          "correct": false
        },
        {
          "text": "inline",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which works similar to <i> element?",
      "explanation": "<strong> element shows the importance of text/paragraph between it’s tags. <b></b> makes text bolder. A section which is quoted from another source is specified by <blockquote>. <em> element indicates emphasis, browser will show the contents of <em> element in italic.\n<p>I <em>like</em> dog.</p>\nOutput: I like dog.\n",
      "options": [
        {
          "text": "<strong>",
          "correct": false
        },
        {
          "text": "<em>",
          "correct": true
        },
        {
          "text": "<b>",
          "correct": false
        },
        {
          "text": "<blockquote>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which works similar to <b> element?",
      "explanation": "The words written inside <strong> can be said with strong emphasis. Browser shows contents written inside <strong> element in bold.\n<p><strong>Dog is</strong> an animal.</p>\nOutput: Dog is an animal.\n",
      "options": [
        {
          "text": "<strong>",
          "correct": true
        },
        {
          "text": "<em>",
          "correct": false
        },
        {
          "text": "<i>",
          "correct": false
        },
        {
          "text": "<blockquote>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used for short quote?",
      "explanation": "<em> element indicates emphasis, browser will show the contents of <em> element in italic. A section which is quoted from another source is specified by <blockquote>. The <abbr> defines abbreviation. We used <q> element for shorter quote. Browser put quote around <q> element.\n<p>This is a <q>black dog</q>.</p>\nOutput: This is a “black dog”.\n",
      "options": [
        {
          "text": "<q>",
          "correct": true
        },
        {
          "text": "<blockquote>",
          "correct": false
        },
        {
          "text": "<em>",
          "correct": false
        },
        {
          "text": "<abbr>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used for abbreviation or acronym?",
      "explanation": " <em> element indicates emphasis, browser will show the contents of <em> element in italic. We used <q> element for shorter quote. Browser put quote around <q> element. A section which is quoted from another source is specified by <blockquote>. For using, abbreviation or acronym <abbr> element is helpful. A title element is to be used with abbr.\n<p>The <abbr title=”Doctor”>Dr.</abbr> is on the way.</p>\nOutput: The Dr. is on the way.\n",
      "options": [
        {
          "text": "<em>",
          "correct": false
        },
        {
          "text": "<q>",
          "correct": false
        },
        {
          "text": "<abbr>",
          "correct": true
        },
        {
          "text": "<blockquote>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the work of <address> element?",
      "explanation": "The contact details for author of a page is specified by <address> attribute. The content is often displayed in italics,\ne.g. \n<address>\n<a href=\"mailto:enquiry@sanfoundry.com\">Sanfoundry</a>\n</address>\nOutput:\nSanfoundry\n",
      "options": [
        {
          "text": "contains contact details for author",
          "correct": true
        },
        {
          "text": "contains IP address",
          "correct": false
        },
        {
          "text": "contains home address",
          "correct": false
        },
        {
          "text": "contains url",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " To show deleted text, which element is used?",
      "explanation": "<strong> element shows the importance of text/paragraph between it’s tags. <em> element indicates emphasis, browser will show the contents of <em> element in italic. <ins> element shows the content that has been inserted, usually it has underline. <del> element shows text that has been deleted from, usually it has a line through the content.\n<p>This is <del>not</del> for deletion </p>\nOutput: This is not for deletion.\n",
      "options": [
        {
          "text": "<ins>",
          "correct": false
        },
        {
          "text": "<del>",
          "correct": true
        },
        {
          "text": "<em>",
          "correct": false
        },
        {
          "text": "<strong>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element is used to show inserted element?",
      "explanation": "<del> element shows text that has been deleted from, usually it has a line through the content. <strong> element shows the importance of text/paragraph between it’s tags. <em> element indicates emphasis, browser will show the contents of <em> element in italic. <ins> element shows the content that has been inserted, usually it has underline.\n<p>This is the <ins>inserted </ins> element.</p>\nOutput: This is the inserted element.\n",
      "options": [
        {
          "text": "<ins>",
          "correct": true
        },
        {
          "text": "<del>",
          "correct": false
        },
        {
          "text": "<strong>",
          "correct": false
        },
        {
          "text": "<em>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " How <bdo> element works?",
      "explanation": "For bidirectional override of current text direction, we used <bdo> element, e.g. <bdo dir=”rtl”>Text is right to left</bdo>. This element was already there before HTML5. It is supported by all the browsers.",
      "options": [
        {
          "text": "override text direction",
          "correct": true
        },
        {
          "text": "stops writing in the current text direction",
          "correct": false
        },
        {
          "text": "only override direction of rtl text",
          "correct": false
        },
        {
          "text": "only changes the direction of ltr text",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which property is similar to C/C++ can be applied to comments?",
      "explanation": "We can add conditional comments in our web page using if and endif, e.g. <!–[if age 9]>..text….<![endif]–>, there is no provision of “for” or “while” loop in HTML, same apply with switch case also.",
      "options": [
        {
          "text": "for loop",
          "correct": false
        },
        {
          "text": "while loop",
          "correct": false
        },
        {
          "text": "ifelse",
          "correct": true
        },
        {
          "text": "switch case",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element defines a title of the Work?",
      "explanation": "For using, abbreviation or acronym <abbr> element is helpful. The contact details for author of a page is specified by <address> attribute. A section which is quoted from another source is specified by <blockquote>. The tittle of a Work is defined by <cite> elements, usually it displays in italics.\n<p><cite>Hamlet</cite> by William Shakespeare</p>\nOutput: Hamlet by William Shakespeare.\n",
      "options": [
        {
          "text": "<abbr>",
          "correct": false
        },
        {
          "text": "<cite>",
          "correct": true
        },
        {
          "text": "<address>",
          "correct": false
        },
        {
          "text": "<blockquote>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For smaller text which element is used?",
      "explanation": "min is an attribute for input method for inserting minimum value. smaller text is define by <small>element. <em> is used for emphasis usually it is display in italics.\n<p>This is text in <small>small</small>.</p>\nOutput: This is text in small.\n",
      "options": [
        {
          "text": "<tiny>",
          "correct": false
        },
        {
          "text": "<min>",
          "correct": false
        },
        {
          "text": "<small>",
          "correct": true
        },
        {
          "text": "<em>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "All attribute declarations begin with the keyword ____________ followed by the element name, attribute name, attribute type, and default data information.",
      "explanation": "The ATTLIST declarations identify which element types may have attributes, what type of attributes they may be, and what the default value of the attributes are. Syntax is  <!ATTLIST  elementName  attributeName  dataType  default >.  XML and HTML are web markup language used to design and create web pages. SGML stands for Standard Generalized Markup Language.",
      "options": [
        {
          "text": "XML",
          "correct": false
        },
        {
          "text": "SGML",
          "correct": false
        },
        {
          "text": "ATTLIST",
          "correct": true
        },
        {
          "text": "HTML",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ________ declaration specifies which characters and delimiters may appear in the application.",
      "explanation": "XML(Extensible Markup Language) and HTML(Hypertext Markup Language) are web markup language used to design and create web pages. The DTD defines the syntax of markup constructs. SGML (Standard Generalized Markup Language) is a standard for how to specify a document markup language or tag set. Such a specification is itself a document type definition (DTD). SGML is metadata.",
      "options": [
        {
          "text": "DTD",
          "correct": false
        },
        {
          "text": "SGML",
          "correct": true
        },
        {
          "text": "XML",
          "correct": false
        },
        {
          "text": "HTML",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ defines the syntax of markup constructs and include additional definitions such as character entity references.",
      "explanation": "SGML (Standard Generalized Markup Language) is a standard for how to specify a document markup language or tag set. Property of an element is defined by the attribute. The DTD defines the syntax of markup constructs. The DTD may include additional definitions such as character entity references.",
      "options": [
        {
          "text": "Attributes",
          "correct": false
        },
        {
          "text": "SGML",
          "correct": false
        },
        {
          "text": "Elements",
          "correct": false
        },
        {
          "text": "DTD",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "A/An _________ is essentially a macro that allows a short name to be associated with the replacement text.",
      "explanation": "Comments are used to provide idea about coding syntax which is ignored by the browser.  Reserved characters in HTML must be replaced with character entities. Characters, not present on your keyboard, can also be replaced by entities. Property of an element is defined by the attribute.",
      "options": [
        {
          "text": "Entity",
          "correct": true
        },
        {
          "text": "Attribute",
          "correct": false
        },
        {
          "text": "Comment",
          "correct": false
        },
        {
          "text": "Element",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ___________ keyword begins the declaration of attributes that an element may take. It is followed by the name of the element in question, a list of attribute definitions, and a closing.",
      "explanation": "The ATTLIST declarations identify which element types may have attributes, what type of attributes they may be, and what the default value of the attributes are. The DTD defines the syntax of markup constructs. The DTD may include additional definitions such as character entity references. SGML (Standard Generalized Markup Language) is a standard for how to specify a document markup language or tag set. In HTML 4.01, the !DOCTYPE declaration refers to a DTD, because HTML 4.01 was based on SGML. The DTD specifies the rules for the markup language so that the browsers render the content correctly.",
      "options": [
        {
          "text": "DOCTYPE",
          "correct": true
        },
        {
          "text": "ATTLIST",
          "correct": false
        },
        {
          "text": "DTD",
          "correct": false
        },
        {
          "text": "SGML",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The __________ begins with a series of parameter entity definitions.",
      "explanation": "SGML (Standard Generalized Markup Language) is a standard for how to specify a document markup language or tag set. XML and HTML are web markup language used to design and create web pages. The HTML DTD begins with a series of parameter entity definitions. A parameter entity definition defines a kind of macro that may be referenced and expanded elsewhere in the DTD. These macros may not appear in HTML documents, only in the DTD. Other types of macros, called character references, may be used in the text of an HTML document or within attribute values.",
      "options": [
        {
          "text": "DTD",
          "correct": true
        },
        {
          "text": "SGML",
          "correct": false
        },
        {
          "text": "XML",
          "correct": false
        },
        {
          "text": "HTML",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The ______________ parameter identifies a character encoding, which is a method of converting a sequence of bytes into a sequence of characters.",
      "explanation": "Class is an attribute and can be used on any HTML element. Property of an element is defined by attribute. To display an HTML page correctly, a web browser must know the character set (character encoding) to use. @charset “UTF-8”; is a string.",
      "options": [
        {
          "text": "class",
          "correct": false
        },
        {
          "text": "element",
          "correct": false
        },
        {
          "text": "charset",
          "correct": true
        },
        {
          "text": "attribute",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "A model group contains the names of the elements that a tag may enclose.",
      "explanation": "Most HTML and XHTML elements enclose content. If a content model is declared, it is enclosed within parentheses and known as a model group.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines a part of text that might be formatted in a different direction from other text?",
      "explanation": "The additional details the user wants to know as per the demand is fulfilled by <details> tag. Content related to surroundings is given by <aside> tag. <bdi> element is useful when embedding user-generated content with an unknown directional. <article> is self defined independent content which contains data which can be anything including photos, videos, and other contents. It provides a section.",
      "options": [
        {
          "text": "<details>",
          "correct": false
        },
        {
          "text": "<aside>",
          "correct": false
        },
        {
          "text": "<bdi>",
          "correct": true
        },
        {
          "text": "<article>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines a caption for a figure element?",
      "explanation": "The figcaption element can be placed as the first or last child of the figure element. It defines a caption for a figure element. Caption in a table immediately after <table> tag can be given by <caption> tag. The <figure> tag provides section for illustration, diagrams, photos etc. A box else window is defined by <dialog> tag in HTML.",
      "options": [
        {
          "text": "<figcaption>",
          "correct": true
        },
        {
          "text": "<dialog>",
          "correct": false
        },
        {
          "text": "<caption>",
          "correct": false
        },
        {
          "text": "<figure>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines a command/menu item that the user can invoke from a popup menu?",
      "explanation": "The menuitem tag is new in HTML5 and as of now is only supported in Firefox 8+ versions. <menuitem> defines a command item that the user can invoke from a popup menu. A list of of commands is defined by <menu> tag. <nav> is set of navigation links. One or more class names are specified by the global <class> attribute.",
      "options": [
        {
          "text": "<menuitem>",
          "correct": true
        },
        {
          "text": "<menu>",
          "correct": false
        },
        {
          "text": "<nav>",
          "correct": false
        },
        {
          "text": "<class>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following tag defines the progress of a task?",
      "explanation": "Scalar measurement within range or may be a fractional value can be displayed through <meter> tag. Use the progress tag in conjunction with JavaScript to display the progress of a task. <wbr> is used for whether it is okay to add a line break in a text.",
      "options": [
        {
          "text": "<meter>",
          "correct": false
        },
        {
          "text": "<progress>",
          "correct": true
        },
        {
          "text": "<gauge>",
          "correct": false
        },
        {
          "text": "<wbr>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines the result of a calculation?",
      "explanation": "The output tag represents the result of a calculation (like one performed by a script). <keygen> has been removed from HTML5 and it specifies a name to <keygen> element which refers to data after it’s submission. <datalist> is a list of pre-defined option for input element. The additional details the user wants to know as per the demand is fulfilled by <details> tag.",
      "options": [
        {
          "text": "<output>",
          "correct": true
        },
        {
          "text": "<keygen>",
          "correct": false
        },
        {
          "text": "<datalist>",
          "correct": false
        },
        {
          "text": "<datalist>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines graphic drawing using JavaScript?",
      "explanation": "One or more class names are specified by the global <class> attribute. The canvas tag is only a container for graphics, you must use a script to actually draw the graphics. <graphics> and <draw> are imaginary part.",
      "options": [
        {
          "text": "<class>",
          "correct": false
        },
        {
          "text": "<canvas>",
          "correct": true
        },
        {
          "text": "<graphics>",
          "correct": false
        },
        {
          "text": "<draw>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following elements in HTML5 defines video or movie content?",
      "explanation": "The media to which linked document is optimized is given by <media> tag.  Before HTML5, videos could only be played with a plug-in (like flash). The HTML5 video element specifies a standard way to embed a video in a web page. As like <video> elements, <audio> element contains additional files or streams like music, recording, etc.",
      "options": [
        {
          "text": "<media>",
          "correct": false
        },
        {
          "text": "<video>",
          "correct": true
        },
        {
          "text": "<movie>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines some content aside from the content it is placed in (like a sidebar)?",
      "explanation": "Content related to surroundings is given by <aside> tag. The aside content should be related to the surrounding content. An introductory content is represented by <header> element. The <nav> element contains list of navigation links.",
      "options": [
        {
          "text": "<aside>",
          "correct": true
        },
        {
          "text": "<header>",
          "correct": false
        },
        {
          "text": "<sidebar>",
          "correct": false
        },
        {
          "text": "<nav>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines a visible heading for a details element?",
      "explanation": "The main content of document is in <main>. <mark> is used to highlight the text to indicate it’s uniqueness. The summary tag defines a visible heading for the details element. The heading can be clicked to view/hide the details.",
      "options": [
        {
          "text": "<brief>",
          "correct": false
        },
        {
          "text": "<summary>",
          "correct": true
        },
        {
          "text": "<mark>",
          "correct": false
        },
        {
          "text": "<main>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following defines additional details that the user can view or hide?",
      "explanation": "The additional details the user wants to know as per the demand is fulfilled by <details> tag. The details tag can be used to create an interactive widget that the user can open and close. Any sort of content can be put inside the details tag. <article> is self defined independent content which contains data which can be anything including photos, videos, and other contents. It provides a section.  The <figure> tag provides section for illustration, diagrams, photos etc. Content related to surroundings is given by <aside> tag.",
      "options": [
        {
          "text": "<details>",
          "correct": true
        },
        {
          "text": "<article>",
          "correct": false
        },
        {
          "text": "<aside>",
          "correct": false
        },
        {
          "text": "<figure>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which event is fired as the mouse is moving over an element when a drag is occurring?",
      "explanation": "The dragover event is fired as the mouse is moving over an element when a drag is occurring. Much of the time, the operation that occurs during a listener will be the same as the dragenter event. When draggable element enters a drop target then dragenter event has occurred. A dragleave event occurs when it leaves the valid drop target. Whenever a user starts to drag an element, dragstart is fired.",
      "options": [
        {
          "text": "dragover",
          "correct": true
        },
        {
          "text": "dragenter",
          "correct": false
        },
        {
          "text": "dragstart",
          "correct": false
        },
        {
          "text": "dragleave",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The _________ event is fired on the element where the drop occurred at the end of the drag operation.",
      "explanation": "The drop event is fired on the element where the drop occurred at the end of the drag operation. A listener would be responsible for retrieving the data being dragged and inserting it at the drop location. Whenever user starts to drag an element, dragstart is fired. When draggable element enters a drop target then dragenter event is occurred. When element is being dragged, drag event is happened.",
      "options": [
        {
          "text": "drag",
          "correct": false
        },
        {
          "text": "drop",
          "correct": true
        },
        {
          "text": "dragstart",
          "correct": false
        },
        {
          "text": "dragenter",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following property is common in all drag events?",
      "explanation": "The feedback given by the user using drag and drop operation is done by drag effects. Drag data includes all the data needed for drag operation. The dataTransfer property of all drag events holds data about the drag and drop operation. When draggable element enters a drop target then dragenter event is occurred.",
      "options": [
        {
          "text": "drag effects",
          "correct": false
        },
        {
          "text": "drag data",
          "correct": false
        },
        {
          "text": "dataTransfer",
          "correct": true
        },
        {
          "text": "dragenter",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "_____________ in textboxes and selections on web pages is done automatically, so you do not need to handle dragging yourself.",
      "explanation": " Although the process is automatic, it is recommended that you always add data of the text/plain type as a fallback for applications or drop targets that do not support other types, unless there is no logical text alternative. Always add the plain text type last as it is the least specific.",
      "options": [
        {
          "text": "Dragging HTML and XML",
          "correct": false
        },
        {
          "text": "Dragging Text",
          "correct": true
        },
        {
          "text": "Dragging Files",
          "correct": false
        },
        {
          "text": "Dragging Links",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Calling the ______________ method during both a dragenter and dragover event will indicate that a drop is allowed at that location.",
      "explanation": "The drop event is fired on the element where the drop occurred at the end of the drag operation. When element is being dragged, drag event has happened. Calling the preventDefault method during both a dragenter and dragover event will indicate that a drop is allowed at that location. However, you will commonly wish to call the preventDefault method only in certain situations, for example, only if a link is being dragged. The dataTransfer property of all drag events holds data about the drag and drop operation.",
      "options": [
        {
          "text": "drop",
          "correct": false
        },
        {
          "text": "drag",
          "correct": false
        },
        {
          "text": "preventDefault",
          "correct": true
        },
        {
          "text": "dataTransfer",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following property is used to determine which drag operation was desired?",
      "explanation": "When the user finishes dragging an element, dragend is occurred. During the drop event, you should retrieve that data that was dropped from the event and insert it at the drop location. One can use the dropEffect property to determine which drag operation was desired.",
      "options": [
        {
          "text": "dragend",
          "correct": false
        },
        {
          "text": "getData",
          "correct": false
        },
        {
          "text": "dropEffect",
          "correct": true
        },
        {
          "text": "captureData",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "______________ should include data of two types; the first should be the URL using the type text/uri-list, and the second is the URL using the text/plain type.",
      "explanation": "Dragging Links should include data of two types; the first should be the URL using the type text/uri-list, and the second is the URL using the text/plain type.",
      "options": [
        {
          "text": "Dragging HTML and XML",
          "correct": false
        },
        {
          "text": "Dragging Text",
          "correct": false
        },
        {
          "text": "Dragging Files",
          "correct": false
        },
        {
          "text": "Dragging Links",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "A listener for the dragenter and dragover events are used to indicate valid drop targets, that is, places where dragged items may be dropped.",
      "explanation": "The dragover event is fired as the mouse is moving over an element when a drag is occurring. Much of the time, the operation that occurs during a listener will be the same as the dragenter event. When draggable element enters a drop target then dragenter event is occurred.",
      "options": [
        {
          "text": "True",
          "correct": true
        },
        {
          "text": "False",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "_____________ and elements in a document may be dragged using the application/x-moz-node type.",
      "explanation": "Dragging Nodes and elements in a document may be dragged using the application/x-moz-node type.",
      "options": [
        {
          "text": "Dragging HTML and XML",
          "correct": false
        },
        {
          "text": "Dragging Text",
          "correct": false
        },
        {
          "text": "Dragging Nodes",
          "correct": true
        },
        {
          "text": "Dragging Links",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which method is used to get user’s position?",
      "explanation": "For getting user’s position we used getCurrentPosition() method. Syntax is navigator.geolocation.getCurrentPosition(showPosition). It is supported by most of the browsers like Chrome, Firefox, Internet Explorer, Opera etc.",
      "options": [
        {
          "text": "getCurrentPosition()",
          "correct": true
        },
        {
          "text": "getDirectPosition()",
          "correct": false
        },
        {
          "text": "post()",
          "correct": false
        },
        {
          "text": "getDirection",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What does showPosition() returns?",
      "explanation": "showPosition() method returns both latitude and longitude of user. Syntax is navigator.geolocation.getCurrentPosition(showPosition); The value of latitude and longitude returned will be in decimal.",
      "options": [
        {
          "text": "only latitude",
          "correct": false
        },
        {
          "text": "only longitude",
          "correct": false
        },
        {
          "text": "both latitude and longitude",
          "correct": true
        },
        {
          "text": "direction",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What does getCurrentPosition() returns?",
      "explanation": "Coordinates of object is return by getCurrentPosition() method. getCurrentPosition() function accepts three parameters i.e. success, position and error. When data is fetched successfully success callback will be invoked. Lagitude, longitude, direction etc are the properties to be returned.",
      "options": [
        {
          "text": "latitude",
          "correct": false
        },
        {
          "text": "longitude",
          "correct": false
        },
        {
          "text": "direction",
          "correct": false
        },
        {
          "text": "coordinates",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following technique is not for the mobile browser to identify the location of a user?",
      "explanation": "Geolocation API uses the various techniques to identify the location of a user. In desktop browser uses IP bases position technique or WIFI. Mobile browser uses A-GPS, WIFI based position or GPS.",
      "options": [
        {
          "text": "GPS",
          "correct": false
        },
        {
          "text": "IP based position",
          "correct": true
        },
        {
          "text": "WIFI based position",
          "correct": false
        },
        {
          "text": "A-GPS",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Success callback function evoke only when ___________",
      "explanation": "There is a privacy for sharing of user’s location and the callback function is evoke only when a user accepts to share his location. Its input parameter is a position of the object. If this function fails then error callback function will be evoked.",
      "options": [
        {
          "text": "user accepts to share location information",
          "correct": true
        },
        {
          "text": "always evoke",
          "correct": false
        },
        {
          "text": "gps is accessible",
          "correct": false
        },
        {
          "text": "only by mobile browser",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What timestamp property denotes?",
      "explanation": "The time at which data of the location is retrieved denoted by timestamp property. This also provides the date. Timestamp is a read-only property.",
      "options": [
        {
          "text": "time at which WIFI is used",
          "correct": false
        },
        {
          "text": "the time at which data of the location is retrieved",
          "correct": true
        },
        {
          "text": "the time at which callback function is evoked",
          "correct": false
        },
        {
          "text": "current time",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the property of the ‘cords’ object?",
      "explanation": "cords object has properties like Latitude, longitude, altitude, accuracy, AltitudeAccuracy, speed, heading. Cords.speed defines speed in meters per second. Cords.heading defines degrees clockwise from North.",
      "options": [
        {
          "text": "Accuracy",
          "correct": false
        },
        {
          "text": "Altitude",
          "correct": false
        },
        {
          "text": "AltitudeAccuracy",
          "correct": false
        },
        {
          "text": "enableHighAccuracy",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which parameter gives an accuracy of longitude and latitude?",
      "explanation": "Accuracy of latitude and longitude coordinates is given by ‘accuracy’. It is in meters. Cords.altitudeAccuracy gives altitude accuracy of the position of the object. enableHighAccuracy is a Boolean variable which gives the most accurate position.",
      "options": [
        {
          "text": "Accuracy",
          "correct": true
        },
        {
          "text": "AltitudeAccuracy",
          "correct": false
        },
        {
          "text": "enableHighAccuracy",
          "correct": false
        },
        {
          "text": "Extra accuracy",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following property does not has always a return?",
      "explanation": "coords.latitude is the latitude in decimal number, coords.longitude is the value of longitude in decimal number, coords.altitude returns the value above mean sea level in meters if and only is return is available there.",
      "options": [
        {
          "text": "coords.longitude",
          "correct": false
        },
        {
          "text": "coords.latitude",
          "correct": false
        },
        {
          "text": "coords.accuracy",
          "correct": false
        },
        {
          "text": "coords.altitude",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which property is like the GPS in car?",
      "explanation": "Current position of the user is returned by watdhPosition(). It update the position os th user as the user moves just like the GPS installed in a car. WatchPosition() method is stopped by clearWatch() method. E.g. if(navigator.geolocation){navigator.watchPosition(showPosition);}",
      "options": [
        {
          "text": "watchPosition()",
          "correct": true
        },
        {
          "text": "clearWatch()",
          "correct": false
        },
        {
          "text": "getCurrentPosition()",
          "correct": false
        },
        {
          "text": "showPosition()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not the case of invoking for error callback function?",
      "explanation": "Error callback function takes the Position Error object as its input parameter. The function is invoked by an unknown error occurred or if the user has denied sharing the information of the location or if the request timed out or if location information is unavailable.",
      "options": [
        {
          "text": "user denies to share the information of a location",
          "correct": false
        },
        {
          "text": "location information is unavailable",
          "correct": false
        },
        {
          "text": "request timed out",
          "correct": false
        },
        {
          "text": "when we are using WIFI",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the default value of timeout?",
      "explanation": "The value of timeout is positive long value. It specifies the maximum time in milliseconds which the user has taken to respond with the data of the location. Its default value is infinity.",
      "options": [
        {
          "text": "infinity",
          "correct": true
        },
        {
          "text": "100",
          "correct": false
        },
        {
          "text": "0",
          "correct": false
        },
        {
          "text": "1000000",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " maximumAge returns time in _____________",
      "explanation": "The value of maximumAge is positive long. It specifies how long the user can use cached location data before using new location data. When its value is set to zero it indicates the user should not use cached location data and when set to zero is indicates the cached location data must be used by the user.",
      "options": [
        {
          "text": "nano-seconds",
          "correct": false
        },
        {
          "text": "milliseconds",
          "correct": true
        },
        {
          "text": "hour",
          "correct": false
        },
        {
          "text": "seconds",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the benefit of cache application?",
      "explanation": "Application cache can be helpful in so many ways like we can browse offline, as the cached resources are at local level hence they load at faster speed, it also reduces the load of the server. Asynchronous is one of the problems with the use of application cache due to this the resources which are not required like JavaScript or images will also be downloaded.",
      "options": [
        {
          "text": "browsing offline",
          "correct": false
        },
        {
          "text": "reduction of server load",
          "correct": false
        },
        {
          "text": "speed",
          "correct": false
        },
        {
          "text": "asynchronous",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which line is mandatory in cache manifest file?",
      "explanation": "For offline access, there is a text file named cache manifest. It lists the resources of the browser. For enabling application cache for any app we must include manifest attribute inside an html tag of the document like <html manifest=”text.appcache”> this manifest should be included on every page that we want cached.",
      "options": [
        {
          "text": "CACHE MANIFEST",
          "correct": true
        },
        {
          "text": "CSS stylesheet",
          "correct": false
        },
        {
          "text": "index.html",
          "correct": false
        },
        {
          "text": "image address",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which is not the section of manifest?",
      "explanation": "If the files are not in cache they come from a list of the files in the network. Cache is the default section. The files those are listed under this header are explicitly cached after downloading for the first time. If the resource is inaccessible then this section will be in use. There is no any rule to list these section, can be listed in any order.",
      "options": [
        {
          "text": "network",
          "correct": false
        },
        {
          "text": "cache",
          "correct": false
        },
        {
          "text": "fallback",
          "correct": false
        },
        {
          "text": "cache status",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Resources do not fit into _______",
      "explanation": "The categories for the resources to fit in are explicit entries, master entries, network entries, fallback entries. Entry can be both fallback and explicit entry. Any HTML file that contains manifest attribute is a master entry. Explicit entries are listed explicitly in the cache section.",
      "options": [
        {
          "text": "explicit entries",
          "correct": false
        },
        {
          "text": "master entries",
          "correct": false
        },
        {
          "text": "fallback entries",
          "correct": false
        },
        {
          "text": "idle entries",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which entry executes and load scripts from the server?",
      "explanation": "There are four types of resources in an application cache which are 1) Master Entries 2) Explicit Entries 3) Network Entries 4) Fallback Entries. Resources are explicitly listed in the application’s cache manifest file by the explicit entry. Fallback entry provides fallback entries in the application’s manifest file. Master entries are the resources added to the cache. Network entry executes and load scripts and code from the server, not from the cache. Syntax is\nCACHE MANIFEST\nNETWORK:\n/api\nResources are explicitly listed in a cache in explicit entries. When attempt to load fails fallback entry is used.",
      "options": [
        {
          "text": "Explicit entry",
          "correct": false
        },
        {
          "text": "Network entry",
          "correct": true
        },
        {
          "text": "Fallback entry",
          "correct": false
        },
        {
          "text": "Master entry",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not one of the cache state?",
      "explanation": "Updateready, obsolete, downloading, checking, idle, uncached are the states of cache. Downloading state of cache denotes that the resources are being downloaded. Checking state signifies that manifest is being checked for the updates.  Idle state denotes that the cache is not currently active for the process to update.",
      "options": [
        {
          "text": "Downloading",
          "correct": false
        },
        {
          "text": "Checking",
          "correct": false
        },
        {
          "text": "Idle",
          "correct": false
        },
        {
          "text": "Fallback",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "When a new version of any cache is available which even is fired?",
      "explanation": "When there is an availability of the new version of the cache updateready event is fired. When the resources are being downloaded then progress event is fired. Checking event is fired when an update is being checked. Obsolete is fired when the current cache is marked obsolete.",
      "options": [
        {
          "text": "progress",
          "correct": false
        },
        {
          "text": "updateready",
          "correct": true
        },
        {
          "text": "checking",
          "correct": false
        },
        {
          "text": "obsolete",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "If the transparent part of the image has rounded or diagonal edges, which format is suitable?",
      "explanation": "If a transparent part of the image has rounded or diagonal corners we use PNG format. If we want semi opaque transparency or drop shadow there also this format is helpful. If the transparent part of the image has straight edges we use transparent GIF format.",
      "options": [
        {
          "text": "PNG",
          "correct": true
        },
        {
          "text": "Transparent GIF",
          "correct": false
        },
        {
          "text": "GIF",
          "correct": false
        },
        {
          "text": "JPG",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following gives a text description of the image if it is not available?",
      "explanation": "The alt attributes gives a text description of the image if the image is not available at a time. Syntax is\n<img src=”apple.jpg” alt=”This is an apple, It is red” title=”apple”/>\nsrc attribute defines the address of the image, title attribute provides some additional information about the image. Height attribute is used to adjust the height of an image as per need.\n",
      "options": [
        {
          "text": "alt",
          "correct": true
        },
        {
          "text": "title",
          "correct": false
        },
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "height",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the software for editing images?",
      "explanation": "Web professionals use various tools for image optimization. Adobe Photoshop, Pixelmator, PaintShop Pro, Paint.net, Adobe Fireworks are some of them. There are online editors also like photoshop.com, splashup.com, pixler.com, ipiccy.com, photoshop.com.",
      "options": [
        {
          "text": "Adobe Fireworks",
          "correct": false
        },
        {
          "text": "PaintShop Pro",
          "correct": false
        },
        {
          "text": "Paint.net",
          "correct": false
        },
        {
          "text": "Splashup",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "JPEG format is useful when ___________",
      "explanation": "When we have different colors in a picture we use JPEG format. But when images have few colors or have large areas of the same color we use PNG or GIF format. Photographs that contain sky, snow, grass etc. are not suitable for PNG or GIF format.",
      "options": [
        {
          "text": "there are so many colors in the picture",
          "correct": true
        },
        {
          "text": "there are not so many colors in the picture",
          "correct": false
        },
        {
          "text": "we want to show more brightness",
          "correct": false
        },
        {
          "text": "when we want to show haziness",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Up to what resolution image should be saved by using in the web?",
      "explanation": "Images that are created for the web should be saved at a resolution of 72 ppi. Here ppi denotes pixels per inch. Resolution’s size is directly proportional to the size of the file. The resolution of the image is measured as a number of squares that fit within 1 inch x 1 inch square area.",
      "options": [
        {
          "text": "23 ppi",
          "correct": false
        },
        {
          "text": "34 ppi",
          "correct": false
        },
        {
          "text": "72 ppi",
          "correct": true
        },
        {
          "text": "100 ppi",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Images are usually printed at a resolution of ___________",
      "explanation": "Images in print materials like in books or in magazines are made up of tiny circles. These tiny circles are called dots. The images are generally printed at a resolution of 300 dpi, dpi stands for dots per inch.",
      "options": [
        {
          "text": "200 dpi",
          "correct": false
        },
        {
          "text": "100 dpi",
          "correct": false
        },
        {
          "text": "50 dpi",
          "correct": false
        },
        {
          "text": "300 dpi",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Vector images are created in ___________",
      "explanation": "Vector images are created commonly in Adobe Illustrator. Vector images are different from bitmap images. Vector images are resolution independent. Images such as logo, diagram, illustration are created in vector format. Bitmap format includes JPG, PNG and GIF images.",
      "options": [
        {
          "text": "Adobe Illustrator",
          "correct": true
        },
        {
          "text": "Adobe Photoshop",
          "correct": false
        },
        {
          "text": "Adobe Fireworks",
          "correct": false
        },
        {
          "text": "Splashup",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the new format to display vector images?",
      "explanation": "SVG stands for Scalable Vector Graphics. It is the new format that is used to display vector images directly, there is no need to create bitmap versions of the images. But it is not yet that much widespread. A GIF is a graphics interchange format. Both JPG and PNG are file format out of which one is lossy compressed while other is lossless compressed one.",
      "options": [
        {
          "text": "SVG",
          "correct": true
        },
        {
          "text": "GIF",
          "correct": false
        },
        {
          "text": "JPG",
          "correct": false
        },
        {
          "text": "PNG",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which format can create a transparent image?",
      "explanation": "For creating transparent images one can use PNG or Transparent GIF format. These formats can create see through or partially transparent image. However transparent PNG format is not supported by old browsers like Internet Explorer. SVG stands for Scalable Vector Graphics. It is a new format that is used to display vector images directly.  A GIF is a graphics interchange format. JPG is a lossy compressed file format.",
      "options": [
        {
          "text": "PNG",
          "correct": true
        },
        {
          "text": "GIF",
          "correct": false
        },
        {
          "text": "JPG",
          "correct": false
        },
        {
          "text": "SVG",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For caption of the image we use ____________",
      "explanation": "An alt attributes gives a text description of the image if the image is not available at a time. An address of image is defined by src attribute. HTML5 has introduced new element named <figure>. It contains image and its caption and hence both are associated with each other. We can also have more than one image inside <figure> element and they share the same caption. Syntax is\n<figure> <img src=”sea.jpg” alt=”Photograph of the sea”> <br/> \n<figurecaption> Sea is holding hands </figurecaption> </figure>\nName/title of HTML document is given by <title></title> tag.\n",
      "options": [
        {
          "text": "<figure>",
          "correct": true
        },
        {
          "text": "<src>",
          "correct": false
        },
        {
          "text": "<alt>",
          "correct": false
        },
        {
          "text": "<title>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is Modernizr?",
      "explanation": "Small JavaScript Library is Modernizr. It detects the availability of implementations for new web technologies. Many browsers do not support the new features that were introduced by HTML5. Modernizr provides a way to detect new features.",
      "options": [
        {
          "text": "CSS style sheet",
          "correct": false
        },
        {
          "text": "JavaScript Library",
          "correct": true
        },
        {
          "text": "The source code of a web page",
          "correct": false
        },
        {
          "text": "PHP file",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the JavaScript check for the HTML5 video feature?",
      "explanation": "HTML5 feature video is detected by  Modernizr.video. Modernizr.video[format] detects HTML5 video format feature. Modernizr.rgba detects rgba() feature of HTML5, hsla() is detected by Modernizr.hsla",
      "options": [
        {
          "text": "Modernizr.video",
          "correct": true
        },
        {
          "text": "Modernizr.video[format].",
          "correct": false
        },
        {
          "text": "Modernizr.rgba",
          "correct": false
        },
        {
          "text": "Modernizr.rgba",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Modernizr.csstransformss detects _________",
      "explanation": "Modernizr.csstransforms detects CSS 2D transforms introduced by HTML5. CSS 3D transform is detected by Modernizr.csstransforms3d. Input types are detected by Modernizr.inputtypes[type], Input Attributes is detected by Modernizr.input[attribute].",
      "options": [
        {
          "text": "CSS 2D transforms",
          "correct": true
        },
        {
          "text": "CSS 3D transforms",
          "correct": false
        },
        {
          "text": "Input Types",
          "correct": false
        },
        {
          "text": "Input Attributes",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which latest browser is able to detect CSS Grids?",
      "explanation": "Modernizr 3.1.0, Modernizr 3.1.1, Modernizr 3.4.0 and Modernizr 3.5.0 are the updated versions of modernizr which fixes some bugs and some updated the feature. Modernizr 3.5.0 can detect CSS Grids. In this latest Modernizr, we use two syntaxes, one is Modernizr.cssgrid, and an old syntax Modernizer.cssgridlegacy. In addition, there is a polyfill available named PEP.",
      "options": [
        {
          "text": "Modernizr 3.5.0",
          "correct": true
        },
        {
          "text": "Modernizr 3.4.0",
          "correct": false
        },
        {
          "text": "Modernizr 3.2.0",
          "correct": false
        },
        {
          "text": "Modernizr 3.1.0",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "classPrefix is used when _____________",
      "explanation": "If modernizr’s class names are clashing with already existing class then we use classPrefix inside the configuration. It works same as hidden detects that adds .hidden class. Syntax is { “classPrefix”: “tee”, “feature-detects”: [“dom/hide”]}, this means instead of <html class=”hide”> we will get <html class=”tee-hidden”>.",
      "options": [
        {
          "text": "it is mandatory prefix before all the classes",
          "correct": false
        },
        {
          "text": "class name clashes",
          "correct": true
        },
        {
          "text": "when there is no any class in the code",
          "correct": false
        },
        {
          "text": "not mandatory it depends on user",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following can be helpful in creating your own feature detect?",
      "explanation": "If you want to create your own feature detects you can simply use Modernizr.addTest, a string is passed generally in lowercase without any punctuation like Modernizr.addTest(feature, test). It returns the Boolean value. Modernizr._domPrefixes works same as _prefixes. Modernizr.atRule is one of modernizr API(Application Programming Interface) having syntax like – Modernizr.atRule(prop).",
      "options": [
        {
          "text": "Modernizr.addTest",
          "correct": true
        },
        {
          "text": "Modenizer.on",
          "correct": false
        },
        {
          "text": "Modernizr._domPrefixes",
          "correct": false
        },
        {
          "text": "Modernizr.atRule",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is used to determine browser support?",
      "explanation": "If you want to create your own feature detects you can simply use Modernizr.addTest. Modernizr.hasEvent helps in determining browser support. It does detection of div element by default. Syntax is hasEvent(‘video’). But if we want to give an object to detect something other than div, we can give second argument as hasEvent(‘blur’, window). It also returns a Boolean value. Modernizr.atRule is one of modernizr API(Application Programming Interface) having syntax like – Modernizr.atRule(prop). Modernizr.prefixed Modernizr API takes string CSS value in Document Object Model.",
      "options": [
        {
          "text": "Modernizr.addTest",
          "correct": false
        },
        {
          "text": "Modernizr.hasEvent",
          "correct": true
        },
        {
          "text": "Modernizr.atRule",
          "correct": false
        },
        {
          "text": "Modernizr.prefixed",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For checking programmatically we use _________",
      "explanation": "For checking programmatically we use Modernizr.mq, it checks if the window of current browser matches a media query or not. Syntax is\nvar qu= Modernizr.mq(‘(min-width: 300px)’); \nif(qu) {// browser window is larger than 300 px}\nWe should use only valid media query. Modernizr.prefixed Modernizr API takes string CSS value in Document Object Model. Modernizr._prefixes is internal list of prefixes. To check whether a given CSS property is supported by browser, Modernizr.testAllProps API.\n",
      "options": [
        {
          "text": "Modernizr.mq",
          "correct": true
        },
        {
          "text": "Modernizr.prefixed",
          "correct": false
        },
        {
          "text": "Modernizr._prefixes",
          "correct": false
        },
        {
          "text": "Modernizr.testAllProps",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The features that can’t be detected by checking idle are checked by ____________",
      "explanation": "Modernizr.testProp is just like Modernizr.testAllProps but only difference is it doesn’t check for vendor. The features that can’t be check by IDL is checked by Modernizr.testStyles, it takes CSS rule and embed it onto current page with DOM elements. Syntax is\nModernizr.testStyles (rule,callback,[nodes],[testnames]).\nWe can add additional div elements also on the page as per requirement. Modernizr.prefixedCSS is same like Modernizr.prefixed except it returns result in hyphenated form.\n",
      "options": [
        {
          "text": "Modernizr.prefixedCSS",
          "correct": false
        },
        {
          "text": "Modernizr.testAllProps",
          "correct": false
        },
        {
          "text": "Modernizr.testStyles",
          "correct": true
        },
        {
          "text": "Modernizr.testProp",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For testing prefixed CSS properties we use _____________",
      "explanation": "For checkin prefixed CSS properties we use Modernizr.prefixedCSS value. Syntax is\nModernizr.prefixedCSSVAlue (prop,value).\nModernizr.prefixed takes string css value in camelCase. Modernizr.prefixed takes string css value in camelCase. Modernizr.prefixedCSS returns hyphenated value. Modernizr._prefixes is internal list of prefixes.\n",
      "options": [
        {
          "text": "Modernizr.prefixed",
          "correct": false
        },
        {
          "text": "Modernizr.prefixedCSS",
          "correct": false
        },
        {
          "text": "Modernizr._prefixes",
          "correct": false
        },
        {
          "text": "Modernizr.prefixedCSS value",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is internal list of prefixes?",
      "explanation": "Modernizr._prefixes is internal list of prefixes. It is set against things like prefixedCSS and prefixed. It is an array of kebab-case vendor.\nE.g. var ru= Modernizr._prefixes.join(‘transform: rotate(10deg);’); ru == ‘transform: rotate(10deg)’; webkit- transform: rotate(10deg); moz-transform: rotate(10deg); o-transform: rotate(10deg); ms-transform: rotate(10deg);’\nModernizr.prefixedCSSVAlue (prop,value). Modernizr.prefixed takes string css value in camelCase. Modernizr.prefixedCSS returns hyphenated value.\n",
      "options": [
        {
          "text": "Modernizr._prefixes",
          "correct": true
        },
        {
          "text": "Modernizr.prefixedCSS value",
          "correct": false
        },
        {
          "text": "Modernizr.prefixedCSS",
          "correct": false
        },
        {
          "text": "Modernizr.prefixed",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following detects support for basic Worker API?",
      "explanation": "The support of basic web worker is detected by web workers. Web workers mean running a script in the background for web content. Shared workers detect support of shared workers, data workers detect support for creating Web Workers from Data URI’s. Blob workers detect support for creating web workers from Blob URI.",
      "options": [
        {
          "text": "web workers",
          "correct": true
        },
        {
          "text": "shared workers",
          "correct": false
        },
        {
          "text": "data workers",
          "correct": false
        },
        {
          "text": "blob workers",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following detects support for the method of the form?",
      "explanation": "input formmethod detects support for formmethod attribute, input formtarget detects for formtarget attribute on forms, input formenctyp detects for the support of formenctype attribute, it overrides form enctype attribute, input formactin detects for the support of formaction attribute.",
      "options": [
        {
          "text": "input formtarget",
          "correct": false
        },
        {
          "text": "input formmethod",
          "correct": true
        },
        {
          "text": "input formenctype",
          "correct": false
        },
        {
          "text": "input formaction",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following check support for non-alpha, lossy webp?",
      "explanation": "Webp Lossless detects for lossless webp, non-alpha webp support. Webp tests for all forms of webp support like alpha, lossy, animated, lossless etc. Webp Animation detects for the support of animation in webp, Webp Alpha detects the support of transparent webp.",
      "options": [
        {
          "text": "Webp",
          "correct": false
        },
        {
          "text": "Webp Lossless",
          "correct": true
        },
        {
          "text": "Webp Animation",
          "correct": false
        },
        {
          "text": "Webp Alpha",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following detects for the support of size attribute of an image?",
      "explanation": "Sizes test for the sizes attribute for images. Image crossOrigin is used to check the support of crossOrigin attribute on images, it allows cross domain images on a canvas, JPEG 2000 and JPEG XR are respectively for the check of JPEG 2000 and JPEG XR formats on the images.",
      "options": [
        {
          "text": "JPEG 2000",
          "correct": false
        },
        {
          "text": "JPEG XR",
          "correct": false
        },
        {
          "text": "Image crossOrigin",
          "correct": false
        },
        {
          "text": "Sizes",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "URL is ___________",
      "explanation": "URL is the second name of a web address. It is composed of IP (Internet Protocol) address or words. Its full form is Uniform Resource Locators. Generally entering name while surfing is easy as numbers are hard to remember.",
      "options": [
        {
          "text": "web address",
          "correct": true
        },
        {
          "text": "source code",
          "correct": false
        },
        {
          "text": "user’s address",
          "correct": false
        },
        {
          "text": "an attribute",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the correct syntax of web address?",
      "explanation": "The correct syntax for a web address is scheme://prefix.domain:port/path/filename, where scheme is for https or http, prefix is for domain like www, domain denotes domain name, port defines port number, path defines path at server, filename is for name of the document.",
      "options": [
        {
          "text": "path://prefix.port:domain/filename/scheme",
          "correct": false
        },
        {
          "text": "scheme://prefix.domain:port/path/filename",
          "correct": true
        },
        {
          "text": "prefix://scheme.port:domain/filename/path",
          "correct": false
        },
        {
          "text": "port://domain.filenmae:path/scheme/prefix",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which scheme is used for secure HyperText Transfer Protocol?",
      "explanation": "https scheme is for secure or encrypted web pages, http is HyperText Transfer Protocol used for common web pages which are not encrypted, ftp is file transfer protocol for downloading and uploading of documents.",
      "options": [
        {
          "text": "ftp",
          "correct": false
        },
        {
          "text": "http",
          "correct": false
        },
        {
          "text": "https",
          "correct": true
        },
        {
          "text": "file",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "ASCII is _____________",
      "explanation": "ASCII consists 7-bit character set which has 128 characters. There are numbers 0-9, upper and lower case letters from A-Z, and also include special characters. Including modern computers, internet these characters are used in HTML also.",
      "options": [
        {
          "text": "6-bit character set",
          "correct": false
        },
        {
          "text": "7-bit character set",
          "correct": true
        },
        {
          "text": "9-bit character set",
          "correct": false
        },
        {
          "text": "3-bit character set",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In URL encoding replaces non-ASCII characters with ________",
      "explanation": "In URL encoding non-ASCII characters are replaced with “%” which is followed by hexadecimal digits. URL can only contain ASCII character set. There should be no space in the URL, space is replaced by %20 or “+” in URL encoding.",
      "options": [
        {
          "text": "“*”",
          "correct": false
        },
        {
          "text": "“&”",
          "correct": false
        },
        {
          "text": "“%”",
          "correct": true
        },
        {
          "text": "“+”",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which function is used in JavaScript for URL encoding?",
      "explanation": "There are some built in functions in JavaScript, ASP and PHP for URL encoding. JavaScript use encodeURI() function. ASP uses Server.URLEncode() function, rawurlencode() function is used by PHP. Space is encoded as %20 by JavaScript function.",
      "options": [
        {
          "text": "encodeURI()",
          "correct": true
        },
        {
          "text": "Server.URLEncode()",
          "correct": false
        },
        {
          "text": "rawurlencode()",
          "correct": false
        },
        {
          "text": "UREncoding",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is URL encode of ‘&’?",
      "explanation": "URL encoding of ‘&’ is %26, its Decimal value is 38 and the Hex value is 26. %24 is URL encode of ‘$’ whose Decimal value is 36 and Hex value is 24, %2c is URL encode of ‘,’ its Decimal value is 44 and Hex value is 2c, %3d is URL encode of ‘=’, its Decimal value is 61 and Hex value is 3d.",
      "options": [
        {
          "text": "%24",
          "correct": false
        },
        {
          "text": "%2c",
          "correct": false
        },
        {
          "text": "%3d",
          "correct": false
        },
        {
          "text": "%26",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a reserved character?",
      "explanation": "Reserved characters are ‘@’, ‘=’, ‘?’, ‘:’, ‘;’, ‘/’, ‘,’, ‘+’, ‘$’, ‘&’. Unsafe characters are space, ‘”’, ‘>’, ‘<’, ‘#’, ‘%’, ‘{‘, ‘}’, ‘~’, ‘^’, ‘[‘, ‘|’, ‘\\’, ‘`’, ‘]’. There is a URL Encode for all of these characters. Apart from URL Encode there is Decimal and Hex value also for the characters.",
      "options": [
        {
          "text": "&",
          "correct": false
        },
        {
          "text": ">",
          "correct": true
        },
        {
          "text": "+",
          "correct": false
        },
        {
          "text": "@",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the URL Encode for tab character?",
      "explanation": "For tab character URL encode is %09, its Decimal value is 9 and Hex value is 09, %08 is URL encode for backspace, its Decimal value is 8 and Hex value is 08, %0d is URL Encode for carriage return, Decimal value is 13 and Hex value is 0d, %0a is URL encode for linefeed, Decimal value is 10 and Hex value is 0a.",
      "options": [
        {
          "text": "%09",
          "correct": true
        },
        {
          "text": "%08",
          "correct": false
        },
        {
          "text": "%0d",
          "correct": false
        },
        {
          "text": "%0a",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not encode by encodeURI() function?",
      "explanation": "encodeURI() function is JavaScript function. It encodes special characters. The characters that can’t be encoded are ‘,’, ‘?’, ‘/’, ‘@’, ‘=’, ‘&’, ‘$’, ‘+’, ‘#’, ‘:’. Its syntax is encodeURI(uri), uri is the URI that to be encoded.",
      "options": [
        {
          "text": ">",
          "correct": false
        },
        {
          "text": " [",
          "correct": false
        },
        {
          "text": "\\",
          "correct": false
        },
        {
          "text": ":",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is used to decode the encoded URI?",
      "explanation": "encodeURI(), encodeURIComponent, decodeURI() are the Java Script function. encodeURI(), encodeURIComponent() are the functionsthat encode URL. decodeURI() is the function that decode the encoded URL.",
      "options": [
        {
          "text": "encodeURI()",
          "correct": false
        },
        {
          "text": "encodeURIComponent()",
          "correct": false
        },
        {
          "text": "decodeURI()",
          "correct": true
        },
        {
          "text": "Server.URLEncode()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the URL Encode for the character ‘M’?",
      "explanation": "The URL Encode for character ‘M’ is %4D, %47 is URL Encode for ‘G’, %4A is URL Encode for ‘J’, %50 is URL Encode for the character ‘P’. The URL Encode for A to Z characters start from 41 to 5A followed by a ‘%’ sign serially.",
      "options": [
        {
          "text": "%47",
          "correct": false
        },
        {
          "text": "%4A",
          "correct": false
        },
        {
          "text": "%4D",
          "correct": true
        },
        {
          "text": "%50",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not control character?",
      "explanation": "ASCII control characters are defined from %00-%1F, these characters are to design control hardware devices. These characters are not used inside URL. NUL, ENQ, ETX, BEL, BS, HT, LF, EOT, CR, DLE, DC3 are some of the control characters. BS is for backspace, NUL is for null character, HT is for the horizontal tab character.",
      "options": [
        {
          "text": "BS",
          "correct": false
        },
        {
          "text": "NUL",
          "correct": false
        },
        {
          "text": "ampersand",
          "correct": true
        },
        {
          "text": "HT",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the URL encoding of VT?",
      "explanation": "The URL Encode for VT (vertical tab) character is %0B, %09 is for horizontal tab character, %06 is the URL Encode for ACK (acknowledge), %02 is URL Encode for STX (start of text) character. %00 is the URL Encode for NUL (null character).",
      "options": [
        {
          "text": "%0B",
          "correct": true
        },
        {
          "text": "%09",
          "correct": false
        },
        {
          "text": "%06",
          "correct": false
        },
        {
          "text": "%02",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not a reserved character?",
      "explanation": "There are two type of characters reserved and unreserved characters. Characters that are allowed in URL but not have any reserved purpose are unreserved characters. These are the characters from A-Z, a-z, 0-9, ‘~’, ‘_’, ‘.’, ‘-‘.",
      "options": [
        {
          "text": "_",
          "correct": true
        },
        {
          "text": "(",
          "correct": false
        },
        {
          "text": ")",
          "correct": false
        },
        {
          "text": "*",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which function is used to return a handle to the database?",
      "explanation": "prepareDatabase() function is used to return a handle to database. It is necessary to first create the database. showDocCount() shows the real work after creating the database. Syntax of calling a JavaScript function is: function prepareDatabase(ready, error).",
      "options": [
        {
          "text": "prepareDatabase()",
          "correct": true
        },
        {
          "text": "showDocCount()",
          "correct": false
        },
        {
          "text": "executeSql()",
          "correct": false
        },
        {
          "text": "openDatabase()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "openDatabase() method does not take the argument in __________",
      "explanation": "openDatabase() and openDatabaseSync() methods takes the name of the database, version of the database, display name, estimated size in bytes of the data that is to be stored in the database. openDtabase() method works on WorkerUtils and Window, openDatabaseSync() method works on WorkerUtils.",
      "options": [
        {
          "text": "database name",
          "correct": false
        },
        {
          "text": "display name",
          "correct": false
        },
        {
          "text": "database version",
          "correct": false
        },
        {
          "text": "server name",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The sign is used for the placeholder _____________",
      "explanation": "‘?’ is used for the placeholder. Binding of the ? placeholder is done at a literal level. It is dynamically inserted into the statement. ‘?’ can be used in place of literals in SQL statements. If this character is not supported then the error code 5 is invoked.",
      "options": [
        {
          "text": "&",
          "correct": false
        },
        {
          "text": "*",
          "correct": false
        },
        {
          "text": "^",
          "correct": false
        },
        {
          "text": "?",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which feature is not used when SQL features are not being supported?",
      "explanation": "When SQL feature is not supported then we use COMMIT, BEGIN, ROLLBACK SQL features and are marked as bogus. User agent uses the statements that contain these three words in case of failure of the support of SQL features.",
      "options": [
        {
          "text": "BEGIN",
          "correct": false
        },
        {
          "text": "END",
          "correct": true
        },
        {
          "text": "COMMIT",
          "correct": false
        },
        {
          "text": "ROLLBACK",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "transaction() does not take the argument _______",
      "explanation": "transction() and readTransaction() are the two methods that take three arguments i.e. transaction callback as the first argument, error callback as the second argument, success callback as the third argument.",
      "options": [
        {
          "text": "callback",
          "correct": false
        },
        {
          "text": "success callback",
          "correct": false
        },
        {
          "text": "error callback",
          "correct": false
        },
        {
          "text": "database name",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which method is used to verifythe version number?",
      "explanation": "changeVersion() method automatically verify version number and it also changes it like doing a schema update. When this method is invoked it immediately returns and then run transaction steps asynchronously by taking transaction callback as the third argument, error callback as the fourth argument and success callback as the fifth argument.",
      "options": [
        {
          "text": "changeVersion()",
          "correct": true
        },
        {
          "text": "readTransaction()",
          "correct": false
        },
        {
          "text": "transaction()",
          "correct": false
        },
        {
          "text": "executeSql()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which error is invoked when SQLTransactionCallback does not execute?",
      "explanation": "When SQLTransactionCallback, SQLStatementErrorCallback, SQLStatementCallback does not execute then INVALID_STATE_ERR error is raised. This error is raised from inside a SQLTransactionErrorCallback.",
      "options": [
        {
          "text": "INVALID_ACCESS_ERR",
          "correct": false
        },
        {
          "text": "UNKNOWN_ERR",
          "correct": false
        },
        {
          "text": "TIMEOUT_ERR",
          "correct": false
        },
        {
          "text": "INVALID_STATE_ERR",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which object is created for read-only transaction?",
      "explanation": "For read-only transaction, we create the object SQLTransactionSync. If the first argument is NULL then we throw SQLException which is Error code 0. SQLTransactionSync object is fresh initially but when it is marked as stale it is committed or rolled back.",
      "options": [
        {
          "text": "Foo object",
          "correct": false
        },
        {
          "text": "SQLTransactionSync",
          "correct": true
        },
        {
          "text": "DatabaseSync object",
          "correct": false
        },
        {
          "text": "SQLTransaction",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "insertId attribute returns ____________",
      "explanation": "insertId attribute returns the row ID of the row of the inserted SQLResultSet object’s SQL statement that is inserted into the database. If multiple rows are inserted then the ID of the last row will be returned. If there is no row then INVALID_ACCESS_ERR exception will be raised.",
      "options": [
        {
          "text": "column ID",
          "correct": false
        },
        {
          "text": "row ID",
          "correct": true
        },
        {
          "text": "user’s ID",
          "correct": false
        },
        {
          "text": "database ID",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Number of rows is returned by the attribute __________",
      "explanation": "rowsAffected attribute returns the number of rows that were changed by SQL. If there is no change by the SQL statement then this attribute will return zero. If we use “SELECT” statement, this attribute will always return zero.",
      "options": [
        {
          "text": "insertIID",
          "correct": false
        },
        {
          "text": "rows",
          "correct": false
        },
        {
          "text": "rowsAffected",
          "correct": true
        },
        {
          "text": "length",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the error is raised when the quantity of data is too much?",
      "explanation": "When the quantity of the data returned from the database is very large then TOO_LARGE_ERR is invoked. To minimize the data we can use SQL “LIMIT” i.e. modifier to reduce the size of the resultant set.",
      "options": [
        {
          "text": "TOO_LARGE_ERR",
          "correct": true
        },
        {
          "text": "UNKNOWN_ERR",
          "correct": false
        },
        {
          "text": "TIMEOUT_ERR",
          "correct": false
        },
        {
          "text": "QUOTA_ERR",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the required argument to openDatabase?",
      "explanation": "The required argument to openDatabase is version number. So it is mandatory that you should know the version number before we try to open the database. If we do not pass this argument then an exception is thrown.",
      "options": [
        {
          "text": "version number",
          "correct": true
        },
        {
          "text": "database name",
          "correct": false
        },
        {
          "text": "size of a database",
          "correct": false
        },
        {
          "text": "text description",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute is used for getting an individual row?",
      "explanation": "For getting individual row results.rows.item(i) is used, i denotes the index of the row. It will return the object representation of the row. insertId returns row id but in case of multiple rows, it returns the id of the last row.",
      "options": [
        {
          "text": "results.rows.item(i)",
          "correct": true
        },
        {
          "text": "insertId",
          "correct": false
        },
        {
          "text": "rowAffected",
          "correct": false
        },
        {
          "text": "length",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Sprites are  _____________",
      "explanation": "2-D images are sprites. Sprite is a big image which is made up of combining small images into one larger image. It is defined by X and Y coordinates. CSS background-position property is used to define the exact position that is to be displayed.",
      "options": [
        {
          "text": "1-D images",
          "correct": false
        },
        {
          "text": "2-D images",
          "correct": true
        },
        {
          "text": "3-D images",
          "correct": false
        },
        {
          "text": "not the image",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Sprites are not used for _________",
      "explanation": "If there are so many small icons, images, buttons etc. on the web page it will take more time to load the web page. Hence image sprites are used, it combines small images in one and loading time is reduced. This also reduces the HTTP request.",
      "options": [
        {
          "text": "beautify the web page",
          "correct": true
        },
        {
          "text": "reducing HTTP request",
          "correct": false
        },
        {
          "text": "reduce loading time",
          "correct": false
        },
        {
          "text": "reducing multiple server requests",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Each image in sprite should be approximately of ___________",
      "explanation": "For using image sprite we should try to round up to nearly 10 pixels, especially when working with Photoshop. We should also use simpler figures so that it will be easy to use ‘snap-to’ grids in photoshop, also for keeping things organized.",
      "options": [
        {
          "text": "100 pixels",
          "correct": false
        },
        {
          "text": "20 pixels",
          "correct": false
        },
        {
          "text": "10 pixels",
          "correct": true
        },
        {
          "text": "50 pixels",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not Sprite Sheet generator?",
      "explanation": "There are many sprite sheet generators such as Lemonade, Compass, SpriteMe, Fireworks CS6. Lemonade, Compass, and SpriteMe are available free of cost but Fireworks CS6 is not free of cost. Pixelomator is image editing software.",
      "options": [
        {
          "text": " Lemonade",
          "correct": false
        },
        {
          "text": "Firewoks CS6",
          "correct": false
        },
        {
          "text": "SpriteMe",
          "correct": false
        },
        {
          "text": "Pixelomator",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which is the best platform for working with the individual image?",
      "explanation": "SpriteMe is brilliant sprite sheet viewer and generator. It is available at a free of cost. We can design our website using individual images. It is very simple to use. By using SpriteMe we can also view current sprite sheets that are already present on a website.",
      "options": [
        {
          "text": "SpriteMe",
          "correct": true
        },
        {
          "text": "Fireworks CS6",
          "correct": false
        },
        {
          "text": "Lemonade",
          "correct": false
        },
        {
          "text": "Compass",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following does not generate a sprite sheet?",
      "explanation": "Sprite Cow does not generate sprites, instead it helps to get the dimensions of images that are within sprite sheet,  SpriteRight is used for generating sprite sheets., here the CSS is created on the fly. CSS Sprites is also one of the sprite sheet generators. Glue is a command line tool that generates sprite sheets.",
      "options": [
        {
          "text": "SpriteRight",
          "correct": false
        },
        {
          "text": "Sprite Cow",
          "correct": true
        },
        {
          "text": "CSS Sprites",
          "correct": false
        },
        {
          "text": "Glue",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Templates can’t be placed inside ______________",
      "explanation": "Templates can be placed inside <body>, <head>, <frameset>. Template can contain any type of elements. Template can be used as a child of <select> and <table> elements.\n<table> <tr> <template id=“teeds”> <td>..content..</td> </template> </tr> </table>\n",
      "options": [
        {
          "text": "<head>",
          "correct": false
        },
        {
          "text": "<body>",
          "correct": false
        },
        {
          "text": "<table>",
          "correct": false
        },
        {
          "text": "<form>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The .content property is __________",
      "explanation": "The .content property is a read-only property i.e a DocumentFragment which contains guts of template.\nfunction support_temp() {return ‘content’ in document.createElement(‘template’);} if (supportsTemplate()) {//go !} else {//use another templating technique.}\n",
      "options": [
        {
          "text": "read-only",
          "correct": true
        },
        {
          "text": "write-only",
          "correct": false
        },
        {
          "text": "read-write",
          "correct": false
        },
        {
          "text": "hidden",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "<template> does not include the attribute ___________",
      "explanation": "<template> only include global attributes. Id, hidden, lang, onsubmit, ontoggle, onwaiting, onplay, onmousemove, onmousedown, onblur, oncancel, oncanplay, onabort, title etc. are some of the global attributes.",
      "options": [
        {
          "text": "id",
          "correct": false
        },
        {
          "text": "hidden",
          "correct": false
        },
        {
          "text": "lang",
          "correct": false
        },
        {
          "text": "src",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which browser does not support <template> element?",
      "explanation": "On desktop <template> element is supported by most of the browser like Chrome, Edge, Opera, Safari, Firefox. Internet Explorer does not support this element. On mobile, it is supported by Edge mobile, Firefox for Android and iOS Safari.",
      "options": [
        {
          "text": " Chrome",
          "correct": false
        },
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": true
        },
        {
          "text": "Opera",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not DOM property?",
      "explanation": "For generating DOM we use certain DOM properties or methods. Some of the DOM methods are element.appendChild(node), document.createElement(), element.innerHTML, document.removeElement().",
      "options": [
        {
          "text": "element.appendChild(node)",
          "correct": false
        },
        {
          "text": "document.createElement()",
          "correct": false
        },
        {
          "text": "element.innerHTML",
          "correct": false
        },
        {
          "text": "document.getElementById()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not a template library?",
      "explanation": "There are templating libraries like Handlebars, Mustache, Underscore JS library. Handlebars are like regular HTML which is embedded with handlebars expressions, Mustache is used with JavaScript, Underscore JS library is one of the JavaScript libraries which provides various useful functional programming.",
      "options": [
        {
          "text": "Mustache",
          "correct": false
        },
        {
          "text": "Underscore JS library",
          "correct": false
        },
        {
          "text": "Live.js",
          "correct": true
        },
        {
          "text": "Handlebars",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which process is used for the creation of the end result?",
      "explanation": "render() process creates the end result by putting actual data in the template. It means that the placeholders are replaced with the previous actual data, compile() is used for translating and compiling a template into a JavaScript function.",
      "options": [
        {
          "text": "render()",
          "correct": true
        },
        {
          "text": "compile()",
          "correct": false
        },
        {
          "text": "eval(x)",
          "correct": false
        },
        {
          "text": "encodeURI()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Major portion of web page contributes _________________",
      "explanation": "64% of any website’s page is made up of images. The loading speed of the websites also slows down due to this much contribution of images in a web page. To reduce this loading time we use web performance optimization.",
      "options": [
        {
          "text": "image",
          "correct": true
        },
        {
          "text": "text",
          "correct": false
        },
        {
          "text": "video",
          "correct": false
        },
        {
          "text": "audio",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For image compression which tool is helpful?",
      "explanation": "Optimus WordPress plugin is used for lossless as well as lossy image compression. It automatically reduces the size of the file. Reduction in size is possible up to 70%. There are three versions of Optimus i.e. Optimus HQ, Optimus, Optimus HQ PRO. Speed test tools are used to measure/note down your pages speed performance. WordPress cache enable a plugin used to enable caching.",
      "options": [
        {
          "text": "WordPress cache enable a plugin",
          "correct": false
        },
        {
          "text": "Optimus wordpress plugin",
          "correct": true
        },
        {
          "text": "Glup-uglify",
          "correct": false
        },
        {
          "text": "Speed test tool",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "HTTP request is between _______________",
      "explanation": "HTTP stands for Hypertext Transfer Protocol. For fetching, data from server browser uses HTTP request, and in between client and host. The more HTTP request slower the loading of a page will be.",
      "options": [
        {
          "text": "client and host",
          "correct": true
        },
        {
          "text": "client and server",
          "correct": false
        },
        {
          "text": "server and host",
          "correct": false
        },
        {
          "text": "user and server",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What does not come under minification?",
      "explanation": "For better web performance we use removal of unnecessary characters from the source code like white space characters, comments, new line characters, block delimiters etc.\nE.g. the given JavaScript code \nvar arr=[]; for(var i=0;i<10;i++) {arr[i]=i}; } \nis equivalent to the code \nfor(var arr=[i=0];++i<10;arr[i]=i);\n",
      "options": [
        {
          "text": "removal of comments",
          "correct": false
        },
        {
          "text": "removal of new line characters",
          "correct": false
        },
        {
          "text": "removal of white space characters",
          "correct": false
        },
        {
          "text": "removal of multimedia elements",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not render blocking resource?",
      "explanation": "HTML, CSS and JavaScript are render blocking resources to the DOM. To enhance the speed of your web page these resources should be properly used.",
      "options": [
        {
          "text": "CSS",
          "correct": false
        },
        {
          "text": "HTML",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": false
        },
        {
          "text": "Jquery",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For best speed position of JavaScript code should be at ______________",
      "explanation": "For better loading time of the page it is always recommended to put JavaScript code at the bottom of the main code of the page before </body> tag. CSS code should be at the beginning of the code.",
      "options": [
        {
          "text": "top of the code",
          "correct": false
        },
        {
          "text": "bottom of the code",
          "correct": true
        },
        {
          "text": "middle of the code",
          "correct": false
        },
        {
          "text": "anywhere in the code",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the work of TTFB?",
      "explanation": "TTFB stands for time to the first byte and measures the responsiveness of server. Its calculation is done as: process request time+ HTTP request time+ HTTP response time. This speed up the website by downloading various smaller images through sockets.",
      "options": [
        {
          "text": "measures the responsiveness of web server",
          "correct": true
        },
        {
          "text": "increases the load speed of web page",
          "correct": false
        },
        {
          "text": "compresses the image",
          "correct": false
        },
        {
          "text": "remove unnecessary characters",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "404 HTTP error is generated due to ____________",
      "explanation": "HTTP 404 is an error which indicates that the client was able to communicate with the server but the server could not find the request. Due to missing of any file 404 error is generated, this is a taxing error for the page.",
      "options": [
        {
          "text": "missing JavaScript file",
          "correct": false
        },
        {
          "text": "any missing file",
          "correct": true
        },
        {
          "text": "slow loading of the web page",
          "correct": false
        },
        {
          "text": "on removing the newline character",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the work of Gzip compression?",
      "explanation": "Basically Gzip compression is used to compress text data in websites. Gzip compression is very useful in web performance optimization. It compresses web pages, JavaScript and CSS. Gzip is also one of the file formats. Gzip compression can be enabled via webserver configuration. Common webservers where it can me make enable is .htaccess, Nginx, Apache and Litspeed.",
      "options": [
        {
          "text": "compresses an image",
          "correct": false
        },
        {
          "text": "compresses web pages only",
          "correct": false
        },
        {
          "text": "compresses JavaScript and CSS code only",
          "correct": false
        },
        {
          "text": "compresses web pages, JavaScript and CSS",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is hotlink protection?",
      "explanation": "Hotlink protection is a kind of tool. Hotlink protection is related to restricting HTTP, it stops other sites from displaying images of your webpage. We can create a list of hostnames that can access the resources of our website.",
      "options": [
        {
          "text": "stopping other sites from displaying images",
          "correct": true
        },
        {
          "text": "stopping other sites from displaying videos",
          "correct": false
        },
        {
          "text": "stopping access of source code",
          "correct": false
        },
        {
          "text": "compresses an image",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For best speed position of CSS code should be at __________",
      "explanation": "CSS styling and code should be placed at the top of the code for best loading result of the webpage. JavaScript code should be placed at the bottom of the page for best performance and rapid loading speed of the website.",
      "options": [
        {
          "text": "at the bottom of the code",
          "correct": false
        },
        {
          "text": "at the middle of the code",
          "correct": false
        },
        {
          "text": "at the top of the code",
          "correct": true
        },
        {
          "text": "anywhere in the code",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is not the work of database optimization?",
      "explanation": "We store various information in the database. A database is a collection of tables that contain information. Database delay takes a long waiting time, so there are various techniques for database optimization. Database optimization basically optimizes data types, tables, data size.",
      "options": [
        {
          "text": "cleaning out old tables",
          "correct": false
        },
        {
          "text": "creating indexes",
          "correct": false
        },
        {
          "text": "optimize datatype",
          "correct": false
        },
        {
          "text": "delete database",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is the Waterfall tool?",
      "explanation": "Waterfall views are useful for front end of the websites. These are the kind of graphs which shows the order of requesting of resources from a browser. One of the best online tools is WebPageTest.org also known as WPT.",
      "options": [
        {
          "text": "WebPageTest.org",
          "correct": true
        },
        {
          "text": "dotcom-monitor",
          "correct": false
        },
        {
          "text": "Pingdom Speed Test",
          "correct": false
        },
        {
          "text": "GTmetrix",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not the layer of the OSI Model?",
      "explanation": "OSI model stands for Open Systems Interconnection model. It is commonly used for representing various parts of network traffic. There are seven layers in the OSI model, Physical Layer, Data Link layer, Network Layer, Transport Layer, Session Layer, Presentation Layer and Application Layer.",
      "options": [
        {
          "text": "Transport Layer",
          "correct": false
        },
        {
          "text": "Network Layer",
          "correct": false
        },
        {
          "text": "Session Layer",
          "correct": false
        },
        {
          "text": "Atomic Layer",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which browser gives maximum parallel connections per host?",
      "explanation": "Parallel downloading is very beneficial to performance. Opera 10 provides the maximum parallel connections per host i.e. 8, Chrome 1 and 2, Chrome 4 to 23 gives 6 maximum parallel connections per host, Safari 3 and 4 gives 4 maximum parallel connections per host, Firefox 3, Firefox 4 to 17 gives 6 maximum parallel connections per host.",
      "options": [
        {
          "text": "Opera 10",
          "correct": true
        },
        {
          "text": "Chrome 1 and 2",
          "correct": false
        },
        {
          "text": "Safari 3 and 4",
          "correct": false
        },
        {
          "text": "Firefox 3",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the maximum cache size for Chrome?",
      "explanation": "Maximum Cache size for Chrome is 300 MB, for Safari it is unlimited, For Opera 10+ it is 400 MB, for Firefox 17 the maximum cache size is 1024 MB, for Internet Explorer 6,7,8 it is 50 MB and for Internet Explorer maximum cache size is 250 MB.",
      "options": [
        {
          "text": "unlimited",
          "correct": false
        },
        {
          "text": "300 MB",
          "correct": true
        },
        {
          "text": "400 MB",
          "correct": false
        },
        {
          "text": "1024 MB",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not possible compression value?",
      "explanation": "A identity indicates no compression. Compress is a method that uses UNIX compress, it is based on LZW algorithm. Gzip is the most famous compression format, deflate is a kind of gzip without checksum header, it is little faster but less efficient. DNS stands for Domain Name System and is a naming system in computers.",
      "options": [
        {
          "text": "identity",
          "correct": false
        },
        {
          "text": "deflate",
          "correct": false
        },
        {
          "text": "compress",
          "correct": false
        },
        {
          "text": "DNS",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Gzip is not fully supported by ___________",
      "explanation": "Gzip or deflate is partially supported by Netscape 4.60+. Netscape 6+, IE 4+, Opera 5+, Safari, Chrome, Lynx 2.6+ and Firefox fully support Gzip compression, IE 4.5 and 5 does not support Gzip compression, IE 5.5 and 6.0, IE 6.0 SPI, IE 6,7,8 partially support Gzip compression.",
      "options": [
        {
          "text": "Netscape 4.60+",
          "correct": true
        },
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Netscape 6+",
          "correct": false
        },
        {
          "text": "IE 4+",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the size of PHP Module extension mysql.so?",
      "explanation": "There are more than 80 extensions of the PHP source code. Mysql.so takes the size 42 KB, apc.so takes 655 KB, ffmpeg.so takes 35 KB, imap.so takes 86 KB, sasl.so takes 15 KB, tidy.so takes 42 KB, mysqli.so takes 107 KB, gd.so takes 94 KB.",
      "options": [
        {
          "text": " 35 KB",
          "correct": false
        },
        {
          "text": "42 KB",
          "correct": true
        },
        {
          "text": "15 KB",
          "correct": false
        },
        {
          "text": "107 KB",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following locking method does not supported by APC?",
      "explanation": "APC supports four locking methods named File locks, Spin locks, Pthread mutex, IPC semaphores. File locks are the most stable, Spin lock gives the best performance, Pthread mutex is only available in Linux version 2.6, IPC semaphores are faster than file locks.",
      "options": [
        {
          "text": "File locks",
          "correct": false
        },
        {
          "text": "Spin locks",
          "correct": false
        },
        {
          "text": "Dead locks",
          "correct": true
        },
        {
          "text": "IPC semaphores",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the class of NoSQL?",
      "explanation": "The most basic class of NoSQL is key-value stores and commonly used in web infrastructure. Multidimension stores are more complex data relationships, here data is stored in rows and columns. MongoDB and CouchDB are the examples of Document stores.",
      "options": [
        {
          "text": "Document stores",
          "correct": false
        },
        {
          "text": "Multidimension stores",
          "correct": false
        },
        {
          "text": "Key-value stores",
          "correct": false
        },
        {
          "text": "Memcache",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a kind of MySQL backup?",
      "explanation": "There are various backups in MySQL. File backups, SQL backups, backing up from a slave, CSV backups, Incremental backups are some kind of backups. File backup is the backup of MySQL database which creates a copy of files from MySQL data directory. SQL backups are alternate to File backups.",
      "options": [
        {
          "text": "File backups",
          "correct": false
        },
        {
          "text": "CSV backups",
          "correct": false
        },
        {
          "text": "SQL backups",
          "correct": false
        },
        {
          "text": "Table backups",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is the final method to create MySQL backups?",
      "explanation": "Copy of data or else database is known as backup. The final method for creating MySQL backups is LVM snapshots. It uses a copy-on-write feature of storage systems in which LVM i.e. Logical Volume Management is the most popular in Linux. It is very quick as it creates the snapshots. CSV stands for Cluster Shared Volumes backups. File backup is the backup of MySQL database which creates a copy of files from MySQL data directory. SQL backups are alternate to File backups.",
      "options": [
        {
          "text": "LVM snapshots",
          "correct": true
        },
        {
          "text": "SQL backups",
          "correct": false
        },
        {
          "text": "CSV backups",
          "correct": false
        },
        {
          "text": "File backups",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not MySQL Forks?",
      "explanation": "Forks are the drop-in replacement of MySQL. Some of the forks are MariaDB, Drizzle, Percona Server, OurDelta. MariaDB provides compatible general public license(GPL). Drizzle is better to fork than MariaDB, it is largely compatible with MySQL. OurDelta provides a combination of MySQL and MariaDB. Sphinx is a full text search engine of SQL.",
      "options": [
        {
          "text": "MariaDB",
          "correct": false
        },
        {
          "text": "OurDelta",
          "correct": false
        },
        {
          "text": "Drizzle",
          "correct": false
        },
        {
          "text": "Sphinx",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which command controls the maximum number of tables that the cache can hold?",
      "explanation": "The option for table cache is table_open_cache. It controls the maximum number of tables that the cache can hold, we set the variable equal to the total number of table, table_definition_cache is the lightweight partner to table cache.",
      "options": [
        {
          "text": "table_open_cache",
          "correct": true
        },
        {
          "text": " table_definition_cache",
          "correct": false
        },
        {
          "text": "open_files_limit",
          "correct": false
        },
        {
          "text": "read_buffer_size",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For sequential scans of tables we use ____________",
      "explanation": "For performing sequential scans of tables we used read_buffer_size, when reading sorted rows we use read_rnd_buffer_size, join_buffer_size are allocated per-session thus for multiple join buffers may be created. For performing sort operation we use sort_buffer_size.",
      "options": [
        {
          "text": "read_buffer_size",
          "correct": true
        },
        {
          "text": "join_buffer_size",
          "correct": false
        },
        {
          "text": "read_rnd_buffer_size",
          "correct": false
        },
        {
          "text": "sort_buffer_size",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " How many MPMs can be loaded at a time?",
      "explanation": "Multi-Process Modules i.e. MPMs is introduced by Apache 2, it controls how Apache handles the requests. We can load only one MPM at a time. But in the case of Linux, we can use two MPMs. There are two kind of MPM, worker and prefork.",
      "options": [
        {
          "text": "3",
          "correct": false
        },
        {
          "text": "1",
          "correct": true
        },
        {
          "text": "4",
          "correct": false
        },
        {
          "text": "0",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which version of web worker is introduced in Internet Explorer?",
      "explanation": "Web workers are background threads running separate scripts. All the latest browsers support web workers. Version 3.5 of web workers is introduced in Firefox, version 10.0 in Internet Explorer, version 10.6 in Opera, version 4.0 in Chrome, version 4.0 in Safari.",
      "options": [
        {
          "text": "Version 3.5",
          "correct": false
        },
        {
          "text": "Version 10.6",
          "correct": false
        },
        {
          "text": "Version 10.0",
          "correct": true
        },
        {
          "text": "Version 4.0",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Each cell of the table can be represented by using __________",
      "explanation": "td stands for table data, we can represent each cell of the table by using <td>, at the end we used </td> tag. But some browsers by default draw the lines around table. <tr> is used to indicate start of every row i.e. it stands for table row. The header information is present in <th> tag. <thead> tag contains the group of header.",
      "options": [
        {
          "text": "<tr>",
          "correct": false
        },
        {
          "text": "<td>",
          "correct": true
        },
        {
          "text": "<th>",
          "correct": false
        },
        {
          "text": "<thead>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For heading we can use ____________",
      "explanation": "<th> element is used for representing heading of column or a row. It works same as <td> element. If shell has no content we can use <th> element also there. We can use scope attribute for specifying the heading is for row or column. Usually content of <th> is represented in bold. <thead> tag contains the group of header. <tr> is used to indicate start of every row i.e. it stands for table row.",
      "options": [
        {
          "text": "<td>",
          "correct": false
        },
        {
          "text": "<tr>",
          "correct": false
        },
        {
          "text": "<thead>",
          "correct": false
        },
        {
          "text": "<th>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Headings of table lies inside ___________",
      "explanation": "Headings of the table lies inside <thead> element. Footer lies inside the <tfoot> element. The body of the table lies inside <tbody> element. <th> is used for giving heading to a row or a column. Every element must have closing tag also i.e. </thead>, </tfoot>, </tbody>",
      "options": [
        {
          "text": "<thead>",
          "correct": true
        },
        {
          "text": "<tfoot>",
          "correct": false
        },
        {
          "text": "<th>",
          "correct": false
        },
        {
          "text": "<tbody>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the element associated with HTML table layout?",
      "explanation": "There are three elements in HTML table layout i.e. size, spanning and alignment.  Layout type can be achieved by setting Rows elements layout attribute to Fixed or Auto. Auto attribute relies on browser compatibility whereas fixed layout relies on developer specification.",
      "options": [
        {
          "text": "size",
          "correct": false
        },
        {
          "text": "spanning",
          "correct": false
        },
        {
          "text": "alignment",
          "correct": false
        },
        {
          "text": "color",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element is not associated with a class attribute?",
      "explanation": "Column cell, Row, and Rows are the container elements. They have a class attribute with the help of this we can apply special styling. Table alignment is also controlled style sheet classes. Text-align and vertical-align are the style attributes that align the content of the table.",
      "options": [
        {
          "text": "Row",
          "correct": false
        },
        {
          "text": "<thead>",
          "correct": true
        },
        {
          "text": "Column cell",
          "correct": false
        },
        {
          "text": "Rows",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For adding caption to the table we use ____________",
      "explanation": "For adding caption to the table we use <caption> tag. It should be used just below the <table> tag.\nSyntax is \n<table> \n<caption> Savings </caption> \n<tr> <th> saving </th><th>loss</th> </tr> \n<tr><td>$12</td>$45<td></td> </tr> \n</table>.\n<thead> tag contains the group of header. <tr> is used to indicate start of every row i.e. it stands for table row. The header information is present in <th> tag.\n",
      "options": [
        {
          "text": "<caption>",
          "correct": true
        },
        {
          "text": "<thead>",
          "correct": false
        },
        {
          "text": "<th>",
          "correct": false
        },
        {
          "text": "<tr>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "border-spacing is given in _____________",
      "explanation": "border-spacing and border-collapse are the two properties by which one can set the border and its styling in a table. We give its value in pixels.\n table { border-collapse: collapse; border-spacing: 14px } th, td{ border: 12 px solid red; padding: 20px 13px; }\n",
      "options": [
        {
          "text": "pixels",
          "correct": true
        },
        {
          "text": "cm",
          "correct": false
        },
        {
          "text": "mm",
          "correct": false
        },
        {
          "text": "inch",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Borders can’t be applied on ________________",
      "explanation": "Borders can’t be applied on <tr> elements. It can’t be applied on table structural elements. For setting borders with <tr> element, border-collapse property should be set to collapse.\nSyntax is \ntable {border-collapse: collapse;} \nth, td{border-bottom: 2px dotted red; } \ntfoot tr:last-child td{border-bottom: 9 px;}\n",
      "options": [
        {
          "text": "<th>",
          "correct": false
        },
        {
          "text": "<td>",
          "correct": false
        },
        {
          "text": "<tr>",
          "correct": true
        },
        {
          "text": "<thead>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute defines numbers of columns in a group?",
      "explanation": "span=number[CN] attribute’s value must be an integer and greater than 0. It specifies the number of columns in a group. When span attribute is not in use, colgroup defines a single column group containing one column. width=multi-length[CN] specifies default width of for every column. scope=scope-name[CN] specifies set of data cells for which going header cell gives header information. The headers=idrefs[CN] provides list of header cells that gives header information.",
      "options": [
        {
          "text": "width=multi-length[CN].",
          "correct": false
        },
        {
          "text": "span=number[CN].",
          "correct": true
        },
        {
          "text": "scope=scope-name[CN].",
          "correct": false
        },
        {
          "text": "headers=idrefs[CS].",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following does not specify a column width?",
      "explanation": "We can specify column width in three ways i.e. Percentage, Fixed, Proportional. Fixed width is given in pixels. Percentage specification is the percentage of horizontal space availability in the table. The proportional specification is the portions of fixed horizontal space required for the table.",
      "options": [
        {
          "text": "Fixed",
          "correct": false
        },
        {
          "text": "Percentage",
          "correct": false
        },
        {
          "text": "Proportional",
          "correct": false
        },
        {
          "text": "Pixels",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Scope attribute can’t have the value __________",
      "explanation": "scope attribute defines a set of data cell. It is used in place of headers. This attribute can have one of the value among rowgroup, row, colgroup, col, rowgroup, and colgroup provides information of header cell of the corresponding row and column groups.",
      "options": [
        {
          "text": "row",
          "correct": false
        },
        {
          "text": "rowgroup",
          "correct": false
        },
        {
          "text": "col",
          "correct": false
        },
        {
          "text": "<head>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not the value for frame attribute?",
      "explanation": "Frame attribute gives information about which sides of the frame surrounding that table will be visible. The values that this attribute can take are lhs, rhs, box, border, vsides, hsides, below, above, void.",
      "options": [
        {
          "text": "above",
          "correct": false
        },
        {
          "text": "void",
          "correct": false
        },
        {
          "text": "none",
          "correct": true
        },
        {
          "text": "box",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not the value for rules attribute?",
      "explanation": "The rules which will appear between cells of the table is specified by this attribute. It can take the values groups, none, rows, all and cols. None is the default value, rows are for appearance between rows only and cols is for columns only.",
      "options": [
        {
          "text": "vsides",
          "correct": true
        },
        {
          "text": "rows",
          "correct": false
        },
        {
          "text": "all",
          "correct": false
        },
        {
          "text": "groups",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not the value for align attribute?",
      "explanation": "align attribute is the alignment of data and for justification of text in the cell. It can take the values left, right, justify, center, char. Justify is for double justifying the text, char is for aligning text around a particular character.",
      "options": [
        {
          "text": "justify",
          "correct": false
        },
        {
          "text": "char",
          "correct": false
        },
        {
          "text": "middle",
          "correct": true
        },
        {
          "text": "left",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " valign attribute does not take the value __________________",
      "explanation": "valign attribute is for specifying the vertical position of the data in a cell. It can take the values middle, top, baseline, bottom, Top is for the top of the cell’s data, middle is for the centered data, bottom is for the bottom of the cell, first text line occurs on the baseline which is common to all the cells.",
      "options": [
        {
          "text": "justify",
          "correct": true
        },
        {
          "text": "middle",
          "correct": false
        },
        {
          "text": "baseline",
          "correct": false
        },
        {
          "text": "bottom",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "External scripts can’t take the tag _________",
      "explanation": "We used external JavaScript code by saving is as .js extension, we can’t use <script> tag in external JavaScript file. For using external script, we can use src attribute and put file name inside it with <script> tag.\nSyntax is <script src=”external_file.js”></script>.\nWhen one wants to write a message in console, console.log() is used. The window.alert() alerts message in box on window.\n",
      "options": [
        {
          "text": "<script>",
          "correct": true
        },
        {
          "text": "<form>",
          "correct": false
        },
        {
          "text": "<h1>",
          "correct": false
        },
        {
          "text": "<title>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For displaying data in JavaScript, we can’t use ____________",
      "explanation": "We can display data in many ways in JavaScript.They are innerHTML, console.log(), window.alert(), document.write. document.getElementById(id) is a method used for accessing HTML element by JavaScript. Here id defines the HTML element.",
      "options": [
        {
          "text": "document.write()",
          "correct": false
        },
        {
          "text": "console.log()",
          "correct": false
        },
        {
          "text": "innerHTML",
          "correct": false
        },
        {
          "text": "document.getElementById()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For testing we should use ________",
      "explanation": "For testing we used document.write() in JavaScript. If we use document.write() after HTML document, it will delete all existing HTML. This method can only be used for testing purposes.\n <script> document.write(9*6); </script>\n",
      "options": [
        {
          "text": "document.write()",
          "correct": true
        },
        {
          "text": "console.log()",
          "correct": false
        },
        {
          "text": "window.alert()",
          "correct": false
        },
        {
          "text": "innerHTML",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following keyword stops the execution of JavaScript?",
      "explanation": "By using debugger keyword execution of JavaScript stops, and is debugger function is defined it is called at the moment, break is the keyword used to terminate a loop or a switch, return is used for exit from a function, try…catch handle the errors.",
      "options": [
        {
          "text": "break",
          "correct": false
        },
        {
          "text": "return",
          "correct": false
        },
        {
          "text": "debugger",
          "correct": true
        },
        {
          "text": "try….catch",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Arrays in JavaScript are written within ____________",
      "explanation": "Arrays in JavaScript are written in square brackets. The elements of array are separated by commas. Index of array items starts from 0. E.g. var fruits= [“apple”, “orange”, “banana”, “pine-apple”]; objects in JavaScript are written inside curly brackets.",
      "options": [
        {
          "text": "{}",
          "correct": false
        },
        {
          "text": "[].",
          "correct": true
        },
        {
          "text": "“”",
          "correct": false
        },
        {
          "text": "()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "typeof “null” in JavaScript is _______",
      "explanation": "typeof “null” in JavaScript is an object. Basically null indicates nothing like it is a thing that does not exist. It is like a bug in JavaScript that its typeof comes to be an object. For emptying an object we can set it to null.",
      "options": [
        {
          "text": "number",
          "correct": false
        },
        {
          "text": "string",
          "correct": false
        },
        {
          "text": "object",
          "correct": true
        },
        {
          "text": "undefined",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Negative positions for string do not work in ______________",
      "explanation": "While using slice(), substr() and substring() method we pass numbers as parameters respective to the string. E.g var tes= str.slice(-10). -10 is indicates negative position. It does not work in Internet Explorer or older versions.",
      "options": [
        {
          "text": "Internet Explorer 8",
          "correct": true
        },
        {
          "text": "Chrome",
          "correct": false
        },
        {
          "text": "Safari",
          "correct": false
        },
        {
          "text": "Opera",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For converting string to array we can use ______________ method.",
      "explanation": "For converting any string to an array we use split() method. E.g. var tr=”t,o,I,k,l”; tr.split(“,”); tr.split(“|”); tr.split(“ ”); charAt returns a character from the given index, charCodeAt() returns Unicode of character at the given index. toLowerCase() method converts input string into lower case string.",
      "options": [
        {
          "text": "charAt()",
          "correct": false
        },
        {
          "text": "charCodeAt()",
          "correct": false
        },
        {
          "text": "split()",
          "correct": true
        },
        {
          "text": "toLowerCase()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "JavaScript numbers are stored as ______________",
      "explanation": "The numbers according to international IEEE 754 standard are stored as a double precision floating point. It stores the numbers in 64-bit format, stored in bits from 0 to 51, exponent in bits is from 52 to 62 and signs in a bit is 63.",
      "options": [
        {
          "text": "integers",
          "correct": false
        },
        {
          "text": "double precision floating point",
          "correct": true
        },
        {
          "text": "double",
          "correct": false
        },
        {
          "text": "floating point",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " The integers in JavaScript are precise up to ___________",
      "explanation": "The integers in JavaScript have accuracy up to 15 digits. E.g. var y=111111111111111; // value of y will be 111111111111111. For decimal the maximum number of decimals is 17.",
      "options": [
        {
          "text": "12 digits",
          "correct": false
        },
        {
          "text": "10 digits",
          "correct": false
        },
        {
          "text": "23 digits",
          "correct": false
        },
        {
          "text": "15 digits",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Typeof “infinity” will return ___________",
      "explanation": "The typeof “infinity” will return number. E.g. typeof Infinity; // it will return “number”, when we divide any number by zero it will generate infinity.\nSyntax is var number=9; while(number != Infinity) { number= number + number; }\n",
      "options": [
        {
          "text": "string",
          "correct": false
        },
        {
          "text": "number",
          "correct": true
        },
        {
          "text": "object",
          "correct": false
        },
        {
          "text": "undefined",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " By default JavaScript displays the numbers as ___________",
      "explanation": "base 10 decimals are displayed as numbers by default by JavaScript. We can use toString() method for converting numbers as any of the base among 16, 2, 8. E.g var number= 1256; number.toString(6); number.toString(16); number.toString(2).",
      "options": [
        {
          "text": "base 16",
          "correct": false
        },
        {
          "text": "base 10",
          "correct": true
        },
        {
          "text": "base 6",
          "correct": false
        },
        {
          "text": "base 2",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which method is not used for converting variables to number?",
      "explanation": "There are mainly three methods with the help of those we can convert variables to numbers. The methods are the parseFloat() method, the Number() method, the parseInt() method. These are global JavaScript methods. valueOf() method return number as a number only.",
      "options": [
        {
          "text": "parseInt()",
          "correct": false
        },
        {
          "text": "Number()",
          "correct": false
        },
        {
          "text": "parseFloat()",
          "correct": false
        },
        {
          "text": "valueOf()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Math.random() returns _______________",
      "explanation": "Math.random() generate any random number between 0 and 1. If we use Math.random() with Math.floor() it returns any random integer. E.g. Math.floor(Math.random * 1000); It will generate any random number between 0 and 999. For the sake of convenience we can also define a random function.",
      "options": [
        {
          "text": "random number between 0 and 1",
          "correct": true
        },
        {
          "text": "random number between 1 and 10",
          "correct": false
        },
        {
          "text": "random number between 1 and 100",
          "correct": false
        },
        {
          "text": "random number between 0 and 10",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the Boolean value of “” in JavaScript?",
      "explanation": "For an empty string (“”), the Boolean value is false. E.g. var t= “ ”; Boolean(t); //it will return false. For -0(minus zero), the Boolean value is false. The Boolean value of undefined is also false. For null and false the Boolean value is also false.",
      "options": [
        {
          "text": "true",
          "correct": false
        },
        {
          "text": "on",
          "correct": false
        },
        {
          "text": "off",
          "correct": false
        },
        {
          "text": "false",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "jQuery does not contain the _____________ feature.",
      "explanation": "jQuery contains many features like CSS manipulation, AJAX, Effects, and animations, Utilities, HTML event methods, HTML/DOM manipulation. There are also jQuery plugins for every given task. jQuery simplifies complicated things in JavaScript.",
      "options": [
        {
          "text": "AJAAX",
          "correct": true
        },
        {
          "text": "AJAX",
          "correct": false
        },
        {
          "text": "CSS manipulation",
          "correct": false
        },
        {
          "text": "Effects and animations",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the correct syntax of jQuery?",
      "explanation": "The basic syntax of jQuery is $(selector).action(), $ sign defines access of jQuery, (selector) is HTML element, action() is for the jQuery action that is to be performed. E.g. $(“h1”).hide(), this will hide all the <h1> elements.",
      "options": [
        {
          "text": "action().$(selector)",
          "correct": false
        },
        {
          "text": "$(selector).action()",
          "correct": true
        },
        {
          "text": "(selector)$.action()",
          "correct": false
        },
        {
          "text": "action().(selector)$",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In jQuery all the elements are selected by writing ____________",
      "explanation": "In jQuery all the elments are selected by writing $(“*”). $(this) helps in selecting current HTML element. All the button elements are selected by writing $(“:button”). If we want to select a specific class we should write $(“.class_name”).",
      "options": [
        {
          "text": "$(this)",
          "correct": false
        },
        {
          "text": "$(“:button”)",
          "correct": false
        },
        {
          "text": "$(“*”)",
          "correct": true
        },
        {
          "text": "$(“.class_name”)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not event method in jQuery?",
      "explanation": "The actions that can be performed on the web page are called events. Some common DOM events are blur(), click(), bilnd(), change(), dbclick(), eroor(), delegate(), die(), event.data, event.currentTarget, event.pageX, mouseenter(), mousedown(), event.result, event.target, focus(), hover(), keydown(), focusout(), live(), load(), keyup() etc.",
      "options": [
        {
          "text": "click()",
          "correct": false
        },
        {
          "text": "mouseenter()",
          "correct": false
        },
        {
          "text": "mousedown()",
          "correct": false
        },
        {
          "text": "hide()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "hover() method is the combination of ____________",
      "explanation": "hover() method is the combination of mouseleave() and mouseenter(). It takes two functions. When the mouse leaves HTML element then mouseleave() function is called and when mouse enters HTML element then mouseenter() function is called.",
      "options": [
        {
          "text": "mouseleave() and mouseeneter()",
          "correct": true
        },
        {
          "text": "mousedown() and mouseenter()",
          "correct": false
        },
        {
          "text": "mouseup() and mousedown()",
          "correct": false
        },
        {
          "text": "mouseleave() and mousedown()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the fade method in jQuery?",
      "explanation": " jQuery has various fade methods including fadeout(), fadeTo(), fadeToggle(), fadeIn().\nThe syntax of fadeIn() is $(selector).fadeIn(speed,callback);\nFor fadeout() we use $(selector).fadeOut(speed,callback);\nFor fadeToggle we use $(slecetor).fadeToggle(speed,callback);\nFor fadeTo() syntax is $(selector).fadeTo(speed,opacity,callback).\n",
      "options": [
        {
          "text": "fadeTo()",
          "correct": false
        },
        {
          "text": "fadeOn()",
          "correct": true
        },
        {
          "text": "fadeOut()",
          "correct": false
        },
        {
          "text": "fadeIn()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the sliding method in jQuery?",
      "explanation": "jQuery have three slide methods namely slideUp(), slideDown() and slideToggle().\nSyntax for slideDown() is $(selector).slideDown(speed,callback);\nFor slideUp() we use $(selector).slideUp(speed,callback).\nFor slideToggle() method the syntax is $(selector).slideToggle(speed,callback).\n",
      "options": [
        {
          "text": "slideToggle()",
          "correct": false
        },
        {
          "text": "slideDown()",
          "correct": false
        },
        {
          "text": "slideUp()",
          "correct": false
        },
        {
          "text": "slideIn()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the jQuery method for manipulation?",
      "explanation": "For attributes manipulation we use three methods named html(), text() and val(). The content of selected elements is returned by html(). The text content of selected elements is returned by text(). The values of form fields is returned by val().",
      "options": [
        {
          "text": "stop()",
          "correct": true
        },
        {
          "text": "html()",
          "correct": false
        },
        {
          "text": "text()",
          "correct": false
        },
        {
          "text": "val()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The method not used to add new content is ___________",
      "explanation": "In jQuery there are four methods to add new content namely prepend(), before(), after(), append(). The append() method inserts at the end, prepend() method inserts at the beginning of the content, after() method inserts the content after selected HTML element, befor() inserts before the selected HTML element.",
      "options": [
        {
          "text": "after()",
          "correct": false
        },
        {
          "text": "prepend()",
          "correct": false
        },
        {
          "text": "before()",
          "correct": false
        },
        {
          "text": "add()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which method is not used for CSS manipulation?",
      "explanation": "There are several functions for CSS manipulation. Some of them are css(), removeClass(), toggleClass(), addClass(). The style attribute is returned by css() method. Classes are added by addClass() method. Classes are removed by removeClass() method. The toggling between adding and removing classes is achieved by toggleClass() method.",
      "options": [
        {
          "text": "toggleClass()",
          "correct": false
        },
        {
          "text": "removeClass()",
          "correct": false
        },
        {
          "text": "beforeClass()",
          "correct": true
        },
        {
          "text": "css()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not a jQuery dimension method?",
      "explanation": "There are various important methods for dimension. Some of them are height(), innerHeight(), outerWidth(), outerHeight(), width(), innerWidth(). Width() method includes border, margin and padding. innerWidth() and innerHeight() method includes padding. outerHeight() and outerWidth() method includes border and padding. CSS() method is used for CSS manipulation in jQuery.",
      "options": [
        {
          "text": "innerWidth()",
          "correct": false
        },
        {
          "text": "outerHeight()",
          "correct": false
        },
        {
          "text": "height()",
          "correct": false
        },
        {
          "text": "css()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which method is not used for traversing DOM tree?",
      "explanation": "There are three methods for the traversal of DOM tree. Parent(), parentsUntil(), parents(). Direct parent element is returned by parent() method. All the ancestor elements are returned by parents() method. All the ancestor elements that are between given two arguments are returned by parentsUntil() method.",
      "options": [
        {
          "text": "parent()",
          "correct": false
        },
        {
          "text": "parentsUntil()",
          "correct": false
        },
        {
          "text": "parents()",
          "correct": false
        },
        {
          "text": "after()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which method is not for traversing DOM tree sideways?",
      "explanation": "There are methods for traversing DOM tree sideways. Some of them are next(), prev(), prevAll(), nextAll(), siblings(), prevUntil(), next(). All the sibling elements are returned by siblings() method. The next sibling is returned by next() method. All the next siblings are returned by nextAll() method.",
      "options": [
        {
          "text": "parent()",
          "correct": true
        },
        {
          "text": "siblings()",
          "correct": false
        },
        {
          "text": "prev()",
          "correct": false
        },
        {
          "text": "nextAll()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which method is not used for filtering in jQuery?",
      "explanation": "The basic filtering methods are eq(), not(), filter(), last() and first(). The first element is returned by first() method, last element is returned by last() method, the specific index number of element is returned by eq() method.",
      "options": [
        {
          "text": " next()",
          "correct": true
        },
        {
          "text": "first()",
          "correct": false
        },
        {
          "text": "eq()",
          "correct": false
        },
        {
          "text": "last()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " AJAX is not used in _____________",
      "explanation": "AJAX stands for Asynchronous JavaScript and XML. AJAX loads data in the background and then displays it on the webpage. The application of AJAX is on Gmail, Youtube, Facebook and Google Maps tabs. Several methods for AJAX functionality is provided by jQuery.",
      "options": [
        {
          "text": "Gmail",
          "correct": false
        },
        {
          "text": "Youtube",
          "correct": false
        },
        {
          "text": "Facebook",
          "correct": false
        },
        {
          "text": "Yahoo",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a method of AJAX?",
      "explanation": "AJAX is basically used for exchanging data with server. There are several methods in jQuery for AJAX. Ajax(), ajaxSetup(), ajaxPrefilter(), ajaxTransport(), getJSON(), post(), ajaxSend(), ajaxError(), load(), serializeArray(), serialize(), ajaxStop(), ajaxStart() are some of the methods.",
      "options": [
        {
          "text": "get()",
          "correct": false
        },
        {
          "text": "getJSON()",
          "correct": false
        },
        {
          "text": "post()",
          "correct": false
        },
        {
          "text": "stop()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Correct syntax for $.post() method is ____________",
      "explanation": "The correct syntax for $.post() method is $.post(URL,data,callback). URL is the URL we want to request for. Callback is the name of the function that is to be executed. Data specifies the data that is to be send with the request.",
      "options": [
        {
          "text": "$.post(URL,data,callback)",
          "correct": true
        },
        {
          "text": "$.post(URL,data)",
          "correct": false
        },
        {
          "text": "$.post(URL,callback)",
          "correct": false
        },
        {
          "text": "$.post(data,callback)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The method releases jQuery’s control of $ is __________",
      "explanation": "$.noConflict() method releases control of $ in jQuery. A reference to jQuery is returned by noConflict() method. E.g. var ty=$.noConflict(); ty(document).ready(function()) { ty(“button”).click(function() {ty(“h”).text(“It is working!”);}); });. $.param() jQuery AJAX method is the representation of an object or array. An each() method particularize function to run for every matched element. data() method either connects data to selected elements or get data from them.",
      "options": [
        {
          "text": "$.param()",
          "correct": false
        },
        {
          "text": "$.noConflict()",
          "correct": true
        },
        {
          "text": "each()",
          "correct": false
        },
        {
          "text": "data()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In JavaScript, which one is used to finding the non-whitespace characters?",
      "explanation": "There are metacharacters defined in JavaScript. \\S is used to find the non-whitespace character. \\d is used for finding a digit. \\s is used for finding whitespace character. \\w is used to find word character. \\W is used to find non word character.",
      "options": [
        {
          "text": " \\d",
          "correct": false
        },
        {
          "text": "\\s",
          "correct": false
        },
        {
          "text": "\\S",
          "correct": true
        },
        {
          "text": "\\w",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one is not regular expression object method?",
      "explanation": "compile(), toString(), exec(), test() are some of the regular expression methods in JavaScript. Compile() is method that compiles regular expression. Test() method is for matching in a string. Exec() is also for matching in a string but it returns first match. toString() method returns string value.",
      "options": [
        {
          "text": "test()",
          "correct": false
        },
        {
          "text": "exec()",
          "correct": false
        },
        {
          "text": "compile()",
          "correct": false
        },
        {
          "text": "each()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which is not a JavaScript global function?",
      "explanation": "There are various global functions in JavaScript, decodeURI(), escape(), isFinite(), eval(), isNaN(), encodeURI(), decodeURIComponent(), encodeURIComponent(), isFinite(), is NaN(), parseFloat(), String(), parseInt(), unescape() are some of the methods.",
      "options": [
        {
          "text": "compile()",
          "correct": true
        },
        {
          "text": "eval()",
          "correct": false
        },
        {
          "text": "decodeURI()",
          "correct": false
        },
        {
          "text": "isNaN()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not window object property?",
      "explanation": "Window object properties are frames, history, frameElement, defaultStatus, closed, innerHeight, document, innerWidth, location, name, outerHeight, outerHeight, opener, pageXOffset, parent, screenTop, screen, screenLeft, screen, scroll, status, self, sessionStorage, top.",
      "options": [
        {
          "text": "defaultStatus",
          "correct": false
        },
        {
          "text": "closed",
          "correct": false
        },
        {
          "text": "constructor",
          "correct": true
        },
        {
          "text": "frames",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not window object method?",
      "explanation": "Some of the window object methods are atob(), close(), focus(), blur(), alert(), clearInterval(), confirm(), btoa(), getComputedStyle(), open(), moveTo(), prompt(), matchMedia(), moveBy(), getSelection(), scroll(), setInterval(), stop(), setTimeout() etc.",
      "options": [
        {
          "text": "blur()",
          "correct": false
        },
        {
          "text": "close()",
          "correct": false
        },
        {
          "text": "confirm()",
          "correct": false
        },
        {
          "text": "unescape()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not navigator object property?",
      "explanation": "The navigator object properties are appVersion, cookieEnabled, appCodeName, geolocation, appName, product, userAgent, platform, online, language. Engine name of the browser is returned by product and the language of the browser is returned by language.",
      "options": [
        {
          "text": "appVersion",
          "correct": false
        },
        {
          "text": "geolocation",
          "correct": false
        },
        {
          "text": "document",
          "correct": true
        },
        {
          "text": "cookieEnabled",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is the Navigator object method?",
      "explanation": "There are two navigator object methods namely taintEnabled() and javaEnabled(). taintEnabled() the ability of the browser of data tainting. This method can’t be used in JavaScript 1.2 version. javaEnabled() method specifies whether Java is enabled in the browser or not.",
      "options": [
        {
          "text": "javaEnabled()",
          "correct": true
        },
        {
          "text": "moveBy()",
          "correct": false
        },
        {
          "text": "scroll()",
          "correct": false
        },
        {
          "text": "stop()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not screen object property?",
      "explanation": "The screen object properties are availWidth, pixelDepth, width, height, colorDepth, availDepth. The total width of the screen is returned by width, height returns the total height of the screen, pixelDepth returns color resolution of the screen in pixels.",
      "options": [
        {
          "text": "width",
          "correct": false
        },
        {
          "text": "colorDepth",
          "correct": false
        },
        {
          "text": "pixelDepth",
          "correct": false
        },
        {
          "text": "language",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not the method of History object?",
      "explanation": "There are mainly three methods of history object, forward(), back() and go(). The next URL of history list is loaded by calling forward() function. The previous URL in the history list is loaded by back() method. A specific URL from history list is loaded by go() method.",
      "options": [
        {
          "text": "go()",
          "correct": false
        },
        {
          "text": "moveBy()",
          "correct": true
        },
        {
          "text": "forward()",
          "correct": false
        },
        {
          "text": "back()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not the location object method?",
      "explanation": "assign(), replace(), reload() are the location object methods. A new document is loaded by calling assign() method. The current document is replaced by the new one by calling replace() method. Current document is reloaded by reload() method.",
      "options": [
        {
          "text": "stop()",
          "correct": true
        },
        {
          "text": "reload()",
          "correct": false
        },
        {
          "text": "assign()",
          "correct": false
        },
        {
          "text": "replace()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not the property of location object?",
      "explanation": "The properties of location object are host, origin, port, pathname, hostname, href, hash, protocol, search. The port number of URL is set by port. The entire URL is set by href, path name of URL is set by pathname property, protocol of URL is set by protocol property.",
      "options": [
        {
          "text": "origin",
          "correct": false
        },
        {
          "text": "port",
          "correct": false
        },
        {
          "text": "host",
          "correct": false
        },
        {
          "text": "geolocation",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not DOM property?",
      "explanation": "Properties of DOM method are: document.anchors, document.applets, document.baseURI, document.body, document.cookie, document.doctype, document.documentElement, document.documentMode, document.documentURI, document.domain, document.domConfig, document.embeds, document.forms, document.head, document.images, document.implementation, document.inputEncoding, document.lastModified, document.links, document.readyState, document.referrer, document.scripts, document.strictErrorChecking, document.title and document.URL.",
      "options": [
        {
          "text": "document.anchors",
          "correct": false
        },
        {
          "text": "document.cookie",
          "correct": false
        },
        {
          "text": "document.body",
          "correct": false
        },
        {
          "text": "document.origin",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For explaining, which new technology is used?",
      "explanation": "When for the first time when we explain any new terminology like any jargon or any academic concept in the document we use <dfn> It is defining an instance of it. It is used for defining an instance of a new term. In some browsers, the content of <dfn> are shown in italics but in Chrome and Safari, nothing will be changed. Title of work is defined by <cite>. <abbr> is for abbreviation. Information about author or owner is provided by <address>.",
      "options": [
        {
          "text": "<dfn>",
          "correct": true
        },
        {
          "text": "<cite>",
          "correct": false
        },
        {
          "text": "<abbr>",
          "correct": false
        },
        {
          "text": "<address>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element indicates about something which is no longer accurate?",
      "explanation": "<s> indicates about something that is no longer relevant or accurate. It should also not to be deleted. The content of this element is displayed a line through the center. In older versions of HTML it had <u> element for the content to be underlined, but now it is no longer in use. Information about author or owner is provided by <address>. A text which has been inserted into a document is defined by a <ins>. <del> describes a text that has been deleted from a document.",
      "options": [
        {
          "text": "<s>",
          "correct": true
        },
        {
          "text": "<ins>",
          "correct": false
        },
        {
          "text": "<del>",
          "correct": false
        },
        {
          "text": "<address>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Metadata does not define _________",
      "explanation": "Metadata define character set, title of the document, links, styles, scripts and other meta information. E.g. <!doctype html> <html> <title> The Code </title> <meta charset= “UTF-8”> </head> <body>.",
      "options": [
        {
          "text": "character set",
          "correct": false
        },
        {
          "text": "links",
          "correct": false
        },
        {
          "text": "scripts",
          "correct": false
        },
        {
          "text": "color",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "In HTML5 which element defines thematic change in the content?",
      "explanation": "For thematic change in the content <hr> tag is used. It is also used to separate content or for defining a change in any HTML page. All the browsers like Internet Explorer, Firefox, Opera, Chrome, Safari supports this element.",
      "options": [
        {
          "text": " <hr>",
          "correct": true
        },
        {
          "text": "<h1>",
          "correct": false
        },
        {
          "text": "<head>",
          "correct": false
        },
        {
          "text": "<p>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element defines preformatted text?",
      "explanation": "<p> defines paragraph/text.\nelement is used for horizontal/thematic break. Preformatted test is defined by <pre> element. The text written inside this element will be displayed in fixed-width font. It also preserves line breaks and spaces. E.g.\n This is the first line.  </pre>.  A text which has been inserted into a document is defined by a <ins>.. ",
      "options": [
        {
          "text": "<p>",
          "correct": false
        },
        {
          "text": "<pre>",
          "correct": true
        },
        {
          "text": "<hr>",
          "correct": false
        },
        {
          "text": "<ins>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used for creating links?",
      "explanation": "<a> element is used for creating links. We can click anything written between opening <a> tag and closing </a> tag. E.g. <a href= “http://www.gmail.com”> GMAIL </a>. The text written between <a> and </a> is called link text. <p></p> defines paragraph. <li> specifies list of item. <ol> is ordered list which can be either numerically or alphabetically.",
      "options": [
        {
          "text": "<a>",
          "correct": true
        },
        {
          "text": "<p>",
          "correct": false
        },
        {
          "text": "<li>",
          "correct": false
        },
        {
          "text": "<ol>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Relative URLs are used to ____________",
      "explanation": "Relative URLs are used for linking other pages within the same site. These are the shorthand version of absolute URLs. It does not need a domain name. These URLs are helpful when building a site on a computer because we can create links between pages without having set up for hosting or domain name.",
      "options": [
        {
          "text": "link other pages within the same site",
          "correct": true
        },
        {
          "text": "link the same page with other sites",
          "correct": false
        },
        {
          "text": "link other pages with other sites",
          "correct": false
        },
        {
          "text": "does not link",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the color of an unvisited link?",
      "explanation": "In all browsers by default the color of an unvisited link is blue. The color of a visited link is purple. The color of the active link is red. The link is underlined by default. E.g. www.google.com  We can also change these default colors by the use of style.",
      "options": [
        {
          "text": "red",
          "correct": false
        },
        {
          "text": "blue",
          "correct": true
        },
        {
          "text": "purple",
          "correct": false
        },
        {
          "text": "green",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is not the value of the target attribute?",
      "explanation": "Where to open linked document is specified by target attribute. It can have the values _blank, _top, _parent, _self, framename. _blank opens linked document is a new tab or window. The linked document is opened in the parent frame by _parent. Linked document is opened in a named frame by framename. Linked document is opened in the same window by _self.",
      "options": [
        {
          "text": "_blank",
          "correct": false
        },
        {
          "text": "_top",
          "correct": false
        },
        {
          "text": "_self",
          "correct": false
        },
        {
          "text": "_empty",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the path for an image located in same folder as the current page?",
      "explanation": "The path <img src= “pic.jpg”> indicates that pic.jpg is located in same folder as current page. The path <img src= “images/pic.jpg”> indicates that pic.jpg is located in current folder. The path <img src= “/images/pic.jpg”> is located in images folder at root of current web. The path <img src= “../pic.jpg”> indicates that pic.jpg is located in folder one level up from current folder.",
      "options": [
        {
          "text": "<img src= “pic.jpg”>",
          "correct": true
        },
        {
          "text": "<img src= “../pic.jpg”>",
          "correct": false
        },
        {
          "text": "<img src= “images/pic.jpg”>",
          "correct": false
        },
        {
          "text": "<img src= “/images/pic.jpg”>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " File paths are not used for linking in _________",
      "explanation": "The location of a file in web site’s folder structure is described by file path. File paths are used for linking to external files like Images, JavaScripts, Web Pages, Style sheets. The full URL to internet file is an absolute file path.",
      "options": [
        {
          "text": "JavaScripts",
          "correct": false
        },
        {
          "text": "PHP",
          "correct": true
        },
        {
          "text": "Style Sheets",
          "correct": false
        },
        {
          "text": "Images",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For defining bookmarks in a page we use __________",
      "explanation": "id attribute is used for defining bookmarks in a page. For linking to the bookmark we use href attribute. Target attribute is used to define where to open a linked document. <a> element is used to define a link.",
      "options": [
        {
          "text": "href",
          "correct": false
        },
        {
          "text": "id",
          "correct": true
        },
        {
          "text": "target",
          "correct": false
        },
        {
          "text": "<a>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used for List items?",
      "explanation": "li is for the list items. The list is indented by default by the browser. <li> is written inside <ol> element having opening <li> tag and closing </li> tag. Sometimes <ol> can also include type attribute which defines type of numbering. <ol> represents a ordered list where as <ul> is unordered list. A description list is specified by <dl> tag.",
      "options": [
        {
          "text": "<li>",
          "correct": true
        },
        {
          "text": "<ol>",
          "correct": false
        },
        {
          "text": "<ul>",
          "correct": false
        },
        {
          "text": "<dl>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element contains definition?",
      "explanation": "<dd> element is used to contain definition. The definition list is created by using <dl> element. Inside <dl> element we can have pairs of <dd> and <dt> elements. <dt> contains the term being defined. <ul> is unordered list. A description list is specified by <dl> tag. <dt> tag is a term in description list.",
      "options": [
        {
          "text": "<dl>",
          "correct": false
        },
        {
          "text": "<dd>",
          "correct": true
        },
        {
          "text": "<dt>",
          "correct": false
        },
        {
          "text": "<ul>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following can’t be the value of list-style-type?",
      "explanation": "list-style-property is used for defining the style of list item marker. Its value can be square, circle, disc or none. For setting list item marker to be bullet we use the value disc. It is the default value. For setting list item marker to a circle we used the circle, for setting it to be square we set the value square. If we set the value none, list items will not be marked.",
      "options": [
        {
          "text": "square",
          "correct": false
        },
        {
          "text": "circle",
          "correct": false
        },
        {
          "text": "ellipse",
          "correct": true
        },
        {
          "text": "disc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For displaying a list horizontally, we can use ______________",
      "explanation": "If we want to display the list horizontally we can use display:inline or float:left. It will create a menu. E.g. ul {list-style-type: none; padding:0; overflow:hidden; } li {float:left} li g{ display: block; color:red; padding: 20px;}. <dd> element is used to contain definition. <dt> tag is a term in description list.",
      "options": [
        {
          "text": "<dd>",
          "correct": false
        },
        {
          "text": "display:inline",
          "correct": true
        },
        {
          "text": "<dt>",
          "correct": false
        },
        {
          "text": "type",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute is only used with <ol>?",
      "explanation": "The number attribute is only used with <ol>. The starting number of the first item in an ordered list is specified by this attribute. The default number for starting is ‘1’. The corresponding labels can be non numeric even its value is set to numeric. The “start” and “type” attribute are removed from HTML4.01 but can be still used in HTML5 where as “compact” attribute is not used in HTML5.",
      "options": [
        {
          "text": "value",
          "correct": false
        },
        {
          "text": "type",
          "correct": false
        },
        {
          "text": "compact",
          "correct": false
        },
        {
          "text": "start",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is restricted to inline content?",
      "explanation": "<dt> element is restricted to inline content. In creation of a definition list the term is given by <dt> element. <dd> element contains block-level content. The description is given by <dd> element. <dl> is also used for marking up the dialogues.",
      "options": [
        {
          "text": "<dt>",
          "correct": true
        },
        {
          "text": "<dd>",
          "correct": false
        },
        {
          "text": "<ul>",
          "correct": false
        },
        {
          "text": "<dl>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element was designed for creating multicolumn directory lists?",
      "explanation": "For the creation of multicolumn directory lists dir element was designed. For designing a single column menu list menu element was designed. They have the same structure as ul. It is just a different rendering. In practice, it works exactly as a ul list. <ol> represents a ordered list where as <ul> is unordered list. List of commands is defined by <menu> tag.",
      "options": [
        {
          "text": "menu",
          "correct": false
        },
        {
          "text": "dir",
          "correct": true
        },
        {
          "text": "ul",
          "correct": false
        },
        {
          "text": "ol",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The content property does not include __________",
      "explanation": "The content property includes Strings, URIs, Normal, None, Image, Counter and many more. When we are using these characters it is essential to encode them as their escaped HEX equivalents. These characters will work i.e. will only be visible in Mozilla/Netscape or in Opera.",
      "options": [
        {
          "text": "Strings",
          "correct": false
        },
        {
          "text": "URIs",
          "correct": false
        },
        {
          "text": "Normal",
          "correct": false
        },
        {
          "text": "Color",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which character is used to differentiating between choices to list items?",
      "explanation": "‘|’, a pipe character is used to differentiate between choices. It is a separating character. It can be emulated by adding borders to list items. E.g. #pipe ul li.first {margin-left: 0; list-style: none; margin-left: none; display: inline; }. Here we have added class=”first” so that it does not end up with a border on the left side.",
      "options": [
        {
          "text": "‘|’",
          "correct": true
        },
        {
          "text": "‘>’",
          "correct": false
        },
        {
          "text": "‘#’",
          "correct": false
        },
        {
          "text": "‘$’",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not true regarding to counter?",
      "explanation": "There are two functions for specifying counters, ‘counter()’ or ‘counter()’. First one has two forms ‘counter(name,style)’ and ‘counter(name)’. The second one also has two forms ‘counter(name,string,style)’ and ‘counter(name,string)’.",
      "options": [
        {
          "text": "counter(name,style)",
          "correct": false
        },
        {
          "text": "counter(name)",
          "correct": false
        },
        {
          "text": "counter(string)",
          "correct": true
        },
        {
          "text": "counter(name,string,style)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which property specifies the distance between nearest border edges of marker box and prinicipal box?",
      "explanation": "We can create markers by setting ‘display’ property. It specifies the distance between nearest border edges of marker box and the principal box associated with it. It can be user specified i.e. <length> or can be chosen by ‘auto’. Length can be negative also. Counter increment increments counter by value 1. list- style specifies it’s three types: 1)life-style-image 2)life-style-position 3)life-style-type. The list-style-image defines an image to be used as list item’s marker. It is stated as life-style-type.",
      "options": [
        {
          "text": "marker-offset",
          "correct": true
        },
        {
          "text": "counter increment",
          "correct": false
        },
        {
          "text": "list-style",
          "correct": false
        },
        {
          "text": "list-style-image",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "target attribute cannot have?",
      "explanation": "Target attribute can have values _blank, _self, _parent, _top and filename. _blank opens the linked document in a new tab window or tab, _self opens linked document in the same window, _parent opens linked document in the parent frame.",
      "options": [
        {
          "text": "_blank",
          "correct": false
        },
        {
          "text": "_self",
          "correct": false
        },
        {
          "text": "_parent",
          "correct": false
        },
        {
          "text": "_color",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following opens linked document in full body?",
      "explanation": "_parent opens linked document in parent frame, _top opens the linked document in full body of the window, framename opens the linked document in a named frame,\ne.g. <a href= https://www.sanfoundry.com/ target= “_parent”> Visit The site !! </a>.",
      "options": [
        {
          "text": "_blank",
          "correct": false
        },
        {
          "text": "_top",
          "correct": true
        },
        {
          "text": "_parent",
          "correct": false
        },
        {
          "text": "framename",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute is used to link the bookmark?",
      "explanation": "href attribute is used to link the bookmark. The id attribute is for defining bookmarks in a page, target attribute is for specifying where to open linked document i.e. in new tab, same frame, parent frame, full body of the window etc.",
      "options": [
        {
          "text": "href",
          "correct": true
        },
        {
          "text": "id",
          "correct": false
        },
        {
          "text": "target",
          "correct": false
        },
        {
          "text": "<img>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following sets the color of a link before it has been clicked on?",
      "explanation": "LINK set the color of a link before it has been clicked on, ALINK set the color of a link when a link is clicked on, VLINK set the color of a link after it has been clicked on, here A and V stands for Active and Visited.",
      "options": [
        {
          "text": "ALINK",
          "correct": false
        },
        {
          "text": "LINK",
          "correct": true
        },
        {
          "text": "VLINK",
          "correct": false
        },
        {
          "text": "ULINK",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is used for specifying an email to be sent?",
      "explanation": "Target attribute is for specifying where to open linked document i.e. in a new tab, same frame, parent frame, full body of the window etc. We use mailto: with <a> and href for specifying the email address that we want to be sent to. It will open a new email message and address to a person specified in the link. The email link will appear like a normal link. The id attribute is for defining bookmarks in a page.",
      "options": [
        {
          "text": "mailto:",
          "correct": true
        },
        {
          "text": "target",
          "correct": false
        },
        {
          "text": "id",
          "correct": false
        },
        {
          "text": "href",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the parameter for email link?",
      "explanation": "There are various parameters used for email links like mailto, bcc, body, cc, subject, ‘&’, ‘?’. mailto: is used for e-mail recipient address, bcc is for blind carbon copy mail address, cc is for carbon copy e-mail address, subject is for the subject of the e-mail, ‘?’ is first parameters delimiter.",
      "options": [
        {
          "text": "body",
          "correct": false
        },
        {
          "text": "bcc",
          "correct": false
        },
        {
          "text": "cc",
          "correct": false
        },
        {
          "text": "#",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is used for space character?",
      "explanation": "%50 represent a capital letter P. %60 specifies “`” symbol. %20 represents space character.\n",
      "options": [
        {
          "text": "%50",
          "correct": false
        },
        {
          "text": "%60",
          "correct": false
        },
        {
          "text": "%20",
          "correct": true
        },
        {
          "text": "%10",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What will add line break in the body of mail?",
      "explanation": "%20 represents space character. A data link escape is shown by %10. %0D%0A will add a newline in the text of the body.\n<a href=\"mailto:enquiry@sanfoundry.com?body=Hello%0D%0AEveryone!!\">Send mail</a>",
      "options": [
        {
          "text": "%20",
          "correct": false
        },
        {
          "text": "%0D%0A",
          "correct": true
        },
        {
          "text": "%0h%0A",
          "correct": false
        },
        {
          "text": "%10",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "which extension flash file is to be saved?",
      "explanation": "The flash file created in flash authoring environment, it is saved with .fla extension. If we want to use this file on a web page it has to be saved in a different format known as SWF. Its extension is .swf",
      "options": [
        {
          "text": ".fla",
          "correct": true
        },
        {
          "text": ".swf",
          "correct": false
        },
        {
          "text": ".jpg",
          "correct": false
        },
        {
          "text": ".gif",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For exporting movie into SWF format which element is used?",
      "explanation": "We use <object> and <embed> elements for exporting movie into SWF format.  A code is created by flash that can be used to embed Flash movie into the page. Traditionally these elements were used but now JavaScript has taken their place.",
      "options": [
        {
          "text": "<object>",
          "correct": true
        },
        {
          "text": "<video>",
          "correct": false
        },
        {
          "text": "<datalist>",
          "correct": false
        },
        {
          "text": "<dd>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which plugin is used to view Flash?",
      "explanation": "For viewing Flash the browser needs to use a plugin. A plugin is an extra piece of software that can be run in a browser. Here the plugin which is used is Flash Player. It is very common that 98% of the browsers have already Flash plugin installed inside.",
      "options": [
        {
          "text": "Firebug",
          "correct": false
        },
        {
          "text": "Flash Player",
          "correct": true
        },
        {
          "text": "Widget",
          "correct": false
        },
        {
          "text": "Zotero",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following does not support flash?",
      "explanation": "Apple launched the iPhone in 2007 and launched an iPad in 2010, they decided not to support Flash. Flash content has been criticized because Flash content is not always accessible. In 2008 <video> and <audio> tags are supported by the browsers in HTML5.",
      "options": [
        {
          "text": "iPhone",
          "correct": true
        },
        {
          "text": "android",
          "correct": false
        },
        {
          "text": "windows",
          "correct": false
        },
        {
          "text": "linux",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is used for adding Flash in the web page?",
      "explanation": "One of the most popular for adding Flash to the web page is using JavaScript. There is no need to understand this language in depth because there are many scripts already available that are available to do this.",
      "options": [
        {
          "text": "CSS",
          "correct": false
        },
        {
          "text": "jQuery",
          "correct": false
        },
        {
          "text": "PHP",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is not used inside the <script> tag in Flash videos?",
      "explanation": "There are five attributes that can be used inside the <script> tag in Flash videos namely width, height, version, location and replace. The minimum version of the Flash player needed to view the movie is specified by version. Width and Height of Flash movie are specified by width, height. The location of .swf file is specified by location.",
      "options": [
        {
          "text": "replace",
          "correct": false
        },
        {
          "text": "location",
          "correct": false
        },
        {
          "text": "version",
          "correct": false
        },
        {
          "text": "id",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is not the online video format available?",
      "explanation": "Online there are movies available in many formats like Ogg Theora, WebM, QuickTime, AVI, Flash Video, MPEG, Windows Media etc. There are also some of the offline formats like DVD, VHS, BlueRay etc.",
      "options": [
        {
          "text": "Ogg Theora",
          "correct": false
        },
        {
          "text": "VHS",
          "correct": true
        },
        {
          "text": "WebM",
          "correct": false
        },
        {
          "text": "H264",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For playing Flash Video you need to convert video into the ___________ format.",
      "explanation": "For playing Flash video one must convert the video into FLV format. Flash 6, the Flash authoring environment comes with Flash Video Encoder to convert the videos into FLV formats. It also supports H264 format.",
      "options": [
        {
          "text": "FLV",
          "correct": true
        },
        {
          "text": "BlueRay",
          "correct": false
        },
        {
          "text": "WebM",
          "correct": false
        },
        {
          "text": "MPEG",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following site will provide FLV player?",
      "explanation": "We need a player written in Flash for playing FLV files. The main purpose of it is to hold FLV movie and add controls like pause/play. There are two sites that offer FLV players www.longtailvideo.com and www.osflv.com",
      "options": [
        {
          "text": "www.longtailvideo.com",
          "correct": true
        },
        {
          "text": "www.fotolia.com",
          "correct": false
        },
        {
          "text": "www.sxc.com",
          "correct": false
        },
        {
          "text": "www.pixlr.com",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " WebM format is not supported by _______",
      "explanation": "Not all the browsers support the same video formats. WebM is supported by Chrome, Opera, Android and Firefox. Internet Explorer and Safari support H264 format very easily. Some Flash player also supports H264 format and WebM.",
      "options": [
        {
          "text": "Opera",
          "correct": false
        },
        {
          "text": " Android",
          "correct": false
        },
        {
          "text": "Safari",
          "correct": true
        },
        {
          "text": "Firefox",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which attribute allows to show an image while downloading a video?",
      "explanation": "The poster attribute allows us to specify an image to show at the time of downloading of video or until the user tells the video to play. Controls attributes indicate that browser should supply its own controls for playback the video.",
      "options": [
        {
          "text": "controls",
          "correct": false
        },
        {
          "text": "poster",
          "correct": true
        },
        {
          "text": "preload",
          "correct": false
        },
        {
          "text": "none",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " codecs is used with _______",
      "explanation": "In multiple video sources we use codec which is used to encode the video. It is supplied within type attribute.\nE.g. <video> <source src=”video/tommy.mp4” type= ‘video/mp4;codecs= “fyty.42E01E. mp4a.40.2”’ /> </video>",
      "options": [
        {
          "text": "type",
          "correct": true
        },
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "auto",
          "correct": false
        },
        {
          "text": "loop",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What can’t be the value of a quality attribute?",
      "explanation": "The quality parameter can have values including “low”, “medium”, “best”, “high”, “autohigh”, “autolow”. When it is set to “low” videopalyer will favor playback speed of video clip and anti aliasing will not be used.",
      "options": [
        {
          "text": "autolow",
          "correct": false
        },
        {
          "text": "low",
          "correct": false
        },
        {
          "text": "high",
          "correct": false
        },
        {
          "text": "automedium",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is the best format to use in Firefox?",
      "explanation": ".OGG format is the best for the use in Firefox. We can use VLC to convert the video into this format. .FLV and .SWF is not supported by all the browsers. .MP4 is supported by Safari and Chrome at its best.",
      "options": [
        {
          "text": ".MP4",
          "correct": false
        },
        {
          "text": ".FLV",
          "correct": false
        },
        {
          "text": ".OGG",
          "correct": true
        },
        {
          "text": ".SWF",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Full screen support will not work in ____________",
      "explanation": "The full-screen is not supported by Chrome and Safari. In Firefox 3.6 we can view the full screen by the right-click. Rest of the browsers do support the full-screen property of the video.",
      "options": [
        {
          "text": "Safari",
          "correct": true
        },
        {
          "text": "Firefox",
          "correct": false
        },
        {
          "text": "Internet Explorer",
          "correct": false
        },
        {
          "text": "Opera",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following works as a sidebar?",
      "explanation": "<aside> defines content aside from the content like a sidebar, <footer> defines a footer for a document or a section, <details> defines additional details, <section> defines a section in a document.",
      "options": [
        {
          "text": "<aside>",
          "correct": true
        },
        {
          "text": "<footer>",
          "correct": false
        },
        {
          "text": "<details>",
          "correct": false
        },
        {
          "text": "<section>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following can’t be the value of float property?",
      "explanation": "float property can have the property left, right, none, inherit. When set to inherit value the element inherits the float value of its parent, when set to none property the element does not float, it is the default value.",
      "options": [
        {
          "text": "left",
          "correct": false
        },
        {
          "text": "right",
          "correct": false
        },
        {
          "text": "center",
          "correct": true
        },
        {
          "text": "inherit",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following can’t be the value of a clear property?",
      "explanation": "clear property specifies what elements can float beside cleared element and on which side. It can hold the values none, left, right, both and inherit. The inherit property inherits the clear value of its parent when setting to both no floating elements allowed on either the left and right side.",
      "options": [
        {
          "text": "left",
          "correct": false
        },
        {
          "text": "inherit",
          "correct": false
        },
        {
          "text": "right",
          "correct": false
        },
        {
          "text": "center",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following specifies what happens if content overflow an element’s box?",
      "explanation": "overflow property specifies what happens if content overflows an element’s box, overflow-x specifies what to do with left/right edges of the content if it overflows the element’s content area, overflow-y specifies what to do with top/bottom edges of the content if it overflows the element’s content area.",
      "options": [
        {
          "text": "overflow",
          "correct": true
        },
        {
          "text": "overflow-x",
          "correct": false
        },
        {
          "text": "overflow-y",
          "correct": false
        },
        {
          "text": "float",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following was not previous layout mode?",
      "explanation": "Before Flexbox layout module there were four layout modes. Block, Inline, Table, Positioned. Block is for sections in a webpage, inline is for text, table is for two dimensional table data, positioned is for explicit position of an element.",
      "options": [
        {
          "text": "Block",
          "correct": false
        },
        {
          "text": "Flexbox layout",
          "correct": true
        },
        {
          "text": "Inline",
          "correct": false
        },
        {
          "text": "Positioned",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which property defines in which direction the container wants to stack flex items?",
      "explanation": "flex-direction property defines in which direction the container wants to stack the flex items, the flex-flow property is shorthand property for setting both flex-direction and flex-wrap properties. For deciding whether the flexible items should wrap or not, flex-wrap property is used.",
      "options": [
        {
          "text": "flex-flow",
          "correct": false
        },
        {
          "text": "flex-wrap",
          "correct": false
        },
        {
          "text": "flex-direction",
          "correct": true
        },
        {
          "text": "align-content",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which property is used to align flex items?",
      "explanation": "justify-content property is used to align flex items, the align-items property is used to align flex items vertically, the align-content property is used to align flex lines, flex-grow specifies how much a flex item will grow relative to rest of flex items.",
      "options": [
        {
          "text": "align-items",
          "correct": false
        },
        {
          "text": "justify-content",
          "correct": true
        },
        {
          "text": "align-content",
          "correct": false
        },
        {
          "text": "flex-grow",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following specifies initial length of flex item?",
      "explanation": "flex-basis property specifies the initial length of the flex item, flex-shrink property specifies how much a flex item will shrink relative to rest of flex items, the value must be a number and a default value is 1. The flexible-grow property is a relative comparison between the items. It decides how much item will grow relative to the rest of flexible items inside the same container.",
      "options": [
        {
          "text": "flex-flow",
          "correct": false
        },
        {
          "text": "flex-grow",
          "correct": false
        },
        {
          "text": "flex-shrink",
          "correct": false
        },
        {
          "text": "flex-basis",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following overrides container’s align-items property?",
      "explanation": "align-self property is used on flex items, it overrides container’s align-items property, flex is shorthand property for flex-grow, flex-shrink, and flex-basis properties, the order specifies the order of flexible item relative to rest of the flex items inside the same container.",
      "options": [
        {
          "text": "order",
          "correct": false
        },
        {
          "text": "align-self",
          "correct": true
        },
        {
          "text": "align-items",
          "correct": false
        },
        {
          "text": "flex",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following contains information about the author?",
      "explanation": "Footer for its nearest sectioning content or sectioning root element is represented by <footer> element. It typically contains information about author of the section, links to related documents or copyright data. An introductory content lies in <header>. <head> is container for all head elements. A document’s body is defined by <body> tag.",
      "options": [
        {
          "text": "<footer>",
          "correct": true
        },
        {
          "text": "<header>",
          "correct": false
        },
        {
          "text": "<head>",
          "correct": false
        },
        {
          "text": "<body>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Header element does not contain ___________",
      "explanation": "<header> element contains one or more than one heading elements, authorship information, logo or icon. <header> tag can’t be placed inside <address> or <footer> or inside another <header> element.",
      "options": [
        {
          "text": "logo",
          "correct": false
        },
        {
          "text": "<address>",
          "correct": true
        },
        {
          "text": "heading elements",
          "correct": false
        },
        {
          "text": "authorship information",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element contains major navigational block?",
      "explanation": "The major navigational blocks on site like primary site navigation is contained by <nav> element.\n E.g. \n<nav>\n<ul>\n<li><a href=\"https://www.sanfoundry.com/\" class= “dream”>HTML</a> </li>\n<li><a href=\"https://www.sanfoundry.com/\">CSS</a> </li>\n<li><a href=\"https://www.sanfoundry.com/\">PHP</a> </li>\n</ul>\n</nav>\nFooter typically contains information about author of the section, links to related documents or copyright data. An introductory content lies in <header>. Contact information of author/owner of a document can be provided by <address> tag.",
      "options": [
        {
          "text": "<nav>",
          "correct": true
        },
        {
          "text": "<address>",
          "correct": false
        },
        {
          "text": "<footer>",
          "correct": false
        },
        {
          "text": "<header>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element represents self-contained composition in document?",
      "explanation": "A self-contained composition in document, application, page or site that is intended to be independently distributable is represented by <article> element. Some of the examples are a magazine or newspaper article or a forum post, or a blog entry. <nav> element contains all the nevigation links. Footer typically contains information about author of the section, links to related documents or copyright data.  An introductory content lies in <header>.",
      "options": [
        {
          "text": "<nav>",
          "correct": false
        },
        {
          "text": "<header>",
          "correct": false
        },
        {
          "text": "<footer>",
          "correct": false
        },
        {
          "text": "<article>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element is used as a container for content?",
      "explanation": "<aside> element can be used inside <article> or outside it also. When it is used inside <aticle> it contains information that is related to article. When <aside> is used outside <article>, it acts as container for content that is related to the whole page. Contact information of author/owner of a document can be  provided by <address> tag. Footer typically contains information about author of the section, links to related documents or copyright data.",
      "options": [
        {
          "text": "<aside>",
          "correct": true
        },
        {
          "text": "<article>",
          "correct": false
        },
        {
          "text": "<address>",
          "correct": false
        },
        {
          "text": "<footer>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element groups related content together?",
      "explanation": "Grouping of related content together is done by <section> element. Each section will have its own heading. This element should not be used as wrapper for entire page. If we wish of containing a element for entire page, this will be best done by <div> element. Footer typically contains information about author of the section, links to related documents or copyright data. <aside> is a container of contetnt related to it’s surrounding. For grouping together related elements we use <div> element.",
      "options": [
        {
          "text": "<aside>",
          "correct": false
        },
        {
          "text": "<footer>",
          "correct": false
        },
        {
          "text": "<section>",
          "correct": true
        },
        {
          "text": "<div>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For grouping together one or more <h1> to <h6> element what element is used?",
      "explanation": "For grouping together set of one or more <h1> to <h6> element we use <hgroup> element. We can group together the primary heading and the subheading. E.g. <hgroup> <h2> Winter is coming!</h2> <h3>Its too cold</h3> </hgroup>. Grouping of related content together is done by <section> element. For grouping together related elements we use <div> element. An introductory content lies in <header>.",
      "options": [
        {
          "text": "<header>",
          "correct": false
        },
        {
          "text": "<hgroup>",
          "correct": true
        },
        {
          "text": "<div>",
          "correct": false
        },
        {
          "text": "<section>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used for grouping together related elements?",
      "explanation": "For grouping together related elements we use <div> element. Anything that lies outside of <footer>, <aside> or <content> elements can be considered as main content. E.g. <div class= “wrap”> <header> <h1> kitchen </h1> </div>. Grouping of related content together is done by <section> element. An introductory content lies in <header>. For grouping together set of one or more <h1> to <h6> element we use <hgroup> element.",
      "options": [
        {
          "text": "<div>",
          "correct": true
        },
        {
          "text": "<hgroup>",
          "correct": false
        },
        {
          "text": "<section>",
          "correct": false
        },
        {
          "text": "<header>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which browser was the first that allows CSS rules to be associated with new HTML5 layout elements?",
      "explanation": "Internet Explorer was the first version that allowed CSS rules to be associated with new HTML5 layout elements. Older browsers that do not know new HTML5 elements will by default treat them as inline elements.",
      "options": [
        {
          "text": "Internet Explorer 9",
          "correct": true
        },
        {
          "text": "Internet Explorer 7",
          "correct": false
        },
        {
          "text": "Chrome",
          "correct": false
        },
        {
          "text": "Firefox",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used for or styling HTML5 layout?",
      "explanation": "For styling HTML5, CSS i.e Cascading Style Sheet is used. It is style sheet language and designed to describe presentation of its content including layouts, colors and fonts. CSS can control the layout of multiple web pages.",
      "options": [
        {
          "text": "PHP",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": false
        },
        {
          "text": "CSS",
          "correct": true
        },
        {
          "text": "jQuery",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which syntax will cause IE to recognize section element?",
      "explanation": "document.createElement(“section”) will cause Internet Explorer to recognize section element all of a sudden. There is no any reason behind this working but it works. We do not even need to use node that is returned by that function.",
      "options": [
        {
          "text": "getElementById(“section”)",
          "correct": false
        },
        {
          "text": "createElement.document(“section”)",
          "correct": false
        },
        {
          "text": "document.createElement(“section”)",
          "correct": true
        },
        {
          "text": "document.createElement(“<section>”)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Dirty Markup will not validate ___________",
      "explanation": "Linter application will point out the errors and can flag up the warning about bad practices in CSS. There is so many online linter application. Dirty Markup is the best one used for JavaScript, CSS, and HTML. CSS Lint is for CSS only. Dirty Markup also provides to fix your markup using a clean button.",
      "options": [
        {
          "text": "CSS",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": false
        },
        {
          "text": "PHP",
          "correct": true
        },
        {
          "text": "HTML",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For handling CSS prefixes Chrome uses ___________",
      "explanation": "Handling CSS prefixes is a mechanism originally used to allow browser vendors to implement their own version of CSS. Mozilla uses –moz-, Microsoft uses –ms-, Chrome, Safari, Opera uses –webkit-.",
      "options": [
        {
          "text": "–ms-",
          "correct": false
        },
        {
          "text": "–webkit-",
          "correct": true
        },
        {
          "text": "–moz-",
          "correct": false
        },
        {
          "text": "–chr-",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following will add prefix automatically?",
      "explanation": "We can add prefixes automatically during the time of development. This can be done using tools like PostCSS and Autoprefixer. Autoprefixer has an online version that allows to enter non-prefixed CSS on left, and gives prefix-added version on the right. Gulp is an open source kit for js i.e. JavaScript. A javascript utility that emulates CSS3 pseudoclasses and attribute selectors are called selectivizr. Moo Tool is a javascript framework which is object oriented.",
      "options": [
        {
          "text": "Gulp",
          "correct": false
        },
        {
          "text": "PostCSS",
          "correct": true
        },
        {
          "text": "Selectivizr",
          "correct": false
        },
        {
          "text": "MooTools",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The search that can’t be targeted by SEO is _______",
      "explanation": "SEO stands for Search Engine Optimization. SEO can target different kinds of search including video search, image search, academic search, industry specific vertical search, news search. It differs from local search engine optimization. Optimization of a website includes editing its content, doing HTML, and associated coding to increase its relevance to specific keywords.",
      "options": [
        {
          "text": "video search",
          "correct": false
        },
        {
          "text": "image search",
          "correct": false
        },
        {
          "text": "academic search",
          "correct": false
        },
        {
          "text": "audio search",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following does not use a crawler to find pages for the search result?",
      "explanation": "Leading search engines like Bing, Google and Yahoo use crawlers for finding pages for the algorithmic search results. Pages linked from other search engine indexed pages do not need to be submitted because they are found by default.",
      "options": [
        {
          "text": "Bing",
          "correct": false
        },
        {
          "text": "Backrub",
          "correct": true
        },
        {
          "text": "Yahoo",
          "correct": false
        },
        {
          "text": "Google",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For keeping blog comment spam down we use ___________",
      "explanation": "nofollow attribute is used for comments in blogs to keep blog comment spam down. This tag was created to keep spammy users away. This attribute tells Google and other search engines to not follow the link to the next page. Heading contains tag starting from h1 to h6. Title of the document is defined by title which is helpful for search engines. Meta is something related to data i.e like information of data.",
      "options": [
        {
          "text": "nofollow",
          "correct": true
        },
        {
          "text": "meta",
          "correct": false
        },
        {
          "text": "title",
          "correct": false
        },
        {
          "text": "heading",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " ‘Image Alt’ tags is not used for ____________",
      "explanation": "‘Image Alt’ tags should not be used for decorative images. It should be used for diagrams, Infographics, Photos of team members, Website logo, Images of merchandise and many other places where it’s an appropriate usage.",
      "options": [
        {
          "text": "diagrams",
          "correct": false
        },
        {
          "text": "screenshots",
          "correct": false
        },
        {
          "text": "decorative images",
          "correct": true
        },
        {
          "text": "infographics",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which tag is used for stopping duplicate content?",
      "explanation": "When we have a lot of web pages having similar content, this is a good way to stop duplicate content. This is also important to syndicate the content.\n E.g. <link rel= “canonical” href= http://www.fggytyuyj.com/>\nMeta elements like noindex and follow can also be used to stop duplicate content.\n",
      "options": [
        {
          "text": "canonical tag",
          "correct": true
        },
        {
          "text": "image alt tag",
          "correct": false
        },
        {
          "text": "nofollow",
          "correct": false
        },
        {
          "text": "meta",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which one of the following is used to identify an anchor link?",
      "explanation": "Lone Hash (#) is used to identify anchor link i.e. jump links. These are the links that let one jump to the piece of content on a page. Anything after this lone hash portion of URL is never sent to the server and automatically scroll to the first element and to the id which it matches.",
      "options": [
        {
          "text": "#",
          "correct": true
        },
        {
          "text": "#!",
          "correct": false
        },
        {
          "text": "#?",
          "correct": false
        },
        {
          "text": "&",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following map type is not supported by mapTypeId?",
      "explanation": "The map type that is to be displayed is specified by mapTypeId. The types that are supported are Satellite, Roadmap, Terrain and hybrid. E.g. mapTypeId: google.maps.MapTypeId.ROADMAP.",
      "options": [
        {
          "text": "Hybrid",
          "correct": false
        },
        {
          "text": "Terrain",
          "correct": false
        },
        {
          "text": "Roadmap",
          "correct": false
        },
        {
          "text": "Climatic map",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following defines properties for the map?",
      "explanation": "The variable mapOptions defines the properties of the map. Where to center the map is defined by center property, it uses longitude and latitude properties. To specify the zoom level for the map we use zoom property.",
      "options": [
        {
          "text": "mapOptions",
          "correct": true
        },
        {
          "text": "zoom",
          "correct": false
        },
        {
          "text": "center",
          "correct": false
        },
        {
          "text": "mapTypeId",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is not google map overlay?",
      "explanation": "The objects on the map that are bound to longitude/latitude coordinates are overlays. Google Maps has many types of overlays. Marker, Polygon, Polyline, Circle, Rectangle, Info Windows, Custom overlays etc.",
      "options": [
        {
          "text": "Polygon",
          "correct": false
        },
        {
          "text": "Polyline",
          "correct": false
        },
        {
          "text": "Eclipse",
          "correct": true
        },
        {
          "text": "Marker",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For single locations on a map, we use the overlay for _______",
      "explanation": "Marker specifies the single locations on the map. It can also display custom icon images. A series of straight lines on a map can be specified by Polyline. A series of a straight line with the “closed” shape is defined by Polygon.",
      "options": [
        {
          "text": "Marker",
          "correct": true
        },
        {
          "text": "Polygon",
          "correct": false
        },
        {
          "text": "Polyline",
          "correct": false
        },
        {
          "text": "Circle",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Polyline will not support the property  of _________",
      "explanation": "Polyline supports various properties like strokeColor, strokeWeight, editable, strokeOpacity, path. The several longitude or latitude coordinates for a line is specified by path. An opacity of the line is specified by strokeOpacity.",
      "options": [
        {
          "text": "Path",
          "correct": false
        },
        {
          "text": "StrokeOpacity",
          "correct": false
        },
        {
          "text": "Editable",
          "correct": false
        },
        {
          "text": "Fillcolor",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The property that is not supported by Polyline but by Polygon is __________",
      "explanation": "The properties supported by polygon are strokeColor, strokeWeight, editable, fillOpacity, fillColor, path, strokeCapacity. The hexadecimal color for the area within an enclosed region is specified by fillColor, the opacity to fill color is specified by fillOpacity.",
      "options": [
        {
          "text": "strokeWeight",
          "correct": false
        },
        {
          "text": "fillOpacity",
          "correct": true
        },
        {
          "text": "path",
          "correct": false
        },
        {
          "text": "editable",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The property which is not supported by the circle is _________",
      "explanation": "Circle supports the properties like radius, center, strokeOpacity, strokeCapacity, fillColor, fillOpacity, stokeOpacity, editable, specify google.maps.LatLng of center of circle, the radius of a circle is specified by radius. Opacity of stroke color is specified by strokeOpacity.",
      "options": [
        {
          "text": "path",
          "correct": true
        },
        {
          "text": "radius",
          "correct": false
        },
        {
          "text": "center",
          "correct": false
        },
        {
          "text": "fillColor",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The value of fillOpacity lies between __________",
      "explanation": "The value of fillOpacity lies between 0.0 and 1.0. The value of strokeOpacity also lies between 0.0 and 1.0, E.g path: Trip, strokeOpacity: 0.7, strokeWeight: 3, strokeColor: “#000FFF” .",
      "options": [
        {
          "text": "0.0 and 2.0",
          "correct": false
        },
        {
          "text": "0.0 and 1.0",
          "correct": true
        },
        {
          "text": "2.0 and 3.0",
          "correct": false
        },
        {
          "text": "3.0 and 4.0",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which one of the following is not the default control in google maps?",
      "explanation": "Google map has a default control set namely Pan, Zoom, Street view, MapType, Rotate, Overview map, scale. A slider or “+/-” buttons for controlling zoom level of the map. For panning the map we use pan control.",
      "options": [
        {
          "text": "Pan",
          "correct": false
        },
        {
          "text": "Street view",
          "correct": false
        },
        {
          "text": "MapType",
          "correct": false
        },
        {
          "text": "Climate map",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which control displays the current map viewport?",
      "explanation": "The control overview displays a thumbnail overview map which reflects the current map viewport within the wider area. A map scale element is displayed by scale control. Pegman icon that can be dragged to the map for enabling street view is displayed by this control. When a user wants to toggle between the maps (roadmap and satellite), Map Type is used.",
      "options": [
        {
          "text": "Scale",
          "correct": false
        },
        {
          "text": "Overview Map",
          "correct": true
        },
        {
          "text": "Street view",
          "correct": false
        },
        {
          "text": "MapType",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " MapTypeControlOptions field may not contain _______",
      "explanation": "For modifying control we use mapTypeControlOptions field. google.maps.MapTypeControlStyle.HORZONTAL_BAR displays a single button for each map type. google.maps.MapTypeControlStyle.DEFAULT displays default behavior. google.maps.MapTypeControlStyle.DROPDOWN_MENU helps in selecting map type via dropdown menu.",
      "options": [
        {
          "text": "google.maps.MapTypeControlStyle.HORZONTAL_BAR",
          "correct": false
        },
        {
          "text": "google.maps.MapTypeControlStyle.DEFAULT",
          "correct": false
        },
        {
          "text": "google.maps.MapTypeControlStyle.DROPDOWN_MENU",
          "correct": false
        },
        {
          "text": "google.maps.MapTypeControlStyle.LARGE",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Photographic map lies under the map type ____________",
      "explanation": "Photographic map lies under the map type satellite. Default 2D map and normal maps lie under the type roadmap. Photographic + city and roads names include hybrid maps. Maps with rivers, mountains etc. lies under the category terrain.",
      "options": [
        {
          "text": "satellite",
          "correct": true
        },
        {
          "text": "roadmap",
          "correct": false
        },
        {
          "text": "hybrid",
          "correct": false
        },
        {
          "text": "terrain",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following type will support 45 degree perspective view?",
      "explanation": "Satellite and hybrid type of map support 45 degree perspective imagery view for specified locations. The map will add a compass wheel around Pan control, it allows to rotate the image. There is a toggle control to display 45 degree perspective view.",
      "options": [
        {
          "text": "Terrain",
          "correct": false
        },
        {
          "text": "Hybrid",
          "correct": true
        },
        {
          "text": "Roadmap",
          "correct": false
        },
        {
          "text": "Climate map",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following method will return DOM object that contains map?",
      "explanation": "getDiv() method will return DOM object that contains map. Its return type is node. getCenter() will return lng/lat of center of the map. getTilt() method will return angle of incidence for aerial imagery in degrees. Current position is returned when getProjection() event is fired up.",
      "options": [
        {
          "text": "getCenter()",
          "correct": false
        },
        {
          "text": "getProjection()",
          "correct": false
        },
        {
          "text": "getDiv()",
          "correct": true
        },
        {
          "text": "gettilt()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which one of the following will set the viewport to contain given bounds?",
      "explanation": "fitBounds() method sets viewport to contain given bounds. Its parameters are LAtLngBounds. The return value of getBounds() is LatLng, LatLng. getHeading will return compass heading of the aerial imager. Its return type is number. The center of the map to the given LatLng can be changed by the panTo() event.",
      "options": [
        {
          "text": "fitBounds()",
          "correct": true
        },
        {
          "text": "getBounds()",
          "correct": false
        },
        {
          "text": "getHeading()",
          "correct": false
        },
        {
          "text": "panTo()",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the property of Map()?",
      "explanation": "There are three properties of map namely mapTypes, controls, overlayMapTypes. MapTypes is a registry of MapType which instances by string ID. Additional controls to attach to map is provided by controls.",
      "options": [
        {
          "text": "mapTypes",
          "correct": false
        },
        {
          "text": "controls",
          "correct": false
        },
        {
          "text": "overlayMapTypes",
          "correct": false
        },
        {
          "text": "zoom",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following event does not take a MouseEvent argument in Map()?",
      "explanation": "There are various events of Map() that takes MouseEvent as an argument. Some of them are dbclick, click, mouseout, mousemove, mouseover, rightclick. When a user clicks the map click event is fired and on double clicking on the map dbclick event is fired.",
      "options": [
        {
          "text": "dbclick",
          "correct": false
        },
        {
          "text": "drag",
          "correct": true
        },
        {
          "text": "click",
          "correct": false
        },
        {
          "text": "mouseover",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following event will be fired when a user drags the map?",
      "explanation": "The drag event will be fired repeatedly while the user drags the map. When the user stops dragging the map dragend event will be fired, dragstart event will be fired when a user starts dragging the map.",
      "options": [
        {
          "text": "dragend",
          "correct": false
        },
        {
          "text": "drag",
          "correct": true
        },
        {
          "text": "dragstart",
          "correct": false
        },
        {
          "text": "idle",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following event will be called when user’s mouse exits map container?",
      "explanation": "mouseout event will be called when user’s mouse exits mouse container, mouseover event will be called when the user’s mouse enters map container, mousemove event will be called when user’s mouse moves over the map.",
      "options": [
        {
          "text": "mouseout",
          "correct": true
        },
        {
          "text": "mouseover",
          "correct": false
        },
        {
          "text": "mousemove",
          "correct": false
        },
        {
          "text": "resize",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which event will be fired when the map changes size?",
      "explanation": "resize event will be fired when the map changes the size, zoom_changed event will be fired when map zoom property is changed, tilt_changed event will be fired when map tilt property changes, tilesloaded event will be fired when visible tiles have finished loading.",
      "options": [
        {
          "text": "tilesloaded",
          "correct": false
        },
        {
          "text": "zoom_changed",
          "correct": false
        },
        {
          "text": "tilt_changed",
          "correct": false
        },
        {
          "text": "resize",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which object will represent a Marker icon?",
      "explanation": "MarkerImage will represent a structure of a Marker icon or shadow image. The shape of the marker is defined by MarkerShape. Options for rendering the marker are shown by MarkerOptions. Marker object simply creates a Marker.",
      "options": [
        {
          "text": "Marker",
          "correct": false
        },
        {
          "text": "MarkerShape",
          "correct": false
        },
        {
          "text": "MarkerImage",
          "correct": true
        },
        {
          "text": "Marker",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which object shows options for rendering of scale control?",
      "explanation": "ScaleControlOptions provide options for rendering of scale control, ScaleControlStyle specifies kind of the scale control to display, RotateControlOptions shows options for rendering of rotate control, ControlPosition specifies placement of controls of map.",
      "options": [
        {
          "text": "ScaleControlOptions",
          "correct": true
        },
        {
          "text": "ScaleControlStyle",
          "correct": false
        },
        {
          "text": "RotateControlOptions",
          "correct": false
        },
        {
          "text": "ControlPosition",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following will provide options for rendering overview map control?",
      "explanation": "OverviewMapControlOptions will provide options for rendering of overview map control, MapTypeControlStyle will specify kind of map control to display. MapTypeControlOptions holds options to modify a control. Options for rendering pan control is given by PanControlOptions.",
      "options": [
        {
          "text": "MapTypeControlStyle",
          "correct": false
        },
        {
          "text": "OverviewMapControlOptions",
          "correct": true
        },
        {
          "text": "MapTypeControlOptions",
          "correct": false
        },
        {
          "text": "PanControlOptions",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which will specify placement of controls on map?",
      "explanation": "ControlPosition specifies placement of controls on map, StreetViewControlOptions provides options for rendering of street view control, ScaleControlStyle specifies kind of scale control to display, ScaleControlOptions lsit down options for rendering sacle control.",
      "options": [
        {
          "text": "ControlPosition",
          "correct": true
        },
        {
          "text": "StreetViewControlOptions",
          "correct": false
        },
        {
          "text": "ScaleControlStyle",
          "correct": false
        },
        {
          "text": "ScaleControlOptions",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following plug-in can’t be embedded by <object> element?",
      "explanation": "All the browsers support <object> element. It also defines an embedded object within the HTML document. It is used for embedding plug-ins like PDF readers, Flash Players, Java applets in the web page.",
      "options": [
        {
          "text": "Java applets",
          "correct": false
        },
        {
          "text": "Flash players",
          "correct": false
        },
        {
          "text": "PDF readers",
          "correct": false
        },
        {
          "text": "Map",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the prefix of all the browser-specific functions?",
      "explanation": "It is a convention that all of the browser specific functions have the prefix ‘”NPN” and all of the plug-in specific functions have the prefix “NPP”. Gecko calls plug-in API function NP_Initialize at the time when plug-in code first loaded.",
      "options": [
        {
          "text": "NPP",
          "correct": false
        },
        {
          "text": "UPP",
          "correct": false
        },
        {
          "text": "NPN",
          "correct": true
        },
        {
          "text": "GPN",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "When is the instance created, which plug-in API function is called?",
      "explanation": "NPP_New function is called by the browser when an instance is created. There can exist multiple instances of the same plug-in. There are two conditions for it first if there are multiple embedded objects on a single page, second if several browser windows are open.",
      "options": [
        {
          "text": "NPP_Destroy",
          "correct": false
        },
        {
          "text": "NPP_New",
          "correct": true
        },
        {
          "text": "NP_Shutdown",
          "correct": false
        },
        {
          "text": "NP_Initialize",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which function will be called when the last instance of a plug-in is deleted?",
      "explanation": "When the last instance of a plug-in is deleted Gecko calls the function NP_Shutdown. The plug-in code is unloaded from memory. Plug-ins consume no resources when not loaded, it only consumes a little disk space.",
      "options": [
        {
          "text": "NPP_Destroy",
          "correct": false
        },
        {
          "text": "NP_Initialize",
          "correct": false
        },
        {
          "text": "NPP_New",
          "correct": false
        },
        {
          "text": "NP_Shutdown",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "When the user leaves instance’s page which function is called?",
      "explanation": "When the user leaves instance’s page or closes its window a plug-in instance is deleted. Then Gecko calls the function NPP_Destroy to inform plug-in that the instance is being deleted. Plug-in API calls and callbacks use main Navigator thread.",
      "options": [
        {
          "text": "NPP_New",
          "correct": false
        },
        {
          "text": "NPP_Destroy",
          "correct": true
        },
        {
          "text": "NP_Shutdown",
          "correct": false
        },
        {
          "text": "NP_Initialize",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the directory in Windows for plug-ins?",
      "explanation": "When Gecko based browser starts, it checks certain directories for plugins. Windows have MOZ_PLUGIN_PATH, Profile directory\\plugins, %APPDAT%/Mozilla\\plugins, Plug-ins with toolkit bundles, HKEY_CURRENT_USER\\Software\\MozillaPlugins\\*\\Path are some of the directories in windows.",
      "options": [
        {
          "text": "Profile directory/Library/Internet",
          "correct": false
        },
        {
          "text": "MOZ_PLUGIN_PATH",
          "correct": false
        },
        {
          "text": "HKEY_CURRENT_USER",
          "correct": false
        },
        {
          "text": "~/Library/Internet Plug-Ins",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not the directory in Mac OS X for plug-ins?",
      "explanation": "/Library/Internet Plug-Ins, ~/Library/Internet Plug-Ins, Plug-ins with the toolkit bundles, /System/Library/Frameworks/JavaVM.framework/Versions/Current/Resources, Profile directory/plugins are some of the directories in Mac OS X for plug-ins.",
      "options": [
        {
          "text": "/Library/Internet",
          "correct": false
        },
        {
          "text": "~/Library/Internet",
          "correct": false
        },
        {
          "text": "Profile directory",
          "correct": false
        },
        {
          "text": "MOZ_PLUGIN_PATH",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a directory in Linux for plug-ins?",
      "explanation": "Profile directory/plugins, /usr/lib64/Mozilla/plugins, /usr/lib/Mozilla/plugins, ~/.mozilla/plugins are some of the directories in Linux for using plug-ins. /usr/lib64/firefox/plugins is for 64-bit Firefox.",
      "options": [
        {
          "text": "~/.mozilla/plugins",
          "correct": false
        },
        {
          "text": "/usr/lib64/Mozilla/plugins",
          "correct": false
        },
        {
          "text": "profile directory",
          "correct": false
        },
        {
          "text": "/Library/Internet plug-ins",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following plug-in file type is used in MS Windows?",
      "explanation": "The plug-in file type depends on the platform. The file type in MS Windows is .DLL which is Dynamic Link Library files. Unix has .SO or .DSO files which are shared objects. MAC OS X has file PPC/x86/Universal loadable Mach-O bundle.",
      "options": [
        {
          "text": ".DLL",
          "correct": true
        },
        {
          "text": ".SO",
          "correct": false
        },
        {
          "text": ".DSO",
          "correct": false
        },
        {
          "text": "PPC",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " The plug-in DLL can’t contain ______________",
      "explanation": "The plug-in DLL should contain FileExtents which specifies file extensions, ProductName which is for plug-in name, Language for the language which is in use, FileDescription for the description, MIMEType for the MIME types, FileOpenName for file open template.",
      "options": [
        {
          "text": "Language",
          "correct": false
        },
        {
          "text": "ProductName",
          "correct": false
        },
        {
          "text": "FileDescription",
          "correct": false
        },
        {
          "text": "DirectoryName",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a transmission mode that plug-in can select?",
      "explanation": "There are three transmission modes that plug-in can select. In normal mode browser sends stream data sequentially to plug-in, in Random-access mode browser allows a plug-in to request specific ranges of bytes from anywhere in the stream. In File, mode browser saves data to a local file in cache and passes the file path to plug-in.",
      "options": [
        {
          "text": "File mode",
          "correct": false
        },
        {
          "text": "Random-access mode",
          "correct": false
        },
        {
          "text": "Normal mode",
          "correct": false
        },
        {
          "text": "Complex mode",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which method is used for sending data to URL from memory buffer?",
      "explanation": "For sending data to URL from file or a memory buffer we used NPN_PostURL. The result obtains from a server can also be sent to a particular browser window or frame for display, or delivered to a plug-in instance in the new stream.",
      "options": [
        {
          "text": "NPN_PostURL",
          "correct": true
        },
        {
          "text": "NPN_GetURLNotify",
          "correct": false
        },
        {
          "text": "NPN_GetURL",
          "correct": false
        },
        {
          "text": "NPN_PostURLNotify",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following request is used for the browser to load a URL?",
      "explanation": "NPN_GetURL is a request for the browser to load a URL into a particular frame for display or browser window, or for delivering data of that URL to the plug-in instance in a new stream. NPN_PostURLNotify function notifies plug-in of a result when an operation completes.",
      "options": [
        {
          "text": "NPN_GetURL",
          "correct": true
        },
        {
          "text": "NPN_PostURL",
          "correct": false
        },
        {
          "text": "NPN_PostURLNotify",
          "correct": false
        },
        {
          "text": "NPN_GetURLNotify",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which function helps in identifying compatibility of plug-in and browser?",
      "explanation": "For determining whether plug-in and browser versions are compatible or not we use NPN_Version method It also provides alternative processing for different versions. For checking changes in major and minor version numbers it can also be used.",
      "options": [
        {
          "text": "NPN_UserAgent",
          "correct": false
        },
        {
          "text": "NPN_Version",
          "correct": true
        },
        {
          "text": "NPN_Status",
          "correct": false
        },
        {
          "text": "NPN_GetValue",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which method is used to display a message on the status line?",
      "explanation": "NPN_Status is used to display a message on the status line. It makes the user feel that the plug-in is a part of the browser user interface, plug-in can emulate browser behavior by providing status line message.",
      "options": [
        {
          "text": "NPN_MemFree",
          "correct": false
        },
        {
          "text": "NPN_HandleWindow",
          "correct": false
        },
        {
          "text": "NPN_Status",
          "correct": true
        },
        {
          "text": "NPN_GetValue",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is called after plug-in is initialized to get scripting interface?",
      "explanation": "After the plug-in is initialized to get scripting interface NPP_GetValue is called. NP_GetValue is called during initialization to retrieve plug-in’s description and name, that will appear in navigator.plugins DOM object and is used to populate about:plugins.",
      "options": [
        {
          "text": "NPP_GetValue",
          "correct": true
        },
        {
          "text": "NP_GetValue",
          "correct": false
        },
        {
          "text": "NP_GetMIMEDescription",
          "correct": false
        },
        {
          "text": "NP_Initialize",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The plugin resource string 1 is associated with ________",
      "explanation": "There are plugin resources. ‘STR#’ 1 is associated with video or quicktime, MIME type is associated with str 128, aiff is associated with string 4, jpg is associated with string 6, image or jpeg is associated with string 5.",
      "options": [
        {
          "text": "MIME type",
          "correct": false
        },
        {
          "text": "aiff",
          "correct": false
        },
        {
          "text": "video",
          "correct": true
        },
        {
          "text": "jpg",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Windowless plug-in will not call ____________",
      "explanation": "Windowless plugin can call Netscape methods like NPN_InvalidateRegion, NPN_ForceRedraw, NPN_InvalidateRect. NPN_InvalidateRegion is used for invalidate an area in windowless plug-in before refreshing or repeating.",
      "options": [
        {
          "text": "NPN_InvalidateRegion",
          "correct": false
        },
        {
          "text": "NPN_ForceRedraw",
          "correct": false
        },
        {
          "text": "NPN_InvalidateRect",
          "correct": false
        },
        {
          "text": "NPP_GetValue",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The browser will not call the plug-in _________",
      "explanation": "Browser calls various plug-in methods like NPP_Print, NPP_SetWindow, NPP_SetValue, NPP_HandleEvent, NPP_GetValue. NPP_SetValue is for setting the browser information, for delivering platform-specific event to instance browser calls NPP_HandleEvent method.",
      "options": [
        {
          "text": "NPN_InvalidateRect",
          "correct": true
        },
        {
          "text": "NPP_Print",
          "correct": false
        },
        {
          "text": "NPP_HandleEvent",
          "correct": false
        },
        {
          "text": "NPP_SetValue",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following method is not associated to handling the memory ________________",
      "explanation": "There are three methods used in memory handling in plug-ins. NPN_MemFree method is used to free memory allocated. NPN_MemAlloc method is used to allocate memory from the browser. NPN_MemFlush is used to free memory in Mac OS only.",
      "options": [
        {
          "text": "NPN_MemFlush",
          "correct": false
        },
        {
          "text": "NPN_MemAlloc",
          "correct": false
        },
        {
          "text": "NPN_MemFree",
          "correct": false
        },
        {
          "text": "NPP_HandleEvent",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a semantic element?",
      "explanation": "Semantic element describes its meaning to both developer and browser. Some of the semantic elements are <article>, <form>, <table>. Non-semantic elements are <span> and <div> and they tell nothing about their content.",
      "options": [
        {
          "text": "<form>",
          "correct": false
        },
        {
          "text": "<article>",
          "correct": false
        },
        {
          "text": "<table>",
          "correct": false
        },
        {
          "text": "<span>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Footer element can’t contain ____________ information.",
      "explanation": "A footer for a document or section is specified by <footer> element. It should contain information about its containing element. This element typically contains the author of the document, links to terms of use, copyright information, contact information.",
      "options": [
        {
          "text": "contact information",
          "correct": false
        },
        {
          "text": "copyright information",
          "correct": false
        },
        {
          "text": "the author of the document",
          "correct": false
        },
        {
          "text": "blog post",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element works as a sidebar?",
      "explanation": "<aside> element works like a sidebar. It defines some content aside from the content it is placed in. It should be related to the surrounding content. E.g. <aside> <h3> Florida </h3>< <p> Florida is a very cold place. </p> </aside>. <footer> element contains copyright information about author/owner of the document. All navigation links are contained in <nav> element. <header> specifies heading for the document.",
      "options": [
        {
          "text": "header",
          "correct": false
        },
        {
          "text": "footer",
          "correct": false
        },
        {
          "text": "nav",
          "correct": false
        },
        {
          "text": "aside",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following defines a visible heading for <details> element?",
      "explanation": "The <summary> tag is new in HTML5. <summary> element defines a visible heading for <details> element. This heading can be clicked to hide/view the details. This element is not supported by Internet Explorer. Sections in document is defined by <section> element. <mark> element is used to highlight the context/paragraph/text. Main content of document is specified by <menu> element.",
      "options": [
        {
          "text": "<summary>",
          "correct": true
        },
        {
          "text": "<section>",
          "correct": false
        },
        {
          "text": "<mark>",
          "correct": false
        },
        {
          "text": "<main>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following specifies the main content of the document?",
      "explanation": "Human readable date/time is shown by <time> element. The main content of a document is specified by <main> element. The content written inside <main> element should be unique to the document. It should not contain any content that is repeated across documents such as navigation links, copyright information, site logos, search forms. Sections in document is defined by <section> element. The additional details that the user can view or hide on demand is specified by <details> tag.",
      "options": [
        {
          "text": "<time>",
          "correct": false
        },
        {
          "text": "<main>",
          "correct": true
        },
        {
          "text": "<details>",
          "correct": false
        },
        {
          "text": "<section>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element defines additional details?",
      "explanation": "The additional details that the user can view or hide on demand is specified by <details> tag. The content of <details> element should not be visible unless open attribute is set. This tag can be used for creating interactive widget that user can open and close. Main content of document is specified by <menu> element. <aside> defines some content aside from the content it is placed in.",
      "options": [
        {
          "text": "<details>",
          "correct": true
        },
        {
          "text": "<summary>",
          "correct": false
        },
        {
          "text": "<main>",
          "correct": false
        },
        {
          "text": "<aside>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following specifies relationship between current document and external resource?",
      "explanation": "Relationship between current document and external resource is specified by <link> element. The possible uses for this element include defining relational framework for navigation. It is mostly used to link to style sheets. <title> element specifies title of the document. Metadata about HTML document is provided by <meta> element. <style> element specifies style information about the HTML document.",
      "options": [
        {
          "text": "<meta>",
          "correct": false
        },
        {
          "text": "<style>",
          "correct": false
        },
        {
          "text": "<link>",
          "correct": true
        },
        {
          "text": "<title>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element represents preformatted text?",
      "explanation": "Main content of document is specified by <menu> element. <dir> element is not supported in HTML5. It contains all directory titles. The <pre> element in HTML represents preformatted text. The text written inside <pre> element is presented exactly as written in HTML file. Text is typically rendered using non-proportional font. Whitespace inside the element is displayed as written. <dd> is used to describe a name in description list.",
      "options": [
        {
          "text": "<main>",
          "correct": false
        },
        {
          "text": "<dir>",
          "correct": false
        },
        {
          "text": "<dd>",
          "correct": false
        },
        {
          "text": "<pre>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is called bidirectional isolation?",
      "explanation": "<bdi> element is known as bidirectional isolation. It isolates a span of text that might be formatted in different direction from other text outside it. This element is useful at the time of embedding text with an unknown directionality from database like inside text with a fixed directionality. <br> is used for giving a break-line in text. <b> is used for making the text bold. To override the current text direction <bdo> element is used.",
      "options": [
        {
          "text": "<bdi>",
          "correct": true
        },
        {
          "text": "<bdo>",
          "correct": false
        },
        {
          "text": "<br>",
          "correct": false
        },
        {
          "text": "<b>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element is used for bringing attention?",
      "explanation": "Title of work is defined by <cite> tag. <br> is used to give a vertical break in text/paragraph. The <code> element displays its contents styles in a fashion intended to indicate that text is a short fragment of computer code. <b> element is known as HTML Bring Attention To element. It is used to draw reader’s attention to the element’s contents, which are not granted special importance otherwise. Formally this was known as Boldface element.",
      "options": [
        {
          "text": "<cite>",
          "correct": false
        },
        {
          "text": "<br>",
          "correct": false
        },
        {
          "text": "<b>",
          "correct": true
        },
        {
          "text": "<code>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element denotes that the text is a short fragment of computer code?",
      "explanation": "Title of work is defined by <cite> tag. The <code> element displays its contents styles in a fashion intended to indicate that text is a short fragment of computer code. The content text is displayed using user agent’s default monospace font by default. <data> element links content with machine readable translation. Defining instance of a term in HTML is represented by <dfn> element.",
      "options": [
        {
          "text": "<code>",
          "correct": true
        },
        {
          "text": "<data>",
          "correct": false
        },
        {
          "text": "<cite>",
          "correct": false
        },
        {
          "text": "<dfn>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is keyboard input element?",
      "explanation": "<mark> element is for highlighting the text/paragraph. <kbd> element is HTML Keyboard Input Element. It represents a span of inline text denoting textual user input from voice input, a keyboard or any other text entry device. By convention user defaults to rendering the contents of <kbd> element using its default monospace font. Defining instance of a term in HTML is represented by <dfn> element. <em> is same like <i></i>. It is emphasized text.",
      "options": [
        {
          "text": "<mark>",
          "correct": false
        },
        {
          "text": "<kbd>",
          "correct": true
        },
        {
          "text": "<dfn>",
          "correct": false
        },
        {
          "text": "<em>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element prevents the text from automatically wrapping across multiple lines?",
      "explanation": "<em> is same like <i></i>. It is emphasized text. <kbd> element is HTML Keyboard Input Element. <mark> element is for highlighting the text/paragraph. <nobr> is non-standard obsolete HTML element. This element prevents the text it contains from automatically wrapping across multiple lines. Resulting in the user having to scroll horizontally to see entire width of the text.",
      "options": [
        {
          "text": "<em>",
          "correct": false
        },
        {
          "text": "<kbd>",
          "correct": false
        },
        {
          "text": "<mark>",
          "correct": false
        },
        {
          "text": "<nobr>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following element is known as ruby fallback parenthesis?",
      "explanation": "In ruby, <rt> defines explanation of characters. <rp> is Ruby Fallback Parenthesis element in HTML. It is used to provide fall-back parentheses for browsers that do not support display of ruby annotations when using <ruby< element. This element include global attribute only. <q> element is used for short quotation.",
      "options": [
        {
          "text": "<rt>",
          "correct": false
        },
        {
          "text": "<rp>",
          "correct": true
        },
        {
          "text": "<rtc>",
          "correct": false
        },
        {
          "text": "<q>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element represents a ruby annotation?",
      "explanation": "In ruby, <rt> defines explanation of characters. The <ruby> element in HTML represents a ruby annotation. It is for showing pronunciation of East Asian characters. Both the starting and ending tags are necessary. It only includes global attributes. Parenthesis for ruby text is provided by <rp> element.",
      "options": [
        {
          "text": "<rt>",
          "correct": false
        },
        {
          "text": "<rtc>",
          "correct": false
        },
        {
          "text": "<ruby>",
          "correct": true
        },
        {
          "text": "<rp>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used to enclose inline text?",
      "explanation": "Inline are used to define the meaning or style of text. <samp> is HTML Sample Element. It is used to enclose inline text which represents sample output from a computer program. Its content is typically rendered using browser’s default mono spaced font. <small> makes text size small in appearance. <s> element specifies things which are no longer right. <rtc> is a Ruby Text Container.",
      "options": [
        {
          "text": "<samp>",
          "correct": true
        },
        {
          "text": "<small>",
          "correct": false
        },
        {
          "text": "<s>",
          "correct": false
        },
        {
          "text": "<rtc>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is a generic inline container for phrasing content?",
      "explanation": "<strong> element shows importance of text. <sub> element is for subscript. <span> HTML element is a generic inline container for phrasing content, that does not inherently represent anything. It is used to group elements for styling purposes with the help of class or id attributes. <sup> is for superscript.",
      "options": [
        {
          "text": "<strong>",
          "correct": false
        },
        {
          "text": "<sub>",
          "correct": false
        },
        {
          "text": "<span>",
          "correct": true
        },
        {
          "text": "<sup>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element is known as Teletype Text element?",
      "explanation": "<time> element specifies time. <tt> element is known as HTML Teletype Text element. It creates inline text which is presented using agent’s default monospace font face. This element is obsolete. It was created for the purpose of rendering text as it would be displayed on a fixed-width display like text-only screen, teletype or line printer. <sup> element for superscript. <wbr> element describes a word break opportunity.",
      "options": [
        {
          "text": "<time>",
          "correct": false
        },
        {
          "text": "<tt>",
          "correct": true
        },
        {
          "text": "<wbr>",
          "correct": false
        },
        {
          "text": "<sup>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Variable element is ________",
      "explanation": "<sup> element for superscript.  element describes a word break opportunity. <time> element specifies time. <var> is known as HTML Variable element. It represents name of a variable in mathematical expression or in a programming context. It is presented using italicized version of current typeface.",
      "options": [
        {
          "text": "<var>",
          "correct": true
        },
        {
          "text": "<wbr>",
          "correct": false
        },
        {
          "text": "<sup>",
          "correct": false
        },
        {
          "text": "<time>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element represents word break opportunity?",
      "explanation": "<var> is known as HTML Variable element. <wbr> element represents word break opportunity. A position within text where browser may optionally break a line. This element only includes global attributes. It is supported by most of the browsers. <sup> element is superscript. <rtc> is a Ruby Text Container.",
      "options": [
        {
          "text": "<var>",
          "correct": false
        },
        {
          "text": "<sup>",
          "correct": false
        },
        {
          "text": "<wbr>",
          "correct": true
        },
        {
          "text": "<rtc>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is known as child of media elements?",
      "explanation": "<area> element defines region on image.  element is used to insert image in document. <track> element is used as a child of media elements <video> and <audio>. It lets you specify text tracklike to automatically handle subtitles. The tracks are formatted in WebVTT format like .vtt files. <map> with <area> element is used to define image.",
      "options": [
        {
          "text": "<area>",
          "correct": false
        },
        {
          "text": "<img>",
          "correct": false
        },
        {
          "text": "<map>",
          "correct": false
        },
        {
          "text": "<track>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element embeds a Java applet into the document?",
      "explanation": "<applet> is known as HTML Applet Element. It embeds Java applet into the document. But now a days use of Java applets on Web is deprecated. Most of the browsers no longer support use of plug-ins. <embed> element embeds external content in document. <noembed> is fallback content for browsers. <object> element describes an external resource.",
      "options": [
        {
          "text": "<applet>",
          "correct": true
        },
        {
          "text": "<embed>",
          "correct": false
        },
        {
          "text": "<noembed>",
          "correct": false
        },
        {
          "text": "<object>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element defines parameters for <object> element?",
      "explanation": "<noembed> is fallback content for browsers. <object> element describes an external resource. <embed> element embeds external content in document. <param> element defines parameters for <object> element. The element includes global attributes. This element is supported by all the browsers. <source> element specifies multimedia resources for pictures, audio etc.",
      "options": [
        {
          "text": "<noembed>",
          "correct": false
        },
        {
          "text": "<param>",
          "correct": true
        },
        {
          "text": "<source>",
          "correct": false
        },
        {
          "text": "<embed>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element represents an external resource?",
      "explanation": "An external resource is represented by <object> element that can be treated as image, nested browsing context or a resource to be handled by plugin. It includes various attributes like archive, border, classid, codebase, codetype etc. <source> element specifies multimedia resources for pictures, audio etc. <param> element defines parameters for <object> element. An element <picture> contains <source> element and <image>.",
      "options": [
        {
          "text": "<object>",
          "correct": true
        },
        {
          "text": "<source>",
          "correct": false
        },
        {
          "text": "<param>",
          "correct": false
        },
        {
          "text": "<picture>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element specifies multiple media resources?",
      "explanation": "<param> element defines parameters for <object> element. An element <picture> contains <source> element and <image>. <source> element in HTML specifies multiple media resource for <audio>, <video> and <picture> element. It is an empty element and is commonly used to serve same media content in multiple formats supported by different browsers. An external resource is represented by <object> element that can be treated as image, nested browsing context or a resource to be handled by plugin.",
      "options": [
        {
          "text": "<param>",
          "correct": false
        },
        {
          "text": "<source>",
          "correct": true
        },
        {
          "text": "<object>",
          "correct": false
        },
        {
          "text": "<picture>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element is not a scripting element?",
      "explanation": "For creating dynamic content and web applications HTML uses scripting languages. <canvas>, <script>, <noscript> are certain elements that support this capability. <picture> element is for embedding the content.",
      "options": [
        {
          "text": "<noscript>",
          "correct": false
        },
        {
          "text": "<canvas>",
          "correct": false
        },
        {
          "text": "<script>",
          "correct": false
        },
        {
          "text": "<picture>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element shows completion progress of a task?",
      "explanation": "<progress> element in HTML shows an indicator indicating completion progress of a task, which is typically displayed as a progress bar. It also includes all the global attributes including max, value etc. <select> element specifies control over a menu of options. <option> represent item contained in <select> element. <meter> gives a scalar range of value.",
      "options": [
        {
          "text": "<progress>",
          "correct": true
        },
        {
          "text": "<select>",
          "correct": false
        },
        {
          "text": "<option>",
          "correct": false
        },
        {
          "text": "<meter>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element creates a grouping of options?",
      "explanation": "<progress> element in HTML shows an indicator indicating completion progress of a task, which is typically displayed as a progress bar. <select> element specifies control over a menu of options. <option> represent item contained in <select> element. <optgroup> element in HTML creates a grouping of options within <select> element. This element should not be nested. It includes global attributes like disabled, label and many more.",
      "options": [
        {
          "text": "<progress>",
          "correct": false
        },
        {
          "text": "<option>",
          "correct": false
        },
        {
          "text": "<optgroup>",
          "correct": true
        },
        {
          "text": "<select>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element represents a scalar value within the given range?",
      "explanation": "<option> represent item contained in <select> element. <meter> element in HTML represents either a scalar value within a known range or a factorial value. It includes global attributes like min, max, value, optimum, low, high, form etc. <label> specifies a caption for item in user interface. <input> element is used to take user input from user.",
      "options": [
        {
          "text": "<option>",
          "correct": false
        },
        {
          "text": "<meter>",
          "correct": true
        },
        {
          "text": "<label>",
          "correct": false
        },
        {
          "text": "<input>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element is used to draw graphics and animations?",
      "explanation": "<canvas> element is used with either canvas scripting APII or WebGL API to draw graphics and animations. Basically it includes all the global attributes like height, moz-opaque, width. It is not supported in Opera browser. <script> is used for embeding javascript code in document. An element <picture> contains <source> element and <image>. <noscript> defines section of HTML.",
      "options": [
        {
          "text": "<canvas>",
          "correct": true
        },
        {
          "text": "<script>",
          "correct": false
        },
        {
          "text": "<noscript>",
          "correct": false
        },
        {
          "text": "<picture>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element represents a dialog box?",
      "explanation": "<dialog> element in HTML represents a dialog box or other interactive component like window or an inspector. This element includes global attributes. The tableindex attribute must not be used on <dialog> element. <menuitem> represents a command which helps user to pop up through menu. <menu> is a group of commands which is used to perform something. <summary> element provides summary of element.",
      "options": [
        {
          "text": "<dialog>",
          "correct": true
        },
        {
          "text": "<menuitem>",
          "correct": false
        },
        {
          "text": "<menu>",
          "correct": false
        },
        {
          "text": "<summary>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is known as Disclosure Summary element?",
      "explanation": "<dialog> element in HTML represents a dialog box or other interactive component like window or an inspector. <summary> element is known as Disclosure Summary element. It specifies caption, summary or legend for <details> element’s disclosure box. This element only includes global attribute. This element may only be used as the first child of <details> element. <menuitem> represents a command which helps user to pop up through menu. <menu> is a group of commands which is used to perform something.",
      "options": [
        {
          "text": "<dialog>",
          "correct": false
        },
        {
          "text": "<summary>",
          "correct": true
        },
        {
          "text": "<menu>",
          "correct": false
        },
        {
          "text": "<menuitem>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element represents group of commands that user can activate or perform?",
      "explanation": "<menuitem> represents a command which helps user to pop up through menu. <menu> element in HTML represents group of commands that user can perform or activate. This include list menu as well as context menus. List menus appear across top of a screen and context menus might appear underneath a button after it has been clicked. <summary> element is known as Disclosure Summary element. <details> elment provides information that user can view or hide as per own wish.",
      "options": [
        {
          "text": "<menuitem>",
          "correct": false
        },
        {
          "text": "<menu>",
          "correct": true
        },
        {
          "text": "<summary>",
          "correct": false
        },
        {
          "text": "<details>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a web component element?",
      "explanation": "There are web components in HTML related technology which makes it possible to essentially create and use custom elements as if it were regular HTML. You can also create custom versions of standard HTML elements. Some of the elements are <shadow>, <content>, <element>, <template>, <slot>.",
      "options": [
        {
          "text": "<shadow>",
          "correct": false
        },
        {
          "text": "<element>",
          "correct": false
        },
        {
          "text": "<content>",
          "correct": false
        },
        {
          "text": "<menu>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following element is for holding client-side content?",
      "explanation": "<template> element in HTML is a mechanism for holding client-side content that is not to be rendered when page is loaded but may subsequently be instantiated during runtime using JavaScript. The element includes global attributes. <slot> is a placeholder inside a web components. <element> is one of part of web components, used to custom DOM elements. The obsolete part of web components is <content>.",
      "options": [
        {
          "text": "<template>",
          "correct": true
        },
        {
          "text": "<slot>",
          "correct": false
        },
        {
          "text": "<element>",
          "correct": false
        },
        {
          "text": "<content>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is a placeholder inside web component?",
      "explanation": "<shadow> is obsolete part of web component used to shadow DOM. The obsolete part of web components is <content>. <slot> element in HTML is a part of Web Components technology suite. It is a placeholder inside web component that you can fill with own markup that lets you create separate DOM trees and present them together. <element> is one of part of web components, used to custom DOM elements.",
      "options": [
        {
          "text": "<shadow>",
          "correct": false
        },
        {
          "text": "<content>",
          "correct": false
        },
        {
          "text": "<slot>",
          "correct": true
        },
        {
          "text": "<element>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used for defining a new custom DOM elements?",
      "explanation": "<element> is HTML obsolete element. It was the part of Web Components specification. It was intended to be used to define new custom DOM elements. It was removed in favor of JavaScript-driven approach for creating new custom elements. <shadow> is obsolete part of web component used to shadow DOM. <slot> element in HTML is a part of Web Components technology suite. The obsolete part of web components is <content>.",
      "options": [
        {
          "text": "<element>",
          "correct": true
        },
        {
          "text": "<shadow>",
          "correct": false
        },
        {
          "text": "<slot>",
          "correct": false
        },
        {
          "text": "<content>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is not a obsolete?",
      "explanation": "Obsolete elements are old HTML elements which are deprecated and should not be used. They should never be used in new projects, and should replace them in old projects as soon as we can. <acronym>, <basefont>, <applet>, <big>, <bgsound>, <command>, <content>, <dir>, <center> are some of the obsolete elements.",
      "options": [
        {
          "text": "<dir>",
          "correct": false
        },
        {
          "text": "<command>",
          "correct": false
        },
        {
          "text": "<center>",
          "correct": false
        },
        {
          "text": "<caption>",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element sets default font face, size and color for other elements?",
      "explanation": "<applet> embeds java applet in web document. <basefont> is obsolete HTML element. It sets default font face, size, and color for other elements which are descended from its parent element. Instead of using this element we can use font, font-size, font-family and color to change font configuration for an element. <acronym> element which has been removed from HTML5 indicates sequence of characters. <big> element increase the font size.",
      "options": [
        {
          "text": "<applet>",
          "correct": false
        },
        {
          "text": "<basefont>",
          "correct": true
        },
        {
          "text": "<big>",
          "correct": false
        },
        {
          "text": "<acronym>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " For background sound obsolete element was __________",
      "explanation": "<bgsound> element only used by Internet Explorer is Background Sound element. It sets up a sound file to play in background while the page is used. We use <audio> instead of this element. <acronym> element which has been removed from HTML5 indicates sequence of characters. <blink> is a non-standard element which causes text to flash slowly. <audio> element is used to play audio clip.",
      "options": [
        {
          "text": "<bgsound>",
          "correct": true
        },
        {
          "text": "<audio>",
          "correct": false
        },
        {
          "text": "<blink>",
          "correct": false
        },
        {
          "text": "<acronym>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element is used to show the text slowly?",
      "explanation": "<big> element increase the font size. <blink> element is non standard element in HTML. It causes enclosed text to flash slowly. But this element is unsupported and thus implements HTMLUnknownElement interface. <audio> element is used to play audio clip. <center> is block level element which centers element horizontally.",
      "options": [
        {
          "text": "<big>",
          "correct": false
        },
        {
          "text": "<blink>",
          "correct": true
        },
        {
          "text": "<center>",
          "correct": false
        },
        {
          "text": "<audio>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element is used as a container for a directory of files?",
      "explanation": "<dir> element is used as a container for directory of files or folders, potentially with styles and icons applied by user agent. It is recommended not to use this element you can use <ul> element for lists including lists of files. Size, color or face for the content is defined by <font> element. Those commands that user can invoke are represented by <command>. <content> is an obsolete part of web components and is inside shadow DOM.",
      "options": [
        {
          "text": "<dir>",
          "correct": true
        },
        {
          "text": "<font>",
          "correct": false
        },
        {
          "text": "<content>",
          "correct": false
        },
        {
          "text": "<command>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element puts a text field in a page for querying document?",
      "explanation": "An element which exists to facilitate generation of key material is <keygen>. <isindex> is an obsolete HTML element. It puts a text field in a page for querying the document. It is deprecated as of HTML 4.1, because same behavior can be achieved with HTML form. All major browsers have now removed <isindex>. <dir> contains list of directories. Those commands that user can invoke are represented by <command>.",
      "options": [
        {
          "text": "<keygen>",
          "correct": false
        },
        {
          "text": "<isiindex>",
          "correct": true
        },
        {
          "text": "<dir>",
          "correct": false
        },
        {
          "text": "<command>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element facilitate generation of key material?",
      "explanation": "<isindex> is an obsolete HTML element. It puts a text field in a page for querying the document. <keygen> element exists to facilitate generation of key material and submission of public key as part of HTML form. It is designed to use with web-based certificate management systems. It includes all the global attributes like autofocus, challenge etc. The rendering of text between start tag and end tag is done by <listing> element. A scrolling text can be displayed by <marquee> element.",
      "options": [
        {
          "text": "<isindex>",
          "correct": false
        },
        {
          "text": "<listing>",
          "correct": false
        },
        {
          "text": "<keygen>",
          "correct": true
        },
        {
          "text": "<marquee>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which element is used for inserting scrolling area of text?",
      "explanation": "<menu> element in HTML represents group of commands that user can perform or activate. <menuitem> represents a command which helps user to pop up through menu. <marquee> element is used to insert scrolling area of text. You can control what happens when text reaches edges of its content area using its attributes. It includes the attributes behavior, bgcolor, height, hspace, loop etc. <multicol> is an experimental element designed to draw multi-colour layouts.",
      "options": [
        {
          "text": "<marquee>",
          "correct": true
        },
        {
          "text": "<menu>",
          "correct": false
        },
        {
          "text": "<menuitem>",
          "correct": false
        },
        {
          "text": "<multicol>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is known as HTML plaintext element?",
      "explanation": "<plaintext> element renders everything following start tag as raw text, without interpreting any HTML. There is no need for closing tag since everything written after this tag is considered as raw text. <shadow> element is an obsolete part of web component which is used to shadow DOM objects. <spacer> element allows insertion of spaces in documents. <noembed> is an obsolete non-standard which provides fallback to the content of browser.",
      "options": [
        {
          "text": "<plaintext>",
          "correct": true
        },
        {
          "text": "<shadow>",
          "correct": false
        },
        {
          "text": "<spacer>",
          "correct": false
        },
        {
          "text": "<noembed>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element allows insertion of empty spaces on pages?",
      "explanation": "HTML <strike> element places horizontal line through text. <spacer> is an obsolete HTML element. It allows insertion of empty spaces on pages. It was devised by Netscape to accomplish same effect as single-pixel layout image. <spacer> no longer supported by any major browser and same effects can be achieved by using CSS. <plaintext> element renders everything following start tag as raw text, without interpreting any HTML. <shadow> element is an obsolete part of web component which is used to shadow DOM objects.",
      "options": [
        {
          "text": "<strike>",
          "correct": false
        },
        {
          "text": "<spacer>",
          "correct": true
        },
        {
          "text": "<shadow>",
          "correct": false
        },
        {
          "text": "<plaintext>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is known as HTML Example Element?",
      "explanation": "HTML <strike> element places horizontal line through text. <spacer> is an obsolete HTML element. It allows insertion of empty spaces on pages. HTML Example Element <xmp> renders text between start and end tags without interpreting HTML in between and using monospaced font. HTML2 specification recommended that it should be rendered wide enough to allow 80 characters per line. <shadow> element is an obsolete part of web component which is used to shadow DOM objects.",
      "options": [
        {
          "text": "<spacer>",
          "correct": false
        },
        {
          "text": "<strike>",
          "correct": false
        },
        {
          "text": "<xmp>",
          "correct": true
        },
        {
          "text": "<shadow>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute specify a column name from the data source object?",
      "explanation": "datafld attribute is supported by Internet Explorer 4 and its higher versions. It specifies column name from the data source object that supplies bound data. This attribute may be used to specify various <param> elements passed to Java applet. Codebase gives absolute or relative URL of directory. In applet, hspace provides horizontal space on both of sides. HTML datasrc attribute used for data binding.",
      "options": [
        {
          "text": "datafld",
          "correct": true
        },
        {
          "text": "codebase",
          "correct": false
        },
        {
          "text": "hspace",
          "correct": false
        },
        {
          "text": "datasrc",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute is used for data binding?",
      "explanation": "The name attribute gives name to applet. Datafld attribute specify a column name from the data source object. It is like datafld attribute. It is used for data binding under Internet Explorer 4. It indicates id of data source object that supplies data that is bound to <param> elements associated with an applet. Access to applet is given by mayscript attribute.",
      "options": [
        {
          "text": "name",
          "correct": false
        },
        {
          "text": "datafld",
          "correct": false
        },
        {
          "text": "datasrc",
          "correct": true
        },
        {
          "text": "mayscript",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute assigns a name to the applet?",
      "explanation": "name attribute assigns a name to the applet so that it can be identified by the other resources especially for some particular scripts. Additional vertical space is specified by vspace attribute in pixels. Additional vertival space above or below applet is given by vspace attribute. Src attribute provides absolute URL for file or applet. Object attribute is URL representation of applet.",
      "options": [
        {
          "text": "name",
          "correct": true
        },
        {
          "text": "vspace",
          "correct": false
        },
        {
          "text": "src",
          "correct": false
        },
        {
          "text": "object",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which value is there for autoplaying the YouTube video?",
      "explanation": "We can play our video automatically when the user visits the page by adding a simple parameter to a YouTube URL. When the value is set to be 0 the value will not play automatically when the player loads. It is the default value. When the value is set to be 1 the video will play automatically when the player loads.",
      "options": [
        {
          "text": "0",
          "correct": false
        },
        {
          "text": "1",
          "correct": true
        },
        {
          "text": "2",
          "correct": false
        },
        {
          "text": "infinite",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which element is used for YouTube videos?",
      "explanation": "We can host our videos through YouTube and can easily embed them into our website. <iframe> tag will be used for YouTube videos.\nE.g. <iframe width=”670” height=”612” src= “https://sanfoundry.com”> </iframe>\n",
      "options": [
        {
          "text": "<iframe>",
          "correct": true
        },
        {
          "text": "<frame>",
          "correct": false
        },
        {
          "text": "<small>",
          "correct": false
        },
        {
          "text": "<samp>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "HTML object tag to embed multimedia will not embed in ___________",
      "explanation": "We can use HTML object tag to embed multimedia like video, audio, Java applets, PDF, Flash, ActiveX in the web pages. For embedding video in HTML without iframe tag we can use object tag.",
      "options": [
        {
          "text": "audio",
          "correct": false
        },
        {
          "text": "video",
          "correct": false
        },
        {
          "text": "Java applets",
          "correct": false
        },
        {
          "text": "images",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " video ID can be substituted by _____________",
      "explanation": "We can modify the embed code for an individual video by substituting video ID after “embed/” with “videoseries?list=”, then paste playlist ID after “=”, paste the code into the blog or Website HTML.",
      "options": [
        {
          "text": "“videoseries?list=”",
          "correct": true
        },
        {
          "text": "“videoseries.list=”",
          "correct": false
        },
        {
          "text": "“videoseries/list=”",
          "correct": false
        },
        {
          "text": "“videoseries$list=”",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which navigator object property returns a geolocation object?",
      "explanation": "There are many navigator object properties, geolocation returns a geolocation object that can be used to locate user’s position, appVersion returns the version information of the browser, appCodeName returns the code name of the browser.",
      "options": [
        {
          "text": "appVersion",
          "correct": false
        },
        {
          "text": "geolocation",
          "correct": true
        },
        {
          "text": "language",
          "correct": false
        },
        {
          "text": "appCodeName",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What returns the engine name of the browser?",
      "explanation": "Product property returns the engine name of the browser, userAgent returns user-agent header sent by the browser to the server, platform returns for which platform the browser is compiled. OnLine determines whether the browser is online or not.",
      "options": [
        {
          "text": "product",
          "correct": true
        },
        {
          "text": "userAgent",
          "correct": false
        },
        {
          "text": "platform",
          "correct": false
        },
        {
          "text": "onLine",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Action box does not contains _______",
      "explanation": "The action box contains tabs, a geolocation button, geoloaction options and search box, by the use of tabs we can switch between different kind of maps and search engines.",
      "options": [
        {
          "text": "tabs",
          "correct": false
        },
        {
          "text": "geolocation buttons",
          "correct": false
        },
        {
          "text": "search box",
          "correct": false
        },
        {
          "text": "radio buttons",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which button let us move the map to the current position of the device?",
      "explanation": "The geolocation HTML includes a currentPositionBtn which is used to move the map to the current position of the device, there are 3 inputs to let the user choose the geolocation options enableHighAccuracy, timeout, and maximumAge.",
      "options": [
        {
          "text": "currentPositionBtn",
          "correct": true
        },
        {
          "text": "enableHighAccuracy",
          "correct": false
        },
        {
          "text": "timeout",
          "correct": false
        },
        {
          "text": "maximumAge",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Search box does not contain __________",
      "explanation": "Search box contains an input field in which we can insert the name of the place you are looking for, a search button or a dropdown list, depending on user experience provided by the search tool.",
      "options": [
        {
          "text": "currentPositionBtn",
          "correct": true
        },
        {
          "text": "search button",
          "correct": false
        },
        {
          "text": "dropdown list",
          "correct": false
        },
        {
          "text": "input field",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How many kinds of map does Geo support?",
      "explanation": "Geo supports 3 different kinds of interactive map like OpenStreeMap, Google Maps, a hybrid map that is Google Map with OpenStreetMap tiles placed on it, these maps are loaded in 3 different HTML elements.",
      "options": [
        {
          "text": "1",
          "correct": false
        },
        {
          "text": "2",
          "correct": false
        },
        {
          "text": "3",
          "correct": false
        },
        {
          "text": "4",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "OpenStreetMap cannot extend map to implement __________",
      "explanation": "The openStreetMap and GoogleMap objects extent Map to implement showPOIs, showMap, search and showPosition methods, which make use of Google Maps and OpenLayers library.",
      "options": [
        {
          "text": "showMap",
          "correct": false
        },
        {
          "text": "showPOIs",
          "correct": false
        },
        {
          "text": "search",
          "correct": false
        },
        {
          "text": "toProjection",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which is not a kind of error?",
      "explanation": "Examples of error are POSITION_UNAVAIALBLE, PERMISSION_DENIED and TIMEOUT. PositionError is the object returned by Geolocation API in case of error.",
      "options": [
        {
          "text": "PERMISSION_UNAVAILABLE",
          "correct": true
        },
        {
          "text": "PERMISSION_DENIED",
          "correct": false
        },
        {
          "text": "TIMEOUT",
          "correct": false
        },
        {
          "text": "POSITION_UNAVAIALBLE",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "getCurrentPosition does not take the argument?",
      "explanation": "getCurrentPosition method takes three arguments successCallbaack, errorCallback, options. A successCallback set to GetMap.showMap by MapSwitcher or to GeoMap.showPosition by GeolocationBox.",
      "options": [
        {
          "text": "successCallback",
          "correct": false
        },
        {
          "text": "options",
          "correct": false
        },
        {
          "text": "errorCallback",
          "correct": false
        },
        {
          "text": "Timeout",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following cancels an ongoing watchPosition call?",
      "explanation": "clearWatch cancels an ongoing watchPosition call, watchPosition method retrieves periodic updates about a current geographic location of the device, getCurrentPosition retrieves current geographic location.",
      "options": [
        {
          "text": "clearWatch",
          "correct": true
        },
        {
          "text": "watchPosition",
          "correct": false
        },
        {
          "text": "getCurrentPosition",
          "correct": false
        },
        {
          "text": "getPositionUsingMethodName",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following specifies the time when location information was retrieved?",
      "explanation": "timestamp specifies the time when location information was retrieved and the position object created.  cords. speed specifies device’s current ground speed in meters per second, cords.heading specifies the device’s current direction of movement in degrees.",
      "options": [
        {
          "text": "timestamp",
          "correct": true
        },
        {
          "text": "cords.speed",
          "correct": false
        },
        {
          "text": "cords.heading",
          "correct": false
        },
        {
          "text": "cords.altitudeAccuracy",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " The code marker option does not create ______",
      "explanation": "map object when the marker should appear, position is latlng position at which the marker should be displayed, title that should appear when we hover on the marker.",
      "options": [
        {
          "text": "title",
          "correct": false
        },
        {
          "text": "map",
          "correct": false
        },
        {
          "text": "position",
          "correct": false
        },
        {
          "text": "zoom",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is a global identifier for the item?",
      "explanation": "itemid attribute is a global identifier for the item, itemprop attribute defines a property of the item, itemref gives a list of additional elements to crawl to find name-value pairs of the item, itemtype is a valid URL that defines the item.",
      "options": [
        {
          "text": "itemid",
          "correct": true
        },
        {
          "text": "itemprop",
          "correct": false
        },
        {
          "text": "itemref",
          "correct": false
        },
        {
          "text": "itemtype",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not a map display option?",
      "explanation": "zoom, center, mapTypeId are the three map display options. Zoom specifies the zoom level, center specifies that the map should be centered at the user location, mapTypeId can be satellite, roadmap or hybrid.",
      "options": [
        {
          "text": "zoom",
          "correct": false
        },
        {
          "text": "center",
          "correct": false
        },
        {
          "text": "mapTypeId",
          "correct": false
        },
        {
          "text": "blur",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following specifies the expiry time for cached location information?",
      "explanation": "maximumAge specifies the expiry time in milliseconds for cached location information, timeout property is the number of milliseconds the web application is willing to wait for a position.",
      "options": [
        {
          "text": "maximumAge",
          "correct": true
        },
        {
          "text": "timeout",
          "correct": false
        },
        {
          "text": "enableHighAccuracy",
          "correct": false
        },
        {
          "text": "position_unavailable",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is a server-side solution for implementing responsive images?",
      "explanation": "Instead of implementing ideal responsive image with <picture> element, we can use a server-side solution with Adaptive image i.e. http://adaptive-images.com/. It was created by Matt Wilcox (http://mattwilcox.net/).",
      "options": [
        {
          "text": "http://adaptive-images.com",
          "correct": true
        },
        {
          "text": "http://github.com/scottjehl/picturefill",
          "correct": false
        },
        {
          "text": "http://www.netmagazine.com",
          "correct": false
        },
        {
          "text": "http://offroadcode.com",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not included in the framework?",
      "explanation": "If we use the framework it can save a lot of time. Framework generally includes a width of the grid, button styles, CSS reset and many more other aspects to build a website.",
      "options": [
        {
          "text": "font sizes",
          "correct": false
        },
        {
          "text": "css reset",
          "correct": false
        },
        {
          "text": "button styles",
          "correct": false
        },
        {
          "text": "forms",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How many columns are there in the basic grid of a skeleton?",
      "explanation": "Skeleton is a minimal responsive framework. It is 960 pixels wide with 12 columns in its basic grid. The grid is responsive by integrating CSS3 media queries. It is also called the 960.gs framework. It is a good place for starting with the Grid System.",
      "options": [
        {
          "text": "17",
          "correct": false
        },
        {
          "text": "12",
          "correct": true
        },
        {
          "text": "16",
          "correct": false
        },
        {
          "text": "10",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Bootstrap was first introduced in ______",
      "explanation": "Bootstrap was built by Mark Otto and for internal use in Twitter. It was launched as a free software for the public. Bootstrap is packed with styled user interface components such as button navigation, forms, custom jQuery plugins like popover, model box and carousal.",
      "options": [
        {
          "text": "google",
          "correct": false
        },
        {
          "text": "twitter",
          "correct": true
        },
        {
          "text": "instagram",
          "correct": false
        },
        {
          "text": "snapchat",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which is not a tool to build responsive websites?",
      "explanation": "We need several tools to build our website. To build a responsive website we need web browsers, responsive bookmarklets, code editors for responsive design testing.",
      "options": [
        {
          "text": "skeleton",
          "correct": true
        },
        {
          "text": "bookmarklets",
          "correct": false
        },
        {
          "text": "code editors",
          "correct": false
        },
        {
          "text": "web browsers",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Linux does not have code editor ___________",
      "explanation": "Code editor is equipment for developing a website. There are many editors available in Windows, Linux and OS X. Linux has Geany, Gedit, BlueFish. Windows have WebMatrix, TextPad, Notepad++. OS X has MacVim, Brackets, TextWrangler.",
      "options": [
        {
          "text": "Geany",
          "correct": false
        },
        {
          "text": "Gedit",
          "correct": false
        },
        {
          "text": "BlueFish",
          "correct": false
        },
        {
          "text": "WebMatrix",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which is not bookmarklet?",
      "explanation": "Bookmarklet is a sort of emulator tool for testing responsive design. It resizes the dimension of viewable area in the browser. There are various bookmarklets available like Screenqueri.es, Resizer, Adobe Edge Inspect, Screen Fly, RWD demonstration, ResponsivePX, Responsinator.",
      "options": [
        {
          "text": "Screen Fly",
          "correct": false
        },
        {
          "text": "Resizer",
          "correct": false
        },
        {
          "text": "Screenqueri.es",
          "correct": false
        },
        {
          "text": "Brackets",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is not a CSS preprocessor?",
      "explanation": "CSS capabilities can be extended by CSS preprocessors. By using it we can compose CSS in more dynamic ways. They allow us to use variables and functions in programming languages like JavaScript, PHP. There are several CSS preprocessors available such as LESS, Stylus, Sass.",
      "options": [
        {
          "text": "LESS",
          "correct": false
        },
        {
          "text": "Sass",
          "correct": false
        },
        {
          "text": "Stylus",
          "correct": false
        },
        {
          "text": "Screen Fly",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For style foundation Bootstrap uses ____________",
      "explanation": "These are some CSS preprocessors that have been adopted in responsive frameworks. Bootstrap utilizes LESS as its style foundation. Foundation uses Sass in styling.",
      "options": [
        {
          "text": "LESS",
          "correct": true
        },
        {
          "text": "Sass",
          "correct": false
        },
        {
          "text": "Resizer",
          "correct": false
        },
        {
          "text": "Stylus",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not a CSS preprocessor compiler?",
      "explanation": "LESS and Sass are written in a language that browsers do not recognize. So there are compilers available to compile CSS preprocessors. Some of them are Less.js, WinLESS, LESS.app, Simpless, ScoutApp, ChrunchApp, Terminal or Command Prompt, Codekit, CompassApp.",
      "options": [
        {
          "text": "LESS.app",
          "correct": false
        },
        {
          "text": "Screenqueri.es",
          "correct": true
        },
        {
          "text": "ScoutApp",
          "correct": false
        },
        {
          "text": "Simpless",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which compiler does not support LESS language?",
      "explanation": "LESS can be compiled on Less.js, WinLESS, LESS.app, ChrunchApp, Simpless, Codekit. These compilers are free of cost. LESS.app can only be supported on OS X and WinLESS only on Windows.",
      "options": [
        {
          "text": "Simpless",
          "correct": false
        },
        {
          "text": "ScoutApp",
          "correct": true
        },
        {
          "text": "LESS.app",
          "correct": false
        },
        {
          "text": "WinLESS",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is not a feature associated with LESS?",
      "explanation": "LESS is based on JavaScript. It was created by Alexis Sellier. LESS allows composing styles with some programming features. Some of them are Variables, Parametric mixins, Nesting rules, Operation, Mixins.",
      "options": [
        {
          "text": "Variable",
          "correct": false
        },
        {
          "text": "PHP",
          "correct": true
        },
        {
          "text": "Opertaion",
          "correct": false
        },
        {
          "text": "Parametric mixins",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Sass is based on ___________",
      "explanation": "Sass is Ruby-bases CSS preprocessor. It was created by Hampton Catlin, Nathan Weizenbaum and Chris Eppstein. It is like LESS, it can add variables, mixins and nesting rules, with a little difference.",
      "options": [
        {
          "text": "Ruby",
          "correct": true
        },
        {
          "text": "jQuery",
          "correct": false
        },
        {
          "text": "JavaScript",
          "correct": false
        },
        {
          "text": "PHP",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which font is default in Skeleton sets?",
      "explanation": "Skeleton sets Helvetica Neue and Helvetica as the default font in body document. If these fonts are not available, it will apply Ariel or default sans-serif fonts to the user’s machine.",
      "options": [
        {
          "text": "Helvetica Neue",
          "correct": true
        },
        {
          "text": "Ariel",
          "correct": false
        },
        {
          "text": "sans-serif",
          "correct": false
        },
        {
          "text": "Calibri",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Adjacent sibling selector is defined with the notation _____________",
      "explanation": "Adjacent sibling selector is defined with a plus (+) notation. It selects the element that directly follows the previous element that was specified. E.g. if we have <div> element that is followed by <p> element.",
      "options": [
        {
          "text": "#",
          "correct": false
        },
        {
          "text": "$",
          "correct": false
        },
        {
          "text": "%",
          "correct": false
        },
        {
          "text": "+",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "General sibling selector is declared with the notation:",
      "explanation": "CSS general sibling selector is new type of selector that is just been added in CSS3. This selector is declared with ~ notation E.g. div ~y { background-color: blue; }, general sibling will target every selected element that follows previous element.",
      "options": [
        {
          "text": "+",
          "correct": false
        },
        {
          "text": "~",
          "correct": true
        },
        {
          "text": "&",
          "correct": false
        },
        {
          "text": "#",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "translate() function is not supported by __________",
      "explanation": "translate() function is supported in Google Chrome 4, Firefox 3.5, Internet Explorer 10, Safari 3.1, Opera 10.5. Vendor prefixes are still required to make transformations work on these browsers.",
      "options": [
        {
          "text": "safari 3.1",
          "correct": false
        },
        {
          "text": "firefox 3.5",
          "correct": false
        },
        {
          "text": "chrome 4",
          "correct": false
        },
        {
          "text": "firefox 4",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "CSS3 transition is not supported by _________",
      "explanation": "the CSS3 transition is supported by Firefox 4, Safari 3.1, Chrome 4, Opera 10.5, Internet Explorer 10 browsers. Internet Explorer 9 does not support CSS3 transition, that is why we can’t see –ms- prefix in the preceding syntax. But Internet Explorer 10 will support CSS3 transition.",
      "options": [
        {
          "text": "Internet Explorer 9",
          "correct": true
        },
        {
          "text": "Internet Explorer 10",
          "correct": false
        },
        {
          "text": "Safari 3.1",
          "correct": false
        },
        {
          "text": "Firefox 4",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which is not the value for CSS transition?",
      "explanation": "CSS3 transition allows to change one CSS rule to another CSS rule gradually rather than instantaneously within a specific duration. There are four values specified in the syntax namely property, timing-function, transition-duration and delay.",
      "options": [
        {
          "text": "transition-duration",
          "correct": false
        },
        {
          "text": "delay",
          "correct": false
        },
        {
          "text": "property",
          "correct": false
        },
        {
          "text": "translate",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which value specifies a length of the transition effect?",
      "explanation": "Property value specifies name for CSS transition effect. The value of transition-duration specifies a length of the transition effect. The value is specified in milliseconds (ms) and seconds (s). E.g. 190ms and 0.8s. The delay in transition effect is give by delay value. Speed curve of transition effect is provided by timing function.",
      "options": [
        {
          "text": "property",
          "correct": false
        },
        {
          "text": "transition-duration",
          "correct": true
        },
        {
          "text": "delay",
          "correct": false
        },
        {
          "text": "timing-function",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which value specifies transition acceleration?",
      "explanation": "The value of transition-function specifies transition acceleration. There are five predefined acceleration types that we can use. They are ease-in, ease, ease-out, ease-in-out and linear. property value specifies name for CSS transition effect. The value of transition-duration specifies a length of the transition effect. The delay in transition effect is give by delay value.",
      "options": [
        {
          "text": "timing-function",
          "correct": true
        },
        {
          "text": "property",
          "correct": false
        },
        {
          "text": "transition-duration",
          "correct": false
        },
        {
          "text": "delay",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Whose value targets CSS property?",
      "explanation": "The value of transition-duration specifies a length of the transition effect. The delay in transition effect is give by delay value. The value of transition-function specifies transition acceleration. The value of property targets the CSS property to which transition effect should be applied. The property should be height, color, width, background etc. But if the value is not explicitly specified, it will take all as the default value, and will be applied to all the properties.",
      "options": [
        {
          "text": "transition-duration",
          "correct": false
        },
        {
          "text": "delay",
          "correct": false
        },
        {
          "text": "property",
          "correct": true
        },
        {
          "text": "timing-function",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The font format compatible for iOS is:",
      "explanation": "Browsers set their own rules that outline which font format to use for web embedding. .ttf format is developed by Apple and microsoft and is mostly used as compatible font format in ios.",
      "options": [
        {
          "text": ".svg",
          "correct": true
        },
        {
          "text": ".ttf",
          "correct": false
        },
        {
          "text": ".eot",
          "correct": false
        },
        {
          "text": ".otf",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which font format is not supported by Firefox?",
      "explanation": "The compatible font format for Firefox is .ttf and .otf. In Firefox 3.6 .woff format is also supported. The compatible font format for Internet Explorer are .eot and .woff, Opera gives support to .ttf, .otf and .svg formats.",
      "options": [
        {
          "text": ".ttf",
          "correct": false
        },
        {
          "text": ".svg",
          "correct": true
        },
        {
          "text": ".woff",
          "correct": false
        },
        {
          "text": ".otf",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " How many columns are used for grid system by bootstrap?",
      "explanation": "Bootstrap uses 12 columns of the grid system. Every column is defined with classes ranging from span1 to span12. After adding several columns, the sum of our span classes should be equal to 12. Columns should be wrapped within <div> element.",
      "options": [
        {
          "text": "14",
          "correct": false
        },
        {
          "text": "11",
          "correct": false
        },
        {
          "text": "16",
          "correct": false
        },
        {
          "text": "12",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not a color function?",
      "explanation": "LESS provides few functions for adjusting colors. Some of the functions are darken(@color, n%), lighten(@color, n%), fade(@color, n%). Lighten makes the color lighter than its initial value, fade lowers the color density, darken makes the color darker than its initial value.",
      "options": [
        {
          "text": "lighten()",
          "correct": false
        },
        {
          "text": "fade()",
          "correct": false
        },
        {
          "text": "darken()",
          "correct": false
        },
        {
          "text": "opaque()",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which property specifies the path to the project when running in web server?",
      "explanation": "http_path specifies a path to the project when running on a web server. It is set to/by default., so the path output will begin with /. E.g. background-image: url(“/image/hj.png”). Folder name for all the images to be stored is specified by images_dir. css_dir specifies folder name for CSS style sheets. sass_dir gives folder name for the sass or SCSS style sheet to be stored.",
      "options": [
        {
          "text": "http_path",
          "correct": true
        },
        {
          "text": "images_dir",
          "correct": false
        },
        {
          "text": "css_dir",
          "correct": false
        },
        {
          "text": "sass_dir",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which property specifies the folder name where CSS style sheets should be saved?",
      "explanation": "sass_dir gives folder name for the sass or SCSS style sheet to be stored. css_dir property specifies the folder name where CSS style sheets should be saved. We can change css_dir value to something like css or styles, but we should also change the folder name in the working directory to the one that matches the change. A folder name where javascript file are stored is given by javascript_dir. The output path in compiled CSS is given by relative_assets.",
      "options": [
        {
          "text": "relative_assets",
          "correct": false
        },
        {
          "text": "sass_dir",
          "correct": false
        },
        {
          "text": "css_dir",
          "correct": true
        },
        {
          "text": "javascript_dir",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following specifies compiles CSS output?",
      "explanation": "The output path in compiled CSS is given by relative_assets. The output_style property specifies compiled CSS output. The accepted values for this property are :nested, :expanded, :compressed or :compact. line_comments specifies whether compass should generate line number where style sheets rule are defined. sass_dir gives folder name for the sass or SCSS style sheet to be stored.",
      "options": [
        {
          "text": "relative_assets",
          "correct": false
        },
        {
          "text": "output_style",
          "correct": true
        },
        {
          "text": "line_comments",
          "correct": false
        },
        {
          "text": "sass_dir",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which property specifies the output path in compiled CSS?",
      "explanation": "sass_dir gives folder name for the sass or SCSS style sheet to be stored. The output_style property specifies compiled CSS output. The relative_assets property specifies the output path in the compiled CSS. If it is set to true, the http_path property will be ignored and the compass will generate a relative URL. line_comments specifies whether compass should generate line number where style sheets rule are defined.",
      "options": [
        {
          "text": "sass_dir",
          "correct": false
        },
        {
          "text": "output_style",
          "correct": false
        },
        {
          "text": "relative_assets",
          "correct": true
        },
        {
          "text": "line_comments",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "To enable slideshow, what we should not be included?",
      "explanation": "To construct HTML for slideshow simply wrap the content or the images within unordered list element with data-orbit. For enabling slideshow we will need to include jquery.js, foundation.js, foundation.orbit.js or zepto.js within HTML.",
      "options": [
        {
          "text": "jquery.js",
          "correct": false
        },
        {
          "text": "button",
          "correct": true
        },
        {
          "text": "foundation.js",
          "correct": false
        },
        {
          "text": "foundation.orbit.js",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which tag is used to let control over the viewport?",
      "explanation": "HTML5 introduced a method to let web designers take control over the viewport by using <meta> tag. We should include <meta> viewport element in all the web pages. <meta> viewport element gives the browser instructions on how to control page’s dimensions and scaling.",
      "options": [
        {
          "text": "<meta>",
          "correct": true
        },
        {
          "text": "<acronym>",
          "correct": false
        },
        {
          "text": "<em>",
          "correct": false
        },
        {
          "text": "<address>",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What should be the set value of the background-size property such that image will fit in the content area?",
      "explanation": "If the background-size property is set to “contain”, the background image will scale and will try to fit in the content area. Still, the image will keep its aspect ratio i.e. the proportional relationship between the image’s width and height.",
      "options": [
        {
          "text": "100%100%",
          "correct": true
        },
        {
          "text": "contain",
          "correct": false
        },
        {
          "text": "cover",
          "correct": false
        },
        {
          "text": "100%",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What should be the set value of background-size property such that image will stretch to cover entire content area?",
      "explanation": "If background-size property is set to “100%100% “ the background image will stretch to cover the entire content area. E.g. div { width: 100%; height: 300px; background-image: url(‘img_khj.jpg’); }",
      "options": [
        {
          "text": " 100%100%",
          "correct": true
        },
        {
          "text": "cover",
          "correct": false
        },
        {
          "text": "contain",
          "correct": false
        },
        {
          "text": "100%",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What should be the set value of background-size property such that image will cover the entire content area?",
      "explanation": "If background-size property is set to “cover”, background image will scale to cover entire content area. “cover” value keeps the aspect ratio and some part of background image may be clipped. E.g. div {width: 100%; height: 390px; background-image: url(‘img_tyu.jpg’); background-size: cover;}",
      "options": [
        {
          "text": "100%",
          "correct": false
        },
        {
          "text": "contain",
          "correct": false
        },
        {
          "text": "cover",
          "correct": true
        },
        {
          "text": "100%100%",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Bootstrap does not use _________",
      "explanation": "Bootstrap is a popular framework. It uses HTML, CSS and jQuery to make responsive web pages. Bootstrap helps us to develop sites that look nice at any size i.e. screen. Tablet, laptop or phone.",
      "options": [
        {
          "text": "HTML",
          "correct": false
        },
        {
          "text": "jQuery",
          "correct": false
        },
        {
          "text": "PHP",
          "correct": true
        },
        {
          "text": "CSS",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which plugin allows the element to become locked or sticky?",
      "explanation": ".alert simply creates an alert message. Affix plugin allows an element to become affixed i.e. sticky or locked to an area on the page. It toggles position:fixed on and off, .alert-link is used on links inside alerts to add matching colored links.",
      "options": [
        {
          "text": ".active",
          "correct": false
        },
        {
          "text": ".alert",
          "correct": false
        },
        {
          "text": ".affix",
          "correct": true
        },
        {
          "text": ".alert-link",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following will display red alert box?",
      "explanation": ".alert-danger displays red alert box. It indicates a dangerous or potentially negative action, .alert simply creates an alert message, .alert-info displays a light-blue alert box which indicates some information, .alert-link used on links inside alerts to add matching colored links.",
      "options": [
        {
          "text": ".alert",
          "correct": false
        },
        {
          "text": ".alert-danger",
          "correct": true
        },
        {
          "text": ".alert-info",
          "correct": false
        },
        {
          "text": ".alert-link",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following indicates blue background color representing something important?",
      "explanation": ".bg-primary adds blue background color to an element. It represents something important. .bg-danger adds red background color to an element representing danger or a negative action, .bg-info adds light-blue color to an element representing some information. A successful or positive action is given by .bg-success.",
      "options": [
        {
          "text": ".bg-success",
          "correct": false
        },
        {
          "text": ".bg-info",
          "correct": false
        },
        {
          "text": ".bg-primary",
          "correct": true
        },
        {
          "text": ".bg-danger",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following indicates current page’s location within the navigational hierarchy?",
      "explanation": ".breadcrumb is a pagination. It indicates the current page’s location within a navigational hierarchy, .btn creates a basic button i.e. gray background and rounded corners, .bg-warnong adds the yellow background color to an element.",
      "options": [
        {
          "text": ".breadcrumb",
          "correct": true
        },
        {
          "text": ".btn",
          "correct": false
        },
        {
          "text": ".active",
          "correct": false
        },
        {
          "text": ".bg-warning",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following groups button together on a single line?",
      "explanation": ".btn-group groups buttons together on a single line, .btn-group-lg is for large button group, it makes all button group larger-increased font-size and padding, .button-group-justified makes a group of buttons span the entire width of the screen.",
      "options": [
        {
          "text": ".btn-group-lg",
          "correct": false
        },
        {
          "text": ".btn-group-justified",
          "correct": false
        },
        {
          "text": ".btn-default",
          "correct": false
        },
        {
          "text": ".btn-group",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following makes a button group appear vertically?",
      "explanation": ".btn-group-vertical makes a button group appear vertically stacked, .btn-group-sm is for small button group which makes all buttons in a button group smaller, .btn-group-xs is for extra small button group, .btn-info is light-blue button representing information.",
      "options": [
        {
          "text": ".btn-group-vertical",
          "correct": true
        },
        {
          "text": ".btn-group-xs",
          "correct": false
        },
        {
          "text": ".btn-group-sm",
          "correct": false
        },
        {
          "text": ".btn-info",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What creates a carat arrow icon?",
      "explanation": ".caret creates arrow icon, which indicates that the button is a dropdown, .carousel creates a carousel (slideshow), .carousel-caption creates caption text for each slide in carousel, .caption adds caption text inside a .thumbnail.",
      "options": [
        {
          "text": ".carousel",
          "correct": false
        },
        {
          "text": ".caret",
          "correct": true
        },
        {
          "text": ".carousel-caption",
          "correct": false
        },
        {
          "text": ".caption",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is a container for slide items?",
      "explanation": ".carousel-inner is a container for slide items, .carousel-caption creates a caption text for each slide in the carousel, .carousel-control is container for next and previous links, .carousel-indicators adds little dots at the bottom of each slide.",
      "options": [
        {
          "text": ".carousel-control",
          "correct": false
        },
        {
          "text": ".caousel-indicators",
          "correct": false
        },
        {
          "text": ".carousel-inner",
          "correct": true
        },
        {
          "text": ".carousel-caption",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What clears floats?",
      "explanation": ".clearfix clears floats, .close indicates a close icon, .checkbox ia a container for checkboxes, .col-*-* is a responsive grid (span 1-12 column), extra small devices phones (<786px), tablets (>=786px), medium devices desktops (>=992px), large devices desktops (>=1200px).",
      "options": [
        {
          "text": ".close",
          "correct": false
        },
        {
          "text": ".clearfix",
          "correct": true
        },
        {
          "text": ".checkbox",
          "correct": false
        },
        {
          "text": ".col-*-*",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following changes order of the grid columns?",
      "explanation": " .col-*-pull-* changes order of the grid column, .col-*-offset-* moves columns to the right, these classes increase left margin of a column by * columns, .col-*-push-* changes order of the grid columns, .collapse indicates collapsible content.",
      "options": [
        {
          "text": ".col-*-pull-*",
          "correct": true
        },
        {
          "text": ".col-*-offset-*",
          "correct": false
        },
        {
          "text": ".col-*-push-*",
          "correct": false
        },
        {
          "text": ".collapse",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following spans full width of screen?",
      "explanation": ".containerfluid is a container that spans the full width of the screen, .container is a fixed width container with widths determined by screen sites, .control-labels allows a label to be used for form validation.",
      "options": [
        {
          "text": ".container",
          "correct": false
        },
        {
          "text": ".control-label",
          "correct": false
        },
        {
          "text": ".container-fluid",
          "correct": true
        },
        {
          "text": ".collapse-in",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which class is used to separate links in dropdown menu?",
      "explanation": ".divider class is there to separate links in dropdown menu with thin horizontal border, .dl-horizontal lines up the terms <dt> and descriptions <dd> in <dl> elements side-by-side, .dropdown creates a toggleable menu that allows user to choose one value from predefined list.",
      "options": [
        {
          "text": ".divider",
          "correct": true
        },
        {
          "text": ".dl-horizontal",
          "correct": false
        },
        {
          "text": ".disabled",
          "correct": false
        },
        {
          "text": ".dropdown",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following adds default styles for dropdown menu container?",
      "explanation": ".dropdown-menu adds default styles for dropdown menu container, .dropdown-header is used to add headers inside dropdown menu, .dropdown-right right-aligns a dropdown menu, .dropdown-toggle is used on the button that should hide and show the dropdown menu.",
      "options": [
        {
          "text": ".dropdown-menu",
          "correct": true
        },
        {
          "text": ".dropdown-toggle",
          "correct": false
        },
        {
          "text": ".dropdown-menu-right",
          "correct": false
        },
        {
          "text": ".dropdown",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which class adds a rounded border around an element?",
      "explanation": ".well adds a rounded border around an element with gray background color and some padding, .well-lg is a large well i.e. for more padding, .well-sm is a small well with less padding.",
      "options": [
        {
          "text": ".well-sm",
          "correct": false
        },
        {
          "text": ".well-lg",
          "correct": false
        },
        {
          "text": ".well",
          "correct": true
        },
        {
          "text": ".divider",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following will show popup-box?",
      "explanation": ".tooltip is for the popup-box that appears when a user moves the mouse pointer over an element, .thumbnail adds a border around an element often used for images or videos to make it look like a thumbnail. .well adds a rounded border around an element with gray background color and some padding. .visible-* is used to show the content by device.",
      "options": [
        {
          "text": ".well",
          "correct": false
        },
        {
          "text": ".visible-*",
          "correct": false
        },
        {
          "text": ".thumbnail",
          "correct": false
        },
        {
          "text": ".tooltip",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following class will show blue text?",
      "explanation": ".text-primary shows blue text color, .text-success shows green text color which indicates success, .text-warning shows yellow or orange text color which indicates warning, .text-muted shows grey color text, .text-danger shows red color text.",
      "options": [
        {
          "text": ".text-primary",
          "correct": true
        },
        {
          "text": ".text-success",
          "correct": false
        },
        {
          "text": ".text-muted",
          "correct": false
        },
        {
          "text": ".text-warning",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following makes a table more compact?",
      "explanation": ".table-condensed makes a table more compact by cutting cell padding in half, .table-hover creates a hoverable table by adding grey background color on table rows on hover, .table-responsive makes table responsive by adding the horizontal scrollbar when needed.",
      "options": [
        {
          "text": ".table-responsive",
          "correct": false
        },
        {
          "text": ".table-hover",
          "correct": false
        },
        {
          "text": ".table-condensed",
          "correct": true
        },
        {
          "text": ".table-bordered",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following creates toggleable tabs?",
      "explanation": ".tab-pane is used together with .tab-content to create toggleable or dynamic tabs or dynamic pills. .table adds basic styling to a table like bottom borders, padding etc. Cutting cell padding in half to make table more compact, .table-condensed is used. A responsive table is created by .table-responsive.",
      "options": [
        {
          "text": ".tab-pane",
          "correct": true
        },
        {
          "text": ".table-responsive",
          "correct": false
        },
        {
          "text": ".table-condensed",
          "correct": false
        },
        {
          "text": ".table",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which class is a container for responsive columns?",
      "explanation": ".row class is for container for responsive columns, .small creates a lighter, secondary text in any heading, .sr-only hides an element on all devices except for screen readers, .show class shows an element.",
      "options": [
        {
          "text": ".sr-only",
          "correct": false
        },
        {
          "text": ".small",
          "correct": false
        },
        {
          "text": ".show",
          "correct": false
        },
        {
          "text": ".row",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following creates yellow progress bar?",
      "explanation": ".progress-bar-warning will create a yellow progress bar indicating warning, .progress-bar-success will show green progress bar indicating success, .progress-bar-danger will show red progress bar indicating danger, .progress-bar-info will show light-blue progress bar indicating information.",
      "options": [
        {
          "text": ".progress-bar-success",
          "correct": false
        },
        {
          "text": ".progress-bar-warning",
          "correct": true
        },
        {
          "text": ".progress-bar-info",
          "correct": false
        },
        {
          "text": ".progress-bar-danger",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which class is a container for progress bars?",
      "explanation": ".progress class is a container for progress bars, .progress-bar creates a progress bar, .progress-bar-success creates a green progress bar and indicates success, .progress-bar-info shows light-blue progress bar indicating information.",
      "options": [
        {
          "text": ".progress",
          "correct": true
        },
        {
          "text": ".progress-bar",
          "correct": false
        },
        {
          "text": ".progress-bar-info",
          "correct": false
        },
        {
          "text": ".progress-bar-success",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is used to align pager buttons to the left side of the page?",
      "explanation": ".previous class is used to align pager buttons to the left side of the page, .prev is used in carousels to indicate a “previous” link, .pre-scrollable makes a <pre> element scrollable, .popover shows popup-box that appears when a user clicks on an element.",
      "options": [
        {
          "text": ".previous",
          "correct": true
        },
        {
          "text": ".prev",
          "correct": false
        },
        {
          "text": ".pre-scrollable",
          "correct": false
        },
        {
          "text": ".popover",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is a container for content inside the panel?",
      "explanation": ".panel-body is a container for content inside the panel, .panel-collapse is for the collapsible panel which toggles between hiding and showing panel, .panel-success shows green panel indicating success, .panel-footer creates a panel footer.",
      "options": [
        {
          "text": ".panel-body",
          "correct": true
        },
        {
          "text": ".panel-collapse",
          "correct": false
        },
        {
          "text": ".panel-success",
          "correct": false
        },
        {
          "text": ".panel-footer",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following creates a pagination?",
      "explanation": ".pagination creates a pagination which is useful when we have a website with lots of pages, used on <ul> elements, .pager creates previous or next buttons, it is used on <ul> elements, .pagination-lg creates large pagination, .pagination-sm creates small pagination.",
      "options": [
        {
          "text": ".pager",
          "correct": false
        },
        {
          "text": ".pagination",
          "correct": true
        },
        {
          "text": ".pagination-lg",
          "correct": false
        },
        {
          "text": ".pagination-sm",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following centers tabs/pills?",
      "explanation": ".nav-justified centers tabs/pills, on screens smaller than 786px the items are stacked and the content will remained centered, .nav nav-pills indicates a pill menu, .nav.navbar-nav contains list items with links inside navigation bar, .nav-stacked is for vertically stack tabs or pills.",
      "options": [
        {
          "text": ".nav-justified",
          "correct": true
        },
        {
          "text": ".nav nav-pills",
          "correct": false
        },
        {
          "text": ".nav-stacked",
          "correct": false
        },
        {
          "text": ".nav.navbar-nav",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is for title of the modal?",
      "explanation": ".modal-title is for the title of the modal, .modal-sm is for small modal, .modal-lg specifies large modal, .modal-open is used on <body> element to prevent page scrolling, .model-header shows header of the modal often contains a title and a close button.",
      "options": [
        {
          "text": ".modal-sm",
          "correct": false
        },
        {
          "text": ".modal-title",
          "correct": true
        },
        {
          "text": ".modal-open",
          "correct": false
        },
        {
          "text": ".modal-lg",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which defines style for body of the modal?",
      "explanation": ".modal-body defines style for the body of the modal, we can add HTML markup here, .modal-content styles modal we can add modal’s header, body and footer, .modal-dialog sets the proper width and margin of the modal.",
      "options": [
        {
          "text": ".modal",
          "correct": false
        },
        {
          "text": ".modal-content",
          "correct": false
        },
        {
          "text": ".modal-body",
          "correct": true
        },
        {
          "text": ".modal-dialog",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following aligns media objects?",
      "explanation": ".media aligns media objects like images or videos often used for comments in a blog post, .media-body specifies the text that should appear next to media object, .media-list creates nested media lists, .media-object indicates a media object.",
      "options": [
        {
          "text": ".media-body",
          "correct": false
        },
        {
          "text": ".media",
          "correct": true
        },
        {
          "text": ".media-list",
          "correct": false
        },
        {
          "text": ".media-object",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following will provide additional information about something?",
      "explanation": ".label adds a grey rounded box to the element, it provides additional information about something e.g. “New”, .jumbortron creates padded grey box with rounded corners that enlarge font sizes of text inside it, .item class added to each carousel item, it may be text or images.",
      "options": [
        {
          "text": ".item",
          "correct": false
        },
        {
          "text": ".jumbotron",
          "correct": false
        },
        {
          "text": ".label",
          "correct": true
        },
        {
          "text": ".label-danger",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following is a container to enhance input by adding an icon?",
      "explanation": " .input-group is a container to enhance an input by adding an icon, text or button in front or behind it as a “help text”, .input-group-lg is for large input group, .input-group-addon is used together with .input-group class, this makes it possible to add an icon or help text next to input field.",
      "options": [
        {
          "text": ".input-group-btn",
          "correct": false
        },
        {
          "text": ".input-group-addon",
          "correct": false
        },
        {
          "text": ".input-group",
          "correct": true
        },
        {
          "text": ".input-group-lg",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following are the fades in a tab?",
      "explanation": ".in fades in tabs, .info adds a light-blue background to table row, it indicates neutral informative change or action, .initialism displays the text inside <abbr> element in a slightly smaller font size, .icon-prev specifies unicode icon used in corousels.",
      "options": [
        {
          "text": ".in",
          "correct": true
        },
        {
          "text": ".info",
          "correct": false
        },
        {
          "text": ".initialism",
          "correct": false
        },
        {
          "text": ".icon-prev",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following will add feedback icons for inputs?",
      "explanation": ".has-feedback adds feedback icons for inputs like checkmark, warning and error signs, .has-danger adds red color to label and red border to the input, as well as an error icon inside the input, .has-success adds green color to label and green border to input, as well as checkmark icon inside input.",
      "options": [
        {
          "text": ".has-warning",
          "correct": false
        },
        {
          "text": ".has-danger",
          "correct": false
        },
        {
          "text": ".has-success",
          "correct": false
        },
        {
          "text": ".has-feedback",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following will create hamburger menu?",
      "explanation": ".icon-bar is used in the navbar to create hamburger menu i.e. three horizontal bars, .icon-next creates Unicode icon, used in carousels, this is often replaced by glyphicon, .icon-prev is Unicode icon used in carousels, .img-circle shapes an image to a circle.",
      "options": [
        {
          "text": ".icon-next",
          "correct": false
        },
        {
          "text": ".icon-bar",
          "correct": true
        },
        {
          "text": ".icon-prev",
          "correct": false
        },
        {
          "text": ".img-circle",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following displays text inside <abbr> in slightly smaller font size:",
      "explanation": ".initialism displays text inside <abbr> element in slightly smaller font size, .input-group is a container to enhance input by adding an icon, text or button in front or behind it as a “help text”, .info adds light-blue background to table row, indicating a neutral informative change or action.",
      "options": [
        {
          "text": ".info",
          "correct": false
        },
        {
          "text": ".input-group",
          "correct": false
        },
        {
          "text": ".initialism",
          "correct": true
        },
        {
          "text": ".in",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following adds checkmark icon inside input?",
      "explanation": ".has-warning adds yellow or orange color to label and a yellow or orange border to the input, as well as checkmark icon inside the input, it is used together with .has-feedback, .help-block in a block of help text that breaks onto the new line and may extend beyond one line.",
      "options": [
        {
          "text": ".has-warning",
          "correct": true
        },
        {
          "text": ".help-block",
          "correct": false
        },
        {
          "text": ".has-success",
          "correct": false
        },
        {
          "text": ".has-feedback",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which shapes an image to a thumbnail?",
      "explanation": ".img-thumbnail shapes image to a thumbnail (borders), .img-rounded adds rounded crners to an image, .img-responsive makes an image responsive, .img-circle shapes an image to a circle, it is not supported in IE8 and earlier versions.",
      "options": [
        {
          "text": ".img-circle",
          "correct": false
        },
        {
          "text": ".img-responsive",
          "correct": false
        },
        {
          "text": ".img-rounded",
          "correct": false
        },
        {
          "text": ".img-thumbnail",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following forces an element to be hidden?",
      "explanation": ".hidden forces an element to be hidden (display:none), .hidden-* hides content depending on screen size, .hide is deprecates, .icon-bar is used in the navbar to create hamburger menu.",
      "options": [
        {
          "text": ".hidden",
          "correct": true
        },
        {
          "text": ".hidden-*",
          "correct": false
        },
        {
          "text": ".hide",
          "correct": false
        },
        {
          "text": ".icon-bar",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following adds plain text next to form label?",
      "explanation": ".form-control-static adds plain text next to form label within a horizontal form, .form-group is a container for form input and label, .form-inline makes a <form> left-aligned with inline-block controls, .form-control is used on input, textarea, and select elements to span the entire width of the page and make them responsive.",
      "options": [
        {
          "text": ".form-control-static",
          "correct": true
        },
        {
          "text": ".form-group",
          "correct": false
        },
        {
          "text": ".form-inline",
          "correct": false
        },
        {
          "text": ".form-control",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which is not a container for embedded content?",
      "explanation": ".embed-responsive-item is used inside .embed-responsive, scales the video nicely to the parent element, .embed-responsive, .embed-responsive-16by9, .embed-responsive-4by3 are containers for embedded content. They creates given aspect ratio embedded content.",
      "options": [
        {
          "text": ".embed-responsive",
          "correct": false
        },
        {
          "text": ".embed-responsive-16by9",
          "correct": false
        },
        {
          "text": ".embed-responsive-4by3",
          "correct": false
        },
        {
          "text": ".embed-responsive-item",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following removes the default list-style and left margin on list items?",
      "explanation": ".list-unstyled removes default list-style and left margin on list items, it works on both <ul> and <ol>, this class only applies to immediate children list items to remove the default list-style from any nested lists, can be applied to any listed lists as well. .initialism displays text inside <abbr> tag. All items in a single line is displayed by .list-inline.",
      "options": [
        {
          "text": ".list-unstyled",
          "correct": true
        },
        {
          "text": ".blockquote-reverse",
          "correct": false
        },
        {
          "text": ".list-inline",
          "correct": false
        },
        {
          "text": ".initialism",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What lines up the terms and descriptions in <dl> element side by side?",
      "explanation": ".dl-horizontal lines up the terms and descriptions in <dl> element side-by-side, it starts off like default <dl>s, but when browser window expands it will line up side-by-side. .list-unstyled removes default list-style and left margin on list items. .initialism displays text inside <abbr> tag.",
      "options": [
        {
          "text": ".list-inline",
          "correct": false
        },
        {
          "text": ".dl-horizontal",
          "correct": true
        },
        {
          "text": ".list-unstyled",
          "correct": false
        },
        {
          "text": ".initialism",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which class makes a text stand out?",
      "explanation": ".lead makes a text stand out, .small indicates smaller text, set to 85% of the size of the parent, .text-left indicates left-aligned text, .text-center indicates center-aligned text.",
      "options": [
        {
          "text": ".text-left",
          "correct": false
        },
        {
          "text": ".small",
          "correct": false
        },
        {
          "text": ".lead",
          "correct": true
        },
        {
          "text": ".text-center",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following indicates dropdown functionality?",
      "explanation": ".caret indicates dropdown functionality, it will reverse automatically in dropup menus, .close indicates a close icon, .sr-only hides an element to all devices except screen readers. .text-hide hides the text present in document.",
      "options": [
        {
          "text": " .caret",
          "correct": true
        },
        {
          "text": ".close",
          "correct": false
        },
        {
          "text": ".sr-only",
          "correct": false
        },
        {
          "text": ".text-hide",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which class separates items inside dropdown menu?",
      "explanation": ".divider separates items inside dropdown menu with horizontal line, .disabled disables an item in dropdown menu, .collapse indicates collapsible content which can be hidden or shown on demand. .dropdown-header class add header inside dropdown menu.",
      "options": [
        {
          "text": ".divider",
          "correct": true
        },
        {
          "text": ".disabled",
          "correct": false
        },
        {
          "text": ".collapse",
          "correct": false
        },
        {
          "text": ".dropdown-header",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following shown collapsible content by default?",
      "explanation": ".collapse.in shows collapsible content by default, .panel-collapse shows collapsible panel, toggle between hiding and showing panel, .collapse indicates collapsible content which can be hidden or shown on demand. .dropdown-header class add header inside dropdown menu.",
      "options": [
        {
          "text": ".dropdown-header",
          "correct": false
        },
        {
          "text": ".collapse",
          "correct": false
        },
        {
          "text": ".collapse.in",
          "correct": true
        },
        {
          "text": ".panel-collapse",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which style button that should open navbar on small screens?",
      "explanation": ".navbar-toggle styles button that should open navbar on small screens, often used together with three .icon-bar classes to indicate a toggleable menu icon, .navbar-text vertical align any elements inside navbar that are not links. Left, top and right borders from the nav bar can be removed by .navbar-static-top. Alignment of nav links, text and buttons in the nav bar to the right can be done by .navbar-right.",
      "options": [
        {
          "text": ".navbar-toggle",
          "correct": true
        },
        {
          "text": ".navbar-text",
          "correct": false
        },
        {
          "text": ".navbar-static-top",
          "correct": false
        },
        {
          "text": ".navbar-right",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which is used on a <ul> container?",
      "explanation": ".navbar-nav is used on <ul> container that contains list items with links inside a navigation bar, .navbar-right aligns nav links, forms, buttons or text in navbar to the right. Left, top and right borders from the nav bar can be removed by .navbar-static-top. .navbar-toggle styles button that should open navbar on small screens.",
      "options": [
        {
          "text": ".navbar-static-top",
          "correct": false
        },
        {
          "text": ".navbar-nav",
          "correct": true
        },
        {
          "text": ".navbar-toggle",
          "correct": false
        },
        {
          "text": ".navbar-right",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following removes left, top and right borders from navbar?",
      "explanation": ".navbar-nav is used on <ul> container that contains list items with links inside a navigation bar. .navbar-right aligns nav links, forms, buttons or text in navbar to the right. .navbar-static-top removes left, top and right borders (rounded corners) from navbar, default navbar has a grey border and 4px border-radius by default, .navbar-toggle styles button that should open navbar on small screens.",
      "options": [
        {
          "text": ".navbar-toggle",
          "correct": false
        },
        {
          "text": ".navbar-right",
          "correct": false
        },
        {
          "text": ".navbar-static-top",
          "correct": true
        },
        {
          "text": ".navabr-nav",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following aligns .pager previous button to left?",
      "explanation": ".previous aligns .pager previous button to the left, .next aligns .pager next button to the right, .disabled indicates unclickable link, .pager provides simple pagination links (next/previous).",
      "options": [
        {
          "text": ".disabled",
          "correct": false
        },
        {
          "text": ".pager",
          "correct": false
        },
        {
          "text": ".next",
          "correct": false
        },
        {
          "text": ".previous",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which class indicates new or unread items?",
      "explanation": ".badge class indicates unread or new items, .jumbotron indicates a big box for calling extra attention to featured content or information, .label label-success indicates a green label of type “success”. .pager provides simple pagination links (next/previous).",
      "options": [
        {
          "text": ".jumbortron",
          "correct": false
        },
        {
          "text": ".badge",
          "correct": true
        },
        {
          "text": ".label label-success",
          "correct": false
        },
        {
          "text": ".pager",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following will display a grey label?",
      "explanation": ".label label-default indicates a default grey label, .label label-primary indicates blue label of type “primary”, .label label-success indicates green label of type “success”, .label label-info indicates light blue label of type “info”.",
      "options": [
        {
          "text": ".label label-info",
          "correct": false
        },
        {
          "text": ".label label-primary",
          "correct": false
        },
        {
          "text": ".label label-success",
          "correct": false
        },
        {
          "text": ".label label-default",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which class indicates the current page?",
      "explanation": " .active indicates the current page, .disabled indicates unclickable link, .pagination-lg is used with .pagination to provide larger pagination, .pagination-sm is used to provide smaller pagination.",
      "options": [
        {
          "text": ".active",
          "correct": true
        },
        {
          "text": ".disables",
          "correct": false
        },
        {
          "text": ".pagination-sm",
          "correct": false
        },
        {
          "text": ".pagiantion-lg",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following is added to link or header element?",
      "explanation": ".navbar creates navigation bar. .navbar-brand added to link or header element inside navbar to represent a logo or header, .navbar-btn vertically aligns button inside navbar, .nabar-default creates default navigation bar.",
      "options": [
        {
          "text": ".navbar-default",
          "correct": false
        },
        {
          "text": ".navbar",
          "correct": false
        },
        {
          "text": ".navbar-btn",
          "correct": false
        },
        {
          "text": ".navbar-brand",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What creates black navigation bar?",
      "explanation": ".navbar-inverse creates a black navigation bar instead of light grey, .navbar-header added to container element that contains link or element that represent logo or header, .navbar-link styles an element to look like link inside the navbar. Adding form elements inside the navbar to vertically center them is done by .navbar-form.",
      "options": [
        {
          "text": ".navbar-inverse",
          "correct": true
        },
        {
          "text": ".navbar-header",
          "correct": false
        },
        {
          "text": ".navbar-form",
          "correct": false
        },
        {
          "text": ".navbar-link",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How many glyphs does bootstrap include?",
      "explanation": "Bootstrap includes 260 glyphs from Glyphicon Halflings set. They are normally not available for free, but their creator has made them available for Bootstrap free of cost.",
      "options": [
        {
          "text": "369",
          "correct": false
        },
        {
          "text": "360",
          "correct": false
        },
        {
          "text": "260",
          "correct": true
        },
        {
          "text": "100",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following allows an element to lock to an area on the page?",
      "explanation": "The affix plugin allows an element to become affixed (locked) to an area on the page. It is often used with navigation menus or social icon buttons, to make them “stick” to the specific area while scrolling up and down the page. An alert message box is created on window by alert element. popover box displays when user clicks on that element. Tootlip is popoup box which appears when user hovers the mouse pointer on it.",
      "options": [
        {
          "text": "affix",
          "correct": true
        },
        {
          "text": "alert",
          "correct": false
        },
        {
          "text": "popover",
          "correct": false
        },
        {
          "text": "tooltip",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following occurs after fixed positioned is added to the element?",
      "explanation": "affixed.bs.affix occurs after fixed positioning is added to the element e.g. after .affix-top class is replaced with .affix class, affix-bs.affix occurs before fixed positioning is added to the element e.g. when .affix-top class is to be replaced with .affix class. Affix-top-bs.affix occurs before top ekement return to its original place.  Affixed-top-bs.affix occurs before top ekement return to its original place.",
      "options": [
        {
          "text": "affix.bs.affix",
          "correct": false
        },
        {
          "text": "affixed.bs.affix",
          "correct": true
        },
        {
          "text": "affix-top.bs.affix",
          "correct": false
        },
        {
          "text": "affixed-top.bs.affix",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What indicates a closable alert box?",
      "explanation": ".alert-dismissible indicates a closable alert box, together with .close class, this class is used to close the alert, adds extra padding, .alert-danger creates the red alert, indicates dangerous or potentially negative action. .alert-link is used on links inside alerts to give matching coloured links. .alert-success displays a green alert.",
      "options": [
        {
          "text": " .alert-danger",
          "correct": false
        },
        {
          "text": ".alert-dismissible",
          "correct": true
        },
        {
          "text": ".alert-link",
          "correct": false
        },
        {
          "text": ".alert-success",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following makes the button appear pressed?",
      "explanation": ".active makes the button appear pressed, .disabled makes button disabled, .btn-link makes the button look like a link, .btn-block makes a block-level button, spans the full width of the parent element.",
      "options": [
        {
          "text": ".btn-link",
          "correct": false
        },
        {
          "text": ".disabled",
          "correct": false
        },
        {
          "text": ".active",
          "correct": true
        },
        {
          "text": ".btn-block",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What changes button text to the original text?",
      "explanation": ".button(“reset”) changes button text to original text if changed, .button(“toggle”) makes button look pressed, .button(“loading”) disables the button and changes the button text to “loading…” .button(“string”) specifies a new button.",
      "options": [
        {
          "text": ".button(“loading”)",
          "correct": false
        },
        {
          "text": ".button(“string”)",
          "correct": false
        },
        {
          "text": ".button(“reset”)",
          "correct": true
        },
        {
          "text": ".button(“toggle”)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What adds slides to carousel?",
      "explanation": ".carousel creates a slideshow. .carousel-inner is a container for slide items. .carousel-inner adds slides to the carousel, .item specifies the content of each slide, .carousel-indicators adds indicators for the carousel, these are little dots at bottom of each slide which indicates how many slides are there in the carousel and the slide which the user is currently viewing.",
      "options": [
        {
          "text": ".carousel",
          "correct": false
        },
        {
          "text": ".carousel-inner",
          "correct": true
        },
        {
          "text": ".item",
          "correct": false
        },
        {
          "text": ".carousel-indicators",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "The default value for an interval is __________",
      "explanation": "interval specifies the delay in milliseconds between each slide, we can set the interval to false to stop items from automatically sliding, its default value is 5000. The set value should be number or Boolean false.",
      "options": [
        {
          "text": "4000",
          "correct": false
        },
        {
          "text": "5000",
          "correct": true
        },
        {
          "text": "1000",
          "correct": false
        },
        {
          "text": "2390",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What activates the collapsible element with an option?",
      "explanation": ".collapse(“options”) activates collapsible element with an option, .collapse(“toggle”) toggles collapsible element, .collapse(“show”) shows collapsible element, .collapse(“hide”) hides collapsible element.",
      "options": [
        {
          "text": ".collapse(“options”)",
          "correct": true
        },
        {
          "text": ".collapse(“show”)",
          "correct": false
        },
        {
          "text": ".collapse(“”toggle)",
          "correct": false
        },
        {
          "text": ".collapse(“hide”)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which event occurs when collapsible element is fully shown?",
      "explanation": "shown.bs.collapse occurs when collapsible element is fully shown after CSS transitions have completed, show..bs.collapse occurs when collapsible element is about to be shown. hidden.bs.collapse occurs when collapsible element is fully hidden. .hide.bs.collapse occurs when collapsible element is about to be hidden.",
      "options": [
        {
          "text": "show.bs.collapse",
          "correct": false
        },
        {
          "text": "shown.bs.collapse",
          "correct": true
        },
        {
          "text": "hidden.bs.collapse",
          "correct": false
        },
        {
          "text": "hide.bs.collapse",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following fades the model in and out?",
      "explanation": ".fade adds an animation or transition effect which fades modal in and out, .modal-sm specifies a small modal, .modal-lg specifies a large modal, .modal-content style modal properly with border, background-color etc.",
      "options": [
        {
          "text": ".modal-content",
          "correct": false
        },
        {
          "text": ".moal-lg",
          "correct": false
        },
        {
          "text": ".fade",
          "correct": true
        },
        {
          "text": ".modal-sm",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What appends the popover to specific elements?",
      "explanation": "container appends the popover to specific element, e.g. container: ‘body’, content specifies the text inside popover’s body, delay specifies the number of milliseconds it will take to open and close popover. The popover position is specified by placement.",
      "options": [
        {
          "text": "container",
          "correct": true
        },
        {
          "text": "content",
          "correct": false
        },
        {
          "text": "delay",
          "correct": false
        },
        {
          "text": "placement",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following specifies header text of popover?",
      "explanation": "title specifies the header text of popover, its default value is “”, trigger specifies how popover is triggered, placement specifies popover position. A popover can be added to specified selector by selector.",
      "options": [
        {
          "text": "title",
          "correct": true
        },
        {
          "text": "trigger",
          "correct": false
        },
        {
          "text": "selector",
          "correct": false
        },
        {
          "text": "placement",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " What is the default value of offset?",
      "explanation": "The default value of offset is 10, it specifies number of pixels to offset from top when calculating the position of scroll.",
      "options": [
        {
          "text": "20",
          "correct": false
        },
        {
          "text": "10",
          "correct": true
        },
        {
          "text": "30",
          "correct": false
        },
        {
          "text": "50",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": " Which of the following method will hide and destroy tooltip?",
      "explanation": ".tooltip(“destroy”) hides and destroys the tooltip, .tooltip(“hide”) hides the tooltip, .tooltip(options) activates the tooltip with an option. .tooltip(“toggle”) toggles the tooltip.",
      "options": [
        {
          "text": ".tooltip(“hide”)",
          "correct": false
        },
        {
          "text": ".tooltip(“toggle”)",
          "correct": false
        },
        {
          "text": ".tooltip(“destroy”)",
          "correct": true
        },
        {
          "text": ".tooltip(options)",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "How many classes does bootstrap grid system has?",
      "explanation": "Bootstrap grid system has four classes. Xs, sm, md, lg. as is for phones having screens less than 786px wide, sm is for tablets. Screens equal to or greater than 768px, md is for small laptops, screen equal to or greater than 992px wide, lg is for laptops and desktops, Screens equal to or greater than 1200px wide.",
      "options": [
        {
          "text": "3",
          "correct": false
        },
        {
          "text": "2",
          "correct": false
        },
        {
          "text": "1",
          "correct": false
        },
        {
          "text": "4",
          "correct": true
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is bootstrap’s global default font-size?",
      "explanation": "Bootstrap’s global default font-size is 14px, with line-height of 1.428. This is applied to  element and all paragraphs. In addition all <p> elements have bottom margins.",
      "options": [
        {
          "text": "12px",
          "correct": false
        },
        {
          "text": "14px",
          "correct": true
        },
        {
          "text": "10px",
          "correct": false
        },
        {
          "text": "9px",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Progress bars are not supported in ______________",
      "explanation": "Progress bars are not supported in Internet Explorer 9 and earlier versions, because they use CSS3 transitions and animations to achieve some of the effects. For improving accessibility for people using screen readers, we should include aria-* attributes.",
      "options": [
        {
          "text": "Internet Explorer 10",
          "correct": false
        },
        {
          "text": "Internet Explorer 9",
          "correct": true
        },
        {
          "text": "Opera",
          "correct": false
        },
        {
          "text": "Chrome",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which of the following clears bottom-margin of each panel?",
      "explanation": ".panel-group class clears bottom-margin of each panel. It also group many panels together, we can wrap <div> with class .panel-group around them. Footer to the panel is added by .panel-footer. Heading to the panel is given by .panel-heading class. The content inside the panel is in .panel-body.",
      "options": [
        {
          "text": ".panel-group",
          "correct": true
        },
        {
          "text": ".panel-footer",
          "correct": false
        },
        {
          "text": ".panel-heading",
          "correct": false
        },
        {
          "text": ".panel-body",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "For inserting plain text we use __________",
      "explanation": "If we need to insert plain text next to a form label within horizontal form we can use .form-control-static class on <p> element. The .input-group class is a container to enhance input by adding an icon, text or button in front or behind it. An icon or help text next to the input field and button next to input is attached by .input-group-addon and .input-group-btn respectively.",
      "options": [
        {
          "text": ".form-control-static",
          "correct": true
        },
        {
          "text": ".input-group",
          "correct": false
        },
        {
          "text": ".input-group-addon",
          "correct": false
        },
        {
          "text": ".input-group-btn",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which attribute is used to input to prevent user input?",
      "explanation": "A button is disabled by .disabled class. We can add readonly attribute to an input to prevent user input. .sr-only class is applied on non-visible labels, disabled attribute is added to disabled an input field.",
      "options": [
        {
          "text": "readonly",
          "correct": true
        },
        {
          "text": ".sr-only",
          "correct": false
        },
        {
          "text": "disabled",
          "correct": false
        },
        {
          "text": ".has-feedback",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "What is the range of dimension for small devices?",
      "explanation": "Small devices are defined as a screen width from 768px to 991px. For small devices we use the class .col-sm-*, for medium devices the screen width from 992px to 1199px.",
      "options": [
        {
          "text": "450px to 700px",
          "correct": false
        },
        {
          "text": "768px to 991px",
          "correct": true
        },
        {
          "text": "992px to 1199px",
          "correct": false
        },
        {
          "text": "120px to 500px",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    },
    {
      "type": "MCQ",
      "statement": "Which will change the order of a grid columns?",
      "explanation": "We can change order of the grid columns with .col-md-push-* and .col-md-pull-* classes, we can move columns to right using .col-md-offset class. .clearfix class clears float. A column layout for small device is done by .col-sm-*.",
      "options": [
        {
          "text": ".col-md-push-*",
          "correct": true
        },
        {
          "text": ".col-md-offset-*",
          "correct": false
        },
        {
          "text": ".clearfix",
          "correct": false
        },
        {
          "text": ".col-sm-*",
          "correct": false
        }
      ],
      "source": "https://www.sanfoundry.com"
    }
  ]
}
